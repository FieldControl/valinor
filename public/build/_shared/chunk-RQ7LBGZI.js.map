{
  "version": 3,
  "sources": ["../../../node_modules/@remix-run/router/history.ts", "../../../node_modules/@remix-run/router/utils.ts", "../../../node_modules/@remix-run/router/router.ts", "../../../node_modules/react-router/lib/context.ts", "../../../node_modules/react-router/lib/hooks.tsx", "../../../node_modules/react-router/lib/components.tsx", "../../../node_modules/react-router/index.ts", "../../../node_modules/react-router-dom/dom.ts", "../../../node_modules/react-router-dom/index.tsx", "../../../node_modules/react-router-dom/server.js", "../../../node_modules/@remix-run/react/dist/esm/browser.js", "../../../node_modules/@remix-run/react/dist/esm/_virtual/_rollupPluginBabelHelpers.js", "../../../node_modules/@remix-run/react/dist/esm/components.js", "../../../node_modules/@remix-run/react/dist/esm/errorBoundaries.js", "../../../node_modules/@remix-run/react/dist/esm/invariant.js", "../../../node_modules/@remix-run/react/dist/esm/links.js", "../../../node_modules/@remix-run/react/dist/esm/routeModules.js", "../../../node_modules/@remix-run/react/dist/esm/markup.js", "../../../node_modules/@remix-run/react/dist/esm/transition.js", "../../../node_modules/@remix-run/react/dist/esm/warnings.js", "../../../node_modules/@remix-run/react/dist/esm/errors.js", "../../../node_modules/@remix-run/react/dist/esm/routes.js", "../../../node_modules/@remix-run/react/dist/esm/data.js", "../../../node_modules/@remix-run/react/dist/esm/index.js", "../../../node_modules/@remix-run/react/dist/esm/scroll-restoration.js", "../../../node_modules/@remix-run/react/dist/esm/server.js"],
  "sourcesContent": ["////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n", "import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    text?: Submission[\"text\"];\n    formData?: Submission[\"formData\"];\n    json?: Submission[\"json\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n", "import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  DeferredData,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n  V7_MutationFormMethod,\n  V7_FormMethod,\n  HTMLFormMethod,\n  MutationFormMethod,\n  MapRoutePropertiesFunction,\n} from \"./utils\";\nimport {\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers,\n    });\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n\n        return startRedirectNavigation(state, actionResult, {\n          submission,\n          isFetchActionRedirect: true,\n        });\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(\n      submission,\n      existingFetcher ? existingFetcher.data : undefined\n    );\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n    // Check if this an absolute external redirect that goes to a new origin\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n\n      if (routerWindow.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let activeSubmission =\n      submission || getSubmissionFromNavigation(state.navigation);\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: getLoadingNavigation(redirectLocation),\n        fetcherSubmission: activeSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a submission, we will preserve it through the redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        activeSubmission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => createUseMatchesMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n    \" _hasFetcherDoneAnything \": true,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n    \" _hasFetcherDoneAnything \": true,\n  };\n  return fetcher;\n}\n//#endregion\n", "import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n", "import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  IDLE_BLOCKER,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n", "import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: FutureConfig;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: FutureConfig;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n", "import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig as RouterFutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n  FutureConfig,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n", "import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n", "/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar router = require('@remix-run/router');\nvar reactRouter = require('react-router');\nvar reactRouterDom = require('react-router-dom');\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\n/**\n * A <Router> that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = reactRouterDom.parsePath(locationProp);\n  }\n  let action = router.Action.Pop;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state || null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /*#__PURE__*/React__namespace.createElement(reactRouterDom.Router, {\n    basename: basename,\n    children: children,\n    location: location,\n    navigationType: action,\n    navigator: staticNavigator,\n    static: true\n  });\n}\n/**\n * A Data Router that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\nfunction StaticRouterProvider({\n  context,\n  router: router$1,\n  hydrate = true,\n  nonce\n}) {\n  !(router$1 && context) ? process.env.NODE_ENV !== \"production\" ? router.UNSAFE_invariant(false, \"You must provide `router` and `context` to <StaticRouterProvider>\") : router.UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = {\n    router: router$1,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let hydrateScript = \"\";\n  if (hydrate !== false) {\n    let data = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    };\n    // Use JSON.parse here instead of embedding a raw JS object here to speed\n    // up parsing on the client.  Dual-stringify is needed to ensure all quotes\n    // are properly escaped in the resulting string.  See:\n    //   https://v8.dev/blog/cost-of-javascript-2019#json\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  let {\n    state\n  } = dataRouterContext.router;\n  return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, /*#__PURE__*/React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React__namespace.createElement(reactRouterDom.Router, {\n    basename: dataRouterContext.basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: dataRouterContext.navigator,\n    static: dataRouterContext.static\n  }, /*#__PURE__*/React__namespace.createElement(DataRoutes, {\n    routes: router$1.routes,\n    state: state\n  })))), hydrateScript ? /*#__PURE__*/React__namespace.createElement(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: nonce,\n    dangerouslySetInnerHTML: {\n      __html: hydrateScript\n    }\n  }) : null);\n}\nfunction DataRoutes({\n  routes,\n  state\n}) {\n  return reactRouter.UNSAFE_useRoutesImpl(routes, undefined, state);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // deserializeErrors in react-router-dom/index.tsx :)\n    if (router.isRouteErrorResponse(val)) {\n      serialized[key] = {\n        ...val,\n        __type: \"RouteErrorResponse\"\n      };\n    } else if (val instanceof Error) {\n      // Do not serialize stack traces from SSR for security reasons\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.\n        ...(val.name !== \"Error\" ? {\n          __subType: val.name\n        } : {})\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(`You cannot use navigator.push() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`);\n    },\n    replace(to) {\n      throw new Error(`You cannot use navigator.replace() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere ` + `in your app.`);\n    },\n    go(delta) {\n      throw new Error(`You cannot use navigator.go() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${delta})\\` somewhere in your app.`);\n    },\n    back() {\n      throw new Error(`You cannot use navigator.back() on the server because it is a stateless ` + `environment.`);\n    },\n    forward() {\n      throw new Error(`You cannot use navigator.forward() on the server because it is a stateless ` + `environment.`);\n    }\n  };\n}\nfunction createStaticHandler(routes, opts) {\n  return router.createStaticHandler(routes, {\n    ...opts,\n    mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties\n  });\n}\nfunction createStaticRouter(routes, context) {\n  let manifest = {};\n  let dataRoutes = router.UNSAFE_convertRoutesToDataRoutes(routes, reactRouter.UNSAFE_mapRouteProperties, undefined, manifest);\n  // Because our context matches may be from a framework-agnostic set of\n  // routes passed to createStaticHandler(), we update them here with our\n  // newly created/enhanced data routes\n  let matches = context.matches.map(match => {\n    let route = manifest[match.route.id] || match.route;\n    return {\n      ...match,\n      route\n    };\n  });\n  let msg = method => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get state() {\n      return {\n        historyAction: router.Action.Pop,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: router.IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: new Map(),\n        blockers: new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return router.IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return router.IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    _internalFetchControllers: new Map(),\n    _internalActiveDeferreds: new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : reactRouterDom.createPath(to);\n}\nfunction encodeLocation(to) {\n  // Locations should already be encoded on the server, so just return as-is\n  let path = typeof to === \"string\" ? reactRouterDom.parsePath(to) : to;\n  return {\n    pathname: path.pathname || \"\",\n    search: path.search || \"\",\n    hash: path.hash || \"\"\n  };\n}\n// This utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\nconst ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\n\nexports.StaticRouter = StaticRouter;\nexports.StaticRouterProvider = StaticRouterProvider;\nexports.createStaticHandler = createStaticHandler;\nexports.createStaticRouter = createStaticRouter;\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"node_modules/@remix-run/react/dist/esm/browser.js\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"node_modules/@remix-run/react/dist/esm/browser.js\");\n}\n// REMIX HMR END\n\n/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { RemixContext } from './components.js';\nimport { RemixErrorBoundary, RemixRootDefaultErrorBoundary } from './errorBoundaries.js';\nimport { deserializeErrors } from './errors.js';\nimport { createClientRoutesWithHMRRevalidationOptOut, createClientRoutes } from './routes.js';\n\n/* eslint-disable prefer-let/prefer-let */\n\n/* eslint-enable prefer-let/prefer-let */\n\nlet router;\nlet hmrAbortController;\nlet hmrRouterReadyResolve;\n// There's a race condition with HMR where the remix:manifest is signaled before\n// the router is assigned in the RemixBrowser component. This promise gates the\n// HMR handler until the router is ready\nlet hmrRouterReadyPromise = new Promise(resolve => {\n  // body of a promise is executed immediately, so this can be resolved outside\n  // of the promise body\n  hmrRouterReadyResolve = resolve;\n}).catch(() => {\n  // This is a noop catch handler to avoid unhandled promise rejection warnings\n  // in the console. The promise is never rejected.\n  return undefined;\n});\nif (import.meta && import.meta.hot) {\n  import.meta.hot.accept(\"remix:manifest\", async ({\n    assetsManifest,\n    needsRevalidation\n  }) => {\n    let router = await hmrRouterReadyPromise;\n    // This should never happen, but just in case...\n    if (!router) {\n      console.error(\"Failed to accept HMR update because the router was not ready.\");\n      return;\n    }\n    let routeIds = [...new Set(router.state.matches.map(m => m.route.id).concat(Object.keys(window.__remixRouteModules)))];\n    if (hmrAbortController) {\n      hmrAbortController.abort();\n    }\n    hmrAbortController = new AbortController();\n    let signal = hmrAbortController.signal;\n\n    // Load new route modules that we've seen.\n    let newRouteModules = Object.assign({}, window.__remixRouteModules, Object.fromEntries((await Promise.all(routeIds.map(async id => {\n      var _assetsManifest$hmr, _window$__remixRouteM, _window$__remixRouteM2, _window$__remixRouteM3;\n      if (!assetsManifest.routes[id]) {\n        return null;\n      }\n      let imported = await import(assetsManifest.routes[id].module + `?t=${(_assetsManifest$hmr = assetsManifest.hmr) === null || _assetsManifest$hmr === void 0 ? void 0 : _assetsManifest$hmr.timestamp}`);\n      return [id, {\n        ...imported,\n        // react-refresh takes care of updating these in-place,\n        // if we don't preserve existing values we'll loose state.\n        default: imported.default ? ((_window$__remixRouteM = window.__remixRouteModules[id]) === null || _window$__remixRouteM === void 0 ? void 0 : _window$__remixRouteM.default) ?? imported.default : imported.default,\n        CatchBoundary: imported.CatchBoundary ? ((_window$__remixRouteM2 = window.__remixRouteModules[id]) === null || _window$__remixRouteM2 === void 0 ? void 0 : _window$__remixRouteM2.CatchBoundary) ?? imported.CatchBoundary : imported.CatchBoundary,\n        ErrorBoundary: imported.ErrorBoundary ? ((_window$__remixRouteM3 = window.__remixRouteModules[id]) === null || _window$__remixRouteM3 === void 0 ? void 0 : _window$__remixRouteM3.ErrorBoundary) ?? imported.ErrorBoundary : imported.ErrorBoundary\n      }];\n    }))).filter(Boolean)));\n    Object.assign(window.__remixRouteModules, newRouteModules);\n    // Create new routes\n    let routes = createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, assetsManifest.routes, window.__remixRouteModules, window.__remixContext.future);\n\n    // This is temporary API and will be more granular before release\n    router._internalSetRoutes(routes);\n\n    // Wait for router to be idle before updating the manifest and route modules\n    // and triggering a react-refresh\n    let unsub = router.subscribe(state => {\n      if (state.revalidation === \"idle\") {\n        unsub();\n        // Abort if a new update comes in while we're waiting for the\n        // router to be idle.\n        if (signal.aborted) return;\n        // Ensure RouterProvider setState has flushed before re-rendering\n        setTimeout(() => {\n          Object.assign(window.__remixManifest, assetsManifest);\n          window.$RefreshRuntime$.performReactRefresh();\n        }, 1);\n      }\n    });\n    window.__remixRevalidation = (window.__remixRevalidation || 0) + 1;\n    router.revalidate();\n  });\n}\n\n/**\n * The entry point for a Remix app when it is rendered in the browser (in\n * `app/entry.client.js`). This component is used by React to hydrate the HTML\n * that was received from the server.\n */\nfunction RemixBrowser(_props) {\n  _s();\n  if (!router) {\n    let routes = createClientRoutes(window.__remixManifest.routes, window.__remixRouteModules, window.__remixContext.future);\n    let hydrationData = window.__remixContext.state;\n    if (hydrationData && hydrationData.errors) {\n      hydrationData = {\n        ...hydrationData,\n        errors: deserializeErrors(hydrationData.errors)\n      };\n    }\n    router = createBrowserRouter(routes, {\n      hydrationData,\n      future: {\n        // Pass through the Remix future flag to avoid a v1 breaking change in\n        // useNavigation() - users can control the casing via the flag in v1.\n        // useFetcher still always uppercases in the back-compat layer in v1.\n        // In v2 we can just always pass true here and remove the back-compat\n        // layer\n        v7_normalizeFormMethod: window.__remixContext.future.v2_normalizeFormMethod\n      }\n    });\n\n    // Hard reload if the path we tried to load is not the current path.\n    // This is usually the result of 2 rapid back/forward clicks from an\n    // external site into a Remix app, where we initially start the load for\n    // one URL and while the JS chunks are loading a second forward click moves\n    // us to a new URL.  Avoid comparing search params because of CDNs which\n    // can be configured to ignore certain params and only pathname is relevant\n    // towards determining the route matches.\n    let initialPathname = window.__remixContext.url;\n    let hydratedPathname = window.location.pathname;\n    if (initialPathname !== hydratedPathname) {\n      let errorMsg = `Initial URL (${initialPathname}) does not match URL at time of hydration ` + `(${hydratedPathname}), reloading page...`;\n      console.error(errorMsg);\n      window.location.reload();\n    }\n\n    // Notify that the router is ready for HMR\n    if (hmrRouterReadyResolve) {\n      hmrRouterReadyResolve(router);\n    }\n  }\n  let [location, setLocation] = React.useState(router.state.location);\n  React.useLayoutEffect(() => {\n    return router.subscribe(newState => {\n      if (newState.location !== location) {\n        setLocation(newState.location);\n      }\n    });\n  }, [location]);\n\n  // We need to include a wrapper RemixErrorBoundary here in case the root error\n  // boundary also throws and we need to bubble up outside of the router entirely.\n  // Then we need a stateful location here so the user can back-button navigate\n  // out of there\n  return /*#__PURE__*/React.createElement(RemixContext.Provider, {\n    value: {\n      manifest: window.__remixManifest,\n      routeModules: window.__remixRouteModules,\n      future: window.__remixContext.future\n    }\n  }, /*#__PURE__*/React.createElement(RemixErrorBoundary, {\n    location: location,\n    component: RemixRootDefaultErrorBoundary\n  }, /*#__PURE__*/React.createElement(RouterProvider, {\n    router: router,\n    fallbackElement: null,\n    future: {\n      v7_startTransition: true\n    }\n  })));\n}\n_s(RemixBrowser, \"taJF+79EHXKxvL1HcvPBWGOEM+Y=\");\n_c = RemixBrowser;\nexport { RemixBrowser };\nvar _c;\n$RefreshReg$(_c, \"RemixBrowser\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nexport { _extends as extends };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.js';\nimport * as React from 'react';\nimport { useHref, NavLink as NavLink$1, Link as Link$1, matchRoutes, useLocation, Await as Await$1, useNavigation, useAsyncError, useMatches as useMatches$1, useLoaderData as useLoaderData$1, useRouteLoaderData as useRouteLoaderData$1, useActionData as useActionData$1, useFetchers as useFetchers$1, useFetcher as useFetcher$1, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Outlet, useRouteError, isRouteErrorResponse } from 'react-router-dom';\nimport { RemixRootDefaultErrorBoundary, RemixCatchBoundary, V2_RemixRootDefaultErrorBoundary, RemixRootDefaultCatchBoundary } from './errorBoundaries.js';\nimport invariant from './invariant.js';\nimport { getLinksForMatches, isPageLinkDescriptor, getNewMatchesForLinks, getDataLinkHrefs, getModuleLinkHrefs, getStylesheetPrefetchLinks } from './links.js';\nimport { escapeHtml, createHtml } from './markup.js';\nimport { IDLE_TRANSITION, IDLE_FETCHER } from './transition.js';\nimport { logDeprecationOnce } from './warnings.js';\n\nfunction useDataRouterContext() {\n  let context = React.useContext(UNSAFE_DataRouterContext);\n  invariant(context, \"You must render this element inside a <DataRouterContext.Provider> element\");\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React.useContext(UNSAFE_DataRouterStateContext);\n  invariant(context, \"You must render this element inside a <DataRouterStateContext.Provider> element\");\n  return context;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RemixContext\n\nconst RemixContext = /*#__PURE__*/React.createContext(undefined);\nRemixContext.displayName = \"Remix\";\nfunction useRemixContext() {\n  let context = React.useContext(RemixContext);\n  invariant(context, \"You must render this element inside a <Remix> element\");\n  return context;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RemixRoute\n\nfunction RemixRoute({\n  id\n}) {\n  let {\n    routeModules,\n    future\n  } = useRemixContext();\n  invariant(routeModules, \"Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.\\n\" + \"Check this link for more details:\\nhttps://remix.run/pages/gotchas#server-code-in-client-bundles\");\n  let {\n    default: Component,\n    ErrorBoundary,\n    CatchBoundary\n  } = routeModules[id];\n\n  // Default Component to Outlet if we expose boundary UI components\n  if (!Component && (ErrorBoundary || !future.v2_errorBoundary && CatchBoundary)) {\n    Component = Outlet;\n  }\n  invariant(Component, `Route \"${id}\" has no component! Please go add a \\`default\\` export in the route module file.\\n` + \"If you were trying to navigate or submit to a resource route, use `<a>` instead of `<Link>` or `<Form reloadDocument>`.\");\n  return /*#__PURE__*/React.createElement(Component, null);\n}\nfunction RemixRouteError({\n  id\n}) {\n  let {\n    future,\n    routeModules\n  } = useRemixContext();\n\n  // This checks prevent cryptic error messages such as: 'Cannot read properties of undefined (reading 'root')'\n  invariant(routeModules, \"Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.\\n\" + \"Check this link for more details:\\nhttps://remix.run/pages/gotchas#server-code-in-client-bundles\");\n  let error = useRouteError();\n  let {\n    CatchBoundary,\n    ErrorBoundary\n  } = routeModules[id];\n  if (future.v2_errorBoundary) {\n    // Provide defaults for the root route if they are not present\n    if (id === \"root\") {\n      ErrorBoundary || (ErrorBoundary = V2_RemixRootDefaultErrorBoundary);\n    }\n    if (ErrorBoundary) {\n      // TODO: Unsure if we can satisfy the typings here\n      // @ts-expect-error\n      return /*#__PURE__*/React.createElement(ErrorBoundary, null);\n    }\n    throw error;\n  }\n\n  // Provide defaults for the root route if they are not present\n  if (id === \"root\") {\n    CatchBoundary || (CatchBoundary = RemixRootDefaultCatchBoundary);\n    ErrorBoundary || (ErrorBoundary = RemixRootDefaultErrorBoundary);\n  }\n  if (isRouteErrorResponse(error)) {\n    let tError = error;\n    if (!!(tError !== null && tError !== void 0 && tError.error) && tError.status !== 404 && ErrorBoundary) {\n      // Internal framework-thrown ErrorResponses\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        error: tError.error\n      });\n    }\n    if (CatchBoundary) {\n      // User-thrown ErrorResponses\n      return /*#__PURE__*/React.createElement(RemixCatchBoundary, {\n        catch: error,\n        component: CatchBoundary\n      });\n    }\n  }\n  if (error instanceof Error && ErrorBoundary) {\n    // User- or framework-thrown Errors\n    return /*#__PURE__*/React.createElement(ErrorBoundary, {\n      error: error\n    });\n  }\n  throw error;\n}\n////////////////////////////////////////////////////////////////////////////////\n// Public API\n\n/**\n * Defines the prefetching behavior of the link:\n *\n * - \"intent\": Fetched when the user focuses or hovers the link\n * - \"render\": Fetched when the link is rendered\n * - \"none\": Never fetched\n */\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let [maybePrefetch, setMaybePrefetch] = React.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React.useState(false);\n  let {\n    onFocus,\n    onBlur,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart\n  } = theirElementProps;\n  let ref = React.useRef(null);\n  React.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = entries => {\n        entries.forEach(entry => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, {\n        threshold: 0.5\n      });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  let setIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(true);\n    }\n  };\n  let cancelIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(false);\n      setShouldPrefetch(false);\n    }\n  };\n  React.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  return [shouldPrefetch, ref, {\n    onFocus: composeEventHandlers(onFocus, setIntent),\n    onBlur: composeEventHandlers(onBlur, cancelIntent),\n    onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n    onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n    onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n  }];\n}\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * A special kind of `<Link>` that knows whether or not it is \"active\".\n *\n * @see https://remix.run/components/nav-link\n */\nlet NavLink = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  ...props\n}, forwardedRef) => {\n  let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to);\n  let href = useHref(to);\n  let [shouldPrefetch, ref, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavLink$1, _extends({}, props, prefetchHandlers, {\n    ref: mergeRefs(forwardedRef, ref),\n    to: to\n  })), shouldPrefetch && !isAbsolute ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nNavLink.displayName = \"NavLink\";\n\n/**\n * This component renders an anchor tag and is the primary way the user will\n * navigate around your website.\n *\n * @see https://remix.run/components/link\n */\nlet Link = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  ...props\n}, forwardedRef) => {\n  let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to);\n  let href = useHref(to);\n  let [shouldPrefetch, ref, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link$1, _extends({}, props, prefetchHandlers, {\n    ref: mergeRefs(forwardedRef, ref),\n    to: to\n  })), shouldPrefetch && !isAbsolute ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nLink.displayName = \"Link\";\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return event => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\nlet linksWarning = \"\u26A0\uFE0F REMIX FUTURE CHANGE: The behavior of links `imagesizes` and `imagesrcset` will be changing in v2. \" + \"Only the React camel case versions will be valid. Please change to `imageSizes` and `imageSrcSet`. \" + \"For instructions on making this change see \" + \"https://remix.run/docs/en/v1.15.0/pages/v2#links-imagesizes-and-imagesrcset\";\nlet useTransitionWarning = \"\u26A0\uFE0F REMIX FUTURE CHANGE: `useTransition` will be removed in v2 in favor of `useNavigation`. \" + \"You can prepare for this change at your convenience by updating to `useNavigation`. \" + \"For instructions on making this change see \" + \"https://remix.run/docs/en/v1.15.0/pages/v2#usetransition\";\nlet fetcherTypeWarning = \"\u26A0\uFE0F REMIX FUTURE CHANGE: `fetcher.type` will be removed in v2. \" + \"Please use `fetcher.state`, `fetcher.formData`, and `fetcher.data` to achieve the same UX. \" + \"For instructions on making this change see \" + \"https://remix.run/docs/en/v1.15.0/pages/v2#usefetcher\";\nlet fetcherSubmissionWarning = \"\u26A0\uFE0F REMIX FUTURE CHANGE : `fetcher.submission` will be removed in v2. \" + \"The submission fields are now part of the fetcher object itself (`fetcher.formData`). \" + \"For instructions on making this change see \" + \"https://remix.run/docs/en/v1.15.0/pages/v2#usefetcher\";\n\n/**\n * Renders the `<link>` tags for the current routes.\n *\n * @see https://remix.run/components/links\n */\nfunction Links() {\n  let {\n    manifest,\n    routeModules\n  } = useRemixContext();\n  let {\n    errors,\n    matches: routerMatches\n  } = useDataRouterStateContext();\n  let matches = errors ? routerMatches.slice(0, routerMatches.findIndex(m => errors[m.route.id]) + 1) : routerMatches;\n  let links = React.useMemo(() => getLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);\n  React.useEffect(() => {\n    if (links.some(link => \"imagesizes\" in link || \"imagesrcset\" in link)) {\n      logDeprecationOnce(linksWarning);\n    }\n  }, [links]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, links.map(link => {\n    if (isPageLinkDescriptor(link)) {\n      return /*#__PURE__*/React.createElement(PrefetchPageLinks, _extends({\n        key: link.page\n      }, link));\n    }\n    let imageSrcSet = null;\n\n    // In React 17, <link imageSrcSet> and <link imageSizes> will warn\n    // because the DOM attributes aren't recognized, so users need to pass\n    // them in all lowercase to forward the attributes to the node without a\n    // warning. Normalize so that either property can be used in Remix.\n    if (\"useId\" in React) {\n      if (link.imagesrcset) {\n        link.imageSrcSet = imageSrcSet = link.imagesrcset;\n        delete link.imagesrcset;\n      }\n      if (link.imagesizes) {\n        link.imageSizes = link.imagesizes;\n        delete link.imagesizes;\n      }\n    } else {\n      if (link.imageSrcSet) {\n        link.imagesrcset = imageSrcSet = link.imageSrcSet;\n        delete link.imageSrcSet;\n      }\n      if (link.imageSizes) {\n        link.imagesizes = link.imageSizes;\n        delete link.imageSizes;\n      }\n    }\n    return /*#__PURE__*/React.createElement(\"link\", _extends({\n      key: link.rel + (link.href || \"\") + (imageSrcSet || \"\")\n    }, link));\n  }));\n}\n\n/**\n * This component renders all of the `<link rel=\"prefetch\">` and\n * `<link rel=\"modulepreload\"/>` tags for all the assets (data, modules, css) of\n * a given page.\n *\n * @param props\n * @param props.page\n * @see https://remix.run/components/prefetch-page-links\n */\nfunction PrefetchPageLinks({\n  page,\n  ...dataLinkProps\n}) {\n  let {\n    router\n  } = useDataRouterContext();\n  let matches = React.useMemo(() => matchRoutes(router.routes, page), [router.routes, page]);\n  if (!matches) {\n    console.warn(`Tried to prefetch ${page} but no routes matched.`);\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(PrefetchPageLinksImpl, _extends({\n    page: page,\n    matches: matches\n  }, dataLinkProps));\n}\nfunction usePrefetchedStylesheets(matches) {\n  let {\n    manifest,\n    routeModules\n  } = useRemixContext();\n  let [styleLinks, setStyleLinks] = React.useState([]);\n  React.useEffect(() => {\n    let interrupted = false;\n    getStylesheetPrefetchLinks(matches, manifest, routeModules).then(links => {\n      if (!interrupted) setStyleLinks(links);\n    });\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return styleLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let {\n    manifest\n  } = useRemixContext();\n  let {\n    matches\n  } = useDataRouterStateContext();\n  let newMatchesForData = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, \"data\"), [page, nextMatches, matches, manifest, location]);\n  let newMatchesForAssets = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, \"assets\"), [page, nextMatches, matches, manifest, location]);\n  let dataHrefs = React.useMemo(() => getDataLinkHrefs(page, newMatchesForData, manifest), [newMatchesForData, page, manifest]);\n  let moduleHrefs = React.useMemo(() => getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]);\n\n  // needs to be a hook with async behavior because we need the modules, not\n  // just the manifest like the other links in here.\n  let styleLinks = usePrefetchedStylesheets(newMatchesForAssets);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dataHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: href,\n    rel: \"prefetch\",\n    as: \"fetch\",\n    href: href\n  }, linkProps))), moduleHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: href,\n    rel: \"modulepreload\",\n    href: href\n  }, linkProps))), styleLinks.map(link =>\n  /*#__PURE__*/\n  // these don't spread `linkProps` because they are full link descriptors\n  // already with their own props\n  React.createElement(\"link\", _extends({\n    key: link.href\n  }, link))));\n}\n\n/**\n * Renders the `<title>` and `<meta>` tags for the current routes.\n *\n * @see https://remix.run/components/meta\n */\nfunction V1Meta() {\n  let {\n    routeModules\n  } = useRemixContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let matches = errors ? routerMatches.slice(0, routerMatches.findIndex(m => errors[m.route.id]) + 1) : routerMatches;\n  let meta = {};\n  let parentsData = {};\n  for (let match of matches) {\n    let routeId = match.route.id;\n    let data = loaderData[routeId];\n    let params = match.params;\n    let routeModule = routeModules[routeId];\n    if (routeModule.meta) {\n      let routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data,\n        parentsData,\n        params,\n        location\n      }) : routeModule.meta;\n      if (routeMeta && Array.isArray(routeMeta)) {\n        throw new Error(\"The route at \" + match.route.path + \" returns an array. This is only supported with the `v2_meta` future flag \" + \"in the Remix config. Either set the flag to `true` or update the route's \" + \"meta function to return an object.\" + \"\\n\\nTo reference the v1 meta function API, see https://remix.run/route/meta\"\n        // TODO: Add link to the docs once they are written\n        // + \"\\n\\nTo reference future flags and the v2 meta API, see https://remix.run/file-conventions/remix-config#future-v2-meta.\"\n        );\n      }\n\n      Object.assign(meta, routeMeta);\n    }\n    parentsData[routeId] = data;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Object.entries(meta).map(([name, value]) => {\n    if (!value) {\n      return null;\n    }\n    if ([\"charset\", \"charSet\"].includes(name)) {\n      return /*#__PURE__*/React.createElement(\"meta\", {\n        key: \"charSet\",\n        charSet: value\n      });\n    }\n    if (name === \"title\") {\n      return /*#__PURE__*/React.createElement(\"title\", {\n        key: \"title\"\n      }, String(value));\n    }\n\n    // Open Graph tags use the `property` attribute, while other meta tags\n    // use `name`. See https://ogp.me/\n    //\n    // Namespaced attributes:\n    //  - https://ogp.me/#type_music\n    //  - https://ogp.me/#type_video\n    //  - https://ogp.me/#type_article\n    //  - https://ogp.me/#type_book\n    //  - https://ogp.me/#type_profile\n    //\n    // Facebook specific tags begin with `fb:` and also use the `property`\n    // attribute.\n    //\n    // Twitter specific tags begin with `twitter:` but they use `name`, so\n    // they are excluded.\n    let isOpenGraphTag = /^(og|music|video|article|book|profile|fb):.+$/.test(name);\n    return [value].flat().map(content => {\n      if (isOpenGraphTag) {\n        return /*#__PURE__*/React.createElement(\"meta\", {\n          property: name,\n          content: content,\n          key: name + content\n        });\n      }\n      if (typeof content === \"string\") {\n        return /*#__PURE__*/React.createElement(\"meta\", {\n          name: name,\n          content: content,\n          key: name + content\n        });\n      }\n      return /*#__PURE__*/React.createElement(\"meta\", _extends({\n        key: name + JSON.stringify(content)\n      }, content));\n    });\n  }));\n}\nfunction V2Meta() {\n  let {\n    routeModules\n  } = useRemixContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = errors ? routerMatches.slice(0, routerMatches.findIndex(m => errors[m.route.id]) + 1) : routerMatches;\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      // TODO: Remove in v2. Only leaving it for now because we used it in\n      // examples and there's no reason to crash someone's build for one line.\n      // They'll get a TS error from the type updates anyway.\n      // @ts-expect-error\n      get route() {\n        console.warn(\"The meta function in \" + _match.route.path + \" accesses the `route` property on `matches`. This is deprecated and will be removed in Remix version 2. See\");\n        return _match.route;\n      }\n    };\n    matches[i] = match;\n    if (routeModule !== null && routeModule !== void 0 && routeModule.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data,\n        params,\n        location,\n        matches\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      // We only assign the route's meta to the nearest leaf if there is no meta\n      // export in the route. The meta function may return a falsey value which\n      // is effectively the same as an empty array.\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\"The `v2_meta` API is enabled in the Remix config, but the route at \" + _match.route.path + \" returns an invalid value. In v2, all route meta functions must \" + \"return an array of meta objects.\" +\n      // TODO: Add link to the docs once they are written\n      // \"\\n\\nTo reference future flags and the v2 meta API, see https://remix.run/file-conventions/remix-config#future-v2-meta.\" +\n      \"\\n\\nTo reference the v1 meta function API, see https://remix.run/route/meta\");\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.flat().map(metaProps => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let tagName = metaProps.tagName;\n      delete metaProps.tagName;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(`A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`);\n        return null;\n      }\n      let Comp = tagName;\n      return /*#__PURE__*/React.createElement(Comp, _extends({\n        key: JSON.stringify(metaProps)\n      }, metaProps));\n    }\n    if (\"title\" in metaProps) {\n      return /*#__PURE__*/React.createElement(\"title\", {\n        key: \"title\"\n      }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /*#__PURE__*/React.createElement(\"meta\", {\n        key: \"charSet\",\n        charSet: metaProps.charSet\n      }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      let json = null;\n      try {\n        json = JSON.stringify(metaProps[\"script:ld+json\"]);\n      } catch (err) {}\n      return json != null && /*#__PURE__*/React.createElement(\"script\", {\n        key: \"script:ld+json\",\n        type: \"application/ld+json\",\n        dangerouslySetInnerHTML: {\n          __html: JSON.stringify(metaProps[\"script:ld+json\"])\n        }\n      });\n    }\n    return /*#__PURE__*/React.createElement(\"meta\", _extends({\n      key: JSON.stringify(metaProps)\n    }, metaProps));\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nfunction Meta() {\n  let {\n    future\n  } = useRemixContext();\n  return future !== null && future !== void 0 && future.v2_meta ? /*#__PURE__*/React.createElement(V2Meta, null) : /*#__PURE__*/React.createElement(V1Meta, null);\n}\nfunction Await(props) {\n  return /*#__PURE__*/React.createElement(Await$1, props);\n}\n\n/**\n * Tracks whether Remix has finished hydrating or not, so scripts can be skipped\n * during client-side updates.\n */\nlet isHydrated = false;\n/**\n * Renders the `<script>` tags needed for the initial render. Bundles for\n * additional routes are loaded later as needed.\n *\n * @param props Additional properties to add to each script tag that is rendered.\n * In addition to scripts, \\<link rel=\"modulepreload\"> tags receive the crossOrigin\n * property if provided.\n *\n * @see https://remix.run/components/scripts\n */\nfunction Scripts(props) {\n  let {\n    manifest,\n    serverHandoffString,\n    abortDelay,\n    serializeError\n  } = useRemixContext();\n  let {\n    router,\n    static: isStatic,\n    staticContext\n  } = useDataRouterContext();\n  let {\n    matches\n  } = useDataRouterStateContext();\n  let navigation = useNavigation();\n  React.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let serializePreResolvedErrorImp = (key, error) => {\n    let toSerialize;\n    if (serializeError && error instanceof Error) {\n      toSerialize = serializeError(error);\n    } else {\n      toSerialize = error;\n    }\n    return `${JSON.stringify(key)}:__remixContext.p(!1, ${escapeHtml(JSON.stringify(toSerialize))})`;\n  };\n  let serializePreresolvedDataImp = (routeId, key, data) => {\n    let serializedData;\n    try {\n      serializedData = JSON.stringify(data);\n    } catch (error) {\n      return serializePreResolvedErrorImp(key, error);\n    }\n    return `${JSON.stringify(key)}:__remixContext.p(${escapeHtml(serializedData)})`;\n  };\n  let serializeErrorImp = (routeId, key, error) => {\n    let toSerialize;\n    if (serializeError && error instanceof Error) {\n      toSerialize = serializeError(error);\n    } else {\n      toSerialize = error;\n    }\n    return `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(key)}, !1, ${escapeHtml(JSON.stringify(toSerialize))})`;\n  };\n  let serializeDataImp = (routeId, key, data) => {\n    let serializedData;\n    try {\n      serializedData = JSON.stringify(data);\n    } catch (error) {\n      return serializeErrorImp(routeId, key, error);\n    }\n    return `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(key)}, ${escapeHtml(serializedData)})`;\n  };\n  let deferredScripts = [];\n  let initialScripts = React.useMemo(() => {\n    var _manifest$hmr;\n    let contextScript = staticContext ? `window.__remixContext = ${serverHandoffString};` : \" \";\n    let activeDeferreds = staticContext === null || staticContext === void 0 ? void 0 : staticContext.activeDeferreds;\n    // This sets up the __remixContext with utility functions used by the\n    // deferred scripts.\n    // - __remixContext.p is a function that takes a resolved value or error and returns a promise.\n    //   This is used for transmitting pre-resolved promises from the server to the client.\n    // - __remixContext.n is a function that takes a routeID and key to returns a promise for later\n    //   resolution by the subsequently streamed chunks.\n    // - __remixContext.r is a function that takes a routeID, key and value or error and resolves\n    //   the promise created by __remixContext.n.\n    // - __remixContext.t is a a map or routeId to keys to an object containing `e` and `r` methods\n    //   to resolve or reject the promise created by __remixContext.n.\n    // - __remixContext.a is the active number of deferred scripts that should be rendered to match\n    //   the SSR tree for hydration on the client.\n    contextScript += !activeDeferreds ? \"\" : [\"__remixContext.p = function(v,e,p,x) {\", \"  if (typeof e !== 'undefined') {\", process.env.NODE_ENV === \"development\" ? \"    x=new Error(e.message);\\n    x.stack=e.stack;\" : '    x=new Error(\"Unexpected Server Error\");\\n    x.stack=undefined;', \"    p=Promise.reject(x);\", \"  } else {\", \"    p=Promise.resolve(v);\", \"  }\", \"  return p;\", \"};\", \"__remixContext.n = function(i,k) {\", \"  __remixContext.t = __remixContext.t || {};\", \"  __remixContext.t[i] = __remixContext.t[i] || {};\", \"  let p = new Promise((r, e) => {__remixContext.t[i][k] = {r:(v)=>{r(v);},e:(v)=>{e(v);}};});\", typeof abortDelay === \"number\" ? `setTimeout(() => {if(typeof p._error !== \"undefined\" || typeof p._data !== \"undefined\"){return;} __remixContext.t[i][k].e(new Error(\"Server timeout.\"))}, ${abortDelay});` : \"\", \"  return p;\", \"};\", \"__remixContext.r = function(i,k,v,e,p,x) {\", \"  p = __remixContext.t[i][k];\", \"  if (typeof e !== 'undefined') {\", process.env.NODE_ENV === \"development\" ? \"    x=new Error(e.message);\\n    x.stack=e.stack;\" : '    x=new Error(\"Unexpected Server Error\");\\n    x.stack=undefined;', \"    p.e(x);\", \"  } else {\", \"    p.r(v);\", \"  }\", \"};\"].join(\"\\n\") + Object.entries(activeDeferreds).map(([routeId, deferredData]) => {\n      let pendingKeys = new Set(deferredData.pendingKeys);\n      let promiseKeyValues = deferredData.deferredKeys.map(key => {\n        if (pendingKeys.has(key)) {\n          deferredScripts.push( /*#__PURE__*/React.createElement(DeferredHydrationScript, {\n            key: `${routeId} | ${key}`,\n            deferredData: deferredData,\n            routeId: routeId,\n            dataKey: key,\n            scriptProps: props,\n            serializeData: serializeDataImp,\n            serializeError: serializeErrorImp\n          }));\n          return `${JSON.stringify(key)}:__remixContext.n(${JSON.stringify(routeId)}, ${JSON.stringify(key)})`;\n        } else {\n          let trackedPromise = deferredData.data[key];\n          if (typeof trackedPromise._error !== \"undefined\") {\n            return serializePreResolvedErrorImp(key, trackedPromise._error);\n          } else {\n            return serializePreresolvedDataImp(routeId, key, trackedPromise._data);\n          }\n        }\n      }).join(\",\\n\");\n      return `Object.assign(__remixContext.state.loaderData[${JSON.stringify(routeId)}], {${promiseKeyValues}});`;\n    }).join(\"\\n\") + (deferredScripts.length > 0 ? `__remixContext.a=${deferredScripts.length};` : \"\");\n    let routeModulesScript = !isStatic ? \" \" : `${(_manifest$hmr = manifest.hmr) !== null && _manifest$hmr !== void 0 && _manifest$hmr.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}import ${JSON.stringify(manifest.url)};\n${matches.map((match, index) => `import * as route${index} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join(\"\\n\")}\nwindow.__remixRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(contextScript),\n      type: undefined\n    })), /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(routeModulesScript),\n      type: \"module\",\n      async: true\n    })));\n    // disabled deps array because we are purposefully only rendering this once\n    // for hydration, after that we want to just continue rendering the initial\n    // scripts as they were when the page first loaded\n    // eslint-disable-next-line\n  }, []);\n  if (!isStatic && typeof __remixContext === \"object\" && __remixContext.a) {\n    for (let i = 0; i < __remixContext.a; i++) {\n      deferredScripts.push( /*#__PURE__*/React.createElement(DeferredHydrationScript, {\n        key: i,\n        scriptProps: props,\n        serializeData: serializeDataImp,\n        serializeError: serializeErrorImp\n      }));\n    }\n  }\n\n  // avoid waterfall when importing the next route module\n  let nextMatches = React.useMemo(() => {\n    if (navigation.location) {\n      // FIXME: can probably use transitionManager `nextMatches`\n      let matches = matchRoutes(router.routes, navigation.location);\n      invariant(matches, `No routes match path \"${navigation.location.pathname}\"`);\n      return matches;\n    }\n    return [];\n  }, [navigation.location, router.routes]);\n  let routePreloads = matches.concat(nextMatches).map(match => {\n    let route = manifest.routes[match.route.id];\n    return (route.imports || []).concat([route.module]);\n  }).flat(1);\n  let preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);\n  return isHydrated ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.entry.module,\n    crossOrigin: props.crossOrigin\n  }), dedupe(preloads).map(path => /*#__PURE__*/React.createElement(\"link\", {\n    key: path,\n    rel: \"modulepreload\",\n    href: path,\n    crossOrigin: props.crossOrigin\n  })), initialScripts, deferredScripts);\n}\nfunction DeferredHydrationScript({\n  dataKey,\n  deferredData,\n  routeId,\n  scriptProps,\n  serializeData,\n  serializeError\n}) {\n  if (typeof document === \"undefined\" && deferredData && dataKey && routeId) {\n    invariant(deferredData.pendingKeys.includes(dataKey), `Deferred data for route ${routeId} with key ${dataKey} was not pending but tried to render a script for it.`);\n  }\n  return /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback:\n    // This makes absolutely no sense. The server renders null as a fallback,\n    // but when hydrating, we need to render a script tag to avoid a hydration issue.\n    // To reproduce a hydration mismatch, just render null as a fallback.\n    typeof document === \"undefined\" && deferredData && dataKey && routeId ? null : /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n      async: true,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: \" \"\n      }\n    }))\n  }, typeof document === \"undefined\" && deferredData && dataKey && routeId ? /*#__PURE__*/React.createElement(Await, {\n    resolve: deferredData.data[dataKey],\n    errorElement: /*#__PURE__*/React.createElement(ErrorDeferredHydrationScript, {\n      dataKey: dataKey,\n      routeId: routeId,\n      scriptProps: scriptProps,\n      serializeError: serializeError\n    }),\n    children: data => {\n      return /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n        async: true,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: {\n          __html: serializeData(routeId, dataKey, data)\n        }\n      }));\n    }\n  }) : /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n    async: true,\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: \" \"\n    }\n  })));\n}\nfunction ErrorDeferredHydrationScript({\n  dataKey,\n  routeId,\n  scriptProps,\n  serializeError\n}) {\n  let error = useAsyncError();\n  return /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: serializeError(routeId, dataKey, error)\n    }\n  }));\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\n\n// TODO: Can this be re-exported from RR?\n\nfunction useMatches() {\n  let {\n    routeModules\n  } = useRemixContext();\n  let matches = useMatches$1();\n  return React.useMemo(() => matches.map(match => {\n    let remixMatch = {\n      id: match.id,\n      pathname: match.pathname,\n      params: match.params,\n      data: match.data,\n      // Need to grab handle here since we don't have it at client-side route\n      // creation time\n      handle: routeModules[match.id].handle\n    };\n    return remixMatch;\n  }), [matches, routeModules]);\n}\n\n/**\n * Returns the JSON parsed data from the current route's `loader`.\n *\n * @see https://remix.run/hooks/use-loader-data\n */\nfunction useLoaderData() {\n  return useLoaderData$1();\n}\n\n/**\n * Returns the loaderData for the given routeId.\n *\n * @see https://remix.run/hooks/use-route-loader-data\n */\nfunction useRouteLoaderData(routeId) {\n  return useRouteLoaderData$1(routeId);\n}\n\n/**\n * Returns the JSON parsed data from the current route's `action`.\n *\n * @see https://remix.run/hooks/use-action-data\n */\nfunction useActionData() {\n  return useActionData$1();\n}\n\n/**\n * Returns everything you need to know about a page transition to build pending\n * navigation indicators and optimistic UI on data mutations.\n *\n * @deprecated in favor of useNavigation\n *\n * @see https://remix.run/hooks/use-transition\n */\nfunction useTransition() {\n  let navigation = useNavigation();\n  React.useEffect(() => {\n    logDeprecationOnce(useTransitionWarning);\n  }, []);\n  return React.useMemo(() => convertNavigationToTransition(navigation), [navigation]);\n}\nfunction convertNavigationToTransition(navigation) {\n  let {\n    location,\n    state,\n    formMethod,\n    formAction,\n    formEncType,\n    formData\n  } = navigation;\n  if (!location) {\n    return IDLE_TRANSITION;\n  }\n  let isActionSubmission = formMethod != null && [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(formMethod.toUpperCase());\n  if (state === \"submitting\" && formMethod && formAction && formEncType && formData) {\n    if (isActionSubmission) {\n      // Actively submitting to an action\n      let transition = {\n        location,\n        state,\n        submission: {\n          method: formMethod.toUpperCase(),\n          action: formAction,\n          encType: formEncType,\n          formData: formData,\n          key: \"\"\n        },\n        type: \"actionSubmission\"\n      };\n      return transition;\n    } else {\n      // @remix-run/router doesn't mark loader submissions as state: \"submitting\"\n      invariant(false, \"Encountered an unexpected navigation scenario in useTransition()\");\n    }\n  }\n  if (state === \"loading\") {\n    let {\n      _isRedirect,\n      _isFetchActionRedirect\n    } = location.state || {};\n    if (formMethod && formAction && formEncType && formData) {\n      if (!_isRedirect) {\n        if (isActionSubmission) {\n          // We're reloading the same location after an action submission\n          let transition = {\n            location,\n            state,\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: formAction,\n              encType: formEncType,\n              formData: formData,\n              key: \"\"\n            },\n            type: \"actionReload\"\n          };\n          return transition;\n        } else {\n          // The new router fixes a bug in useTransition where the submission\n          // \"action\" represents the request URL not the state of the <form> in\n          // the DOM.  Back-port it here to maintain behavior, but useNavigation\n          // will fix this bug.\n          let url = new URL(formAction, window.location.origin);\n\n          // This typing override should be safe since this is only running for\n          // GET submissions and over in @remix-run/router we have an invariant\n          // if you have any non-string values in your FormData when we attempt\n          // to convert them to URLSearchParams\n          url.search = new URLSearchParams(formData.entries()).toString();\n\n          // Actively \"submitting\" to a loader\n          let transition = {\n            location,\n            state: \"submitting\",\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: url.pathname + url.search,\n              encType: formEncType,\n              formData: formData,\n              key: \"\"\n            },\n            type: \"loaderSubmission\"\n          };\n          return transition;\n        }\n      } else {\n        // Redirecting after a submission\n        if (isActionSubmission) {\n          let transition = {\n            location,\n            state,\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: formAction,\n              encType: formEncType,\n              formData: formData,\n              key: \"\"\n            },\n            type: \"actionRedirect\"\n          };\n          return transition;\n        } else {\n          let transition = {\n            location,\n            state,\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: formAction,\n              encType: formEncType,\n              formData: formData,\n              key: \"\"\n            },\n            type: \"loaderSubmissionRedirect\"\n          };\n          return transition;\n        }\n      }\n    } else if (_isRedirect) {\n      if (_isFetchActionRedirect) {\n        let transition = {\n          location,\n          state,\n          submission: undefined,\n          type: \"fetchActionRedirect\"\n        };\n        return transition;\n      } else {\n        let transition = {\n          location,\n          state,\n          submission: undefined,\n          type: \"normalRedirect\"\n        };\n        return transition;\n      }\n    }\n  }\n\n  // If no scenarios above match, then it's a normal load!\n  let transition = {\n    location,\n    state: \"loading\",\n    submission: undefined,\n    type: \"normalLoad\"\n  };\n  return transition;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n *\n * @see https://remix.run/api/remix#usefetchers\n */\nfunction useFetchers() {\n  let fetchers = useFetchers$1();\n  return fetchers.map(f => {\n    let fetcher = convertRouterFetcherToRemixFetcher({\n      state: f.state,\n      data: f.data,\n      formMethod: f.formMethod,\n      formAction: f.formAction,\n      formEncType: f.formEncType,\n      formData: f.formData,\n      json: f.json,\n      text: f.text,\n      \" _hasFetcherDoneAnything \": f[\" _hasFetcherDoneAnything \"]\n    });\n    addFetcherDeprecationWarnings(fetcher);\n    return fetcher;\n  });\n}\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n *\n * @see https://remix.run/hooks/use-fetcher\n */\nfunction useFetcher() {\n  let fetcherRR = useFetcher$1();\n  return React.useMemo(() => {\n    let remixFetcher = convertRouterFetcherToRemixFetcher({\n      state: fetcherRR.state,\n      data: fetcherRR.data,\n      formMethod: fetcherRR.formMethod,\n      formAction: fetcherRR.formAction,\n      formEncType: fetcherRR.formEncType,\n      formData: fetcherRR.formData,\n      json: fetcherRR.json,\n      text: fetcherRR.text,\n      \" _hasFetcherDoneAnything \": fetcherRR[\" _hasFetcherDoneAnything \"]\n    });\n    let fetcherWithComponents = {\n      ...remixFetcher,\n      load: fetcherRR.load,\n      submit: fetcherRR.submit,\n      Form: fetcherRR.Form\n    };\n    addFetcherDeprecationWarnings(fetcherWithComponents);\n    return fetcherWithComponents;\n  }, [fetcherRR]);\n}\nfunction addFetcherDeprecationWarnings(fetcher) {\n  let type = fetcher.type;\n  Object.defineProperty(fetcher, \"type\", {\n    get() {\n      logDeprecationOnce(fetcherTypeWarning);\n      return type;\n    },\n    set(value) {\n      // Devs should *not* be doing this but we don't want to break their\n      // current app if they are\n      type = value;\n    },\n    // These settings should make this behave like a normal object `type` field\n    configurable: true,\n    enumerable: true\n  });\n  let submission = fetcher.submission;\n  Object.defineProperty(fetcher, \"submission\", {\n    get() {\n      logDeprecationOnce(fetcherSubmissionWarning);\n      return submission;\n    },\n    set(value) {\n      // Devs should *not* be doing this but we don't want to break their\n      // current app if they are\n      submission = value;\n    },\n    // These settings should make this behave like a normal object `type` field\n    configurable: true,\n    enumerable: true\n  });\n}\nfunction convertRouterFetcherToRemixFetcher(fetcherRR) {\n  let {\n    state,\n    formMethod,\n    formAction,\n    formEncType,\n    formData,\n    json,\n    text,\n    data\n  } = fetcherRR;\n  let isActionSubmission = formMethod != null && [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(formMethod.toUpperCase());\n  if (state === \"idle\") {\n    if (fetcherRR[\" _hasFetcherDoneAnything \"] === true) {\n      let fetcher = {\n        state: \"idle\",\n        type: \"done\",\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        json: undefined,\n        text: undefined,\n        submission: undefined,\n        data\n      };\n      return fetcher;\n    } else {\n      let fetcher = IDLE_FETCHER;\n      return fetcher;\n    }\n  }\n  if (state === \"submitting\" && formMethod && formAction && formEncType && (formData || json !== undefined || text !== undefined)) {\n    if (isActionSubmission) {\n      // Actively submitting to an action\n      let fetcher = {\n        state,\n        type: \"actionSubmission\",\n        formMethod: formMethod.toUpperCase(),\n        formAction,\n        formEncType,\n        formData,\n        json,\n        text,\n        // @ts-expect-error formData/json/text are mutually exclusive in the type,\n        // so TS can't be sure these meet that criteria, but as a straight\n        // assignment from the RR fetcher we know they will\n        submission: {\n          method: formMethod.toUpperCase(),\n          action: formAction,\n          encType: formEncType,\n          formData,\n          json,\n          text,\n          key: \"\"\n        },\n        data\n      };\n      return fetcher;\n    } else {\n      // @remix-run/router doesn't mark loader submissions as state: \"submitting\"\n      invariant(false, \"Encountered an unexpected fetcher scenario in useFetcher()\");\n    }\n  }\n  if (state === \"loading\") {\n    if (formMethod && formAction && formEncType) {\n      if (isActionSubmission) {\n        if (data) {\n          // In a loading state but we have data - must be an actionReload\n          let fetcher = {\n            state,\n            type: \"actionReload\",\n            formMethod: formMethod.toUpperCase(),\n            formAction,\n            formEncType,\n            formData,\n            json,\n            text,\n            // @ts-expect-error formData/json/text are mutually exclusive in the type,\n            // so TS can't be sure these meet that criteria, but as a straight\n            // assignment from the RR fetcher we know they will\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: formAction,\n              encType: formEncType,\n              formData,\n              json,\n              text,\n              key: \"\"\n            },\n            data\n          };\n          return fetcher;\n        } else {\n          let fetcher = {\n            state,\n            type: \"actionRedirect\",\n            formMethod: formMethod.toUpperCase(),\n            formAction,\n            formEncType,\n            formData,\n            json,\n            text,\n            // @ts-expect-error formData/json/text are mutually exclusive in the type,\n            // so TS can't be sure these meet that criteria, but as a straight\n            // assignment from the RR fetcher we know they will\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: formAction,\n              encType: formEncType,\n              formData,\n              json,\n              text,\n              key: \"\"\n            },\n            data: undefined\n          };\n          return fetcher;\n        }\n      } else {\n        // The new router fixes a bug in useTransition where the submission\n        // \"action\" represents the request URL not the state of the <form> in\n        // the DOM.  Back-port it here to maintain behavior, but useNavigation\n        // will fix this bug.\n        let url = new URL(formAction, window.location.origin);\n        if (formData) {\n          // This typing override should be safe since this is only running for\n          // GET submissions and over in @remix-run/router we have an invariant\n          // if you have any non-string values in your FormData when we attempt\n          // to convert them to URLSearchParams\n          url.search = new URLSearchParams(formData.entries()).toString();\n        }\n\n        // Actively \"submitting\" to a loader\n        let fetcher = {\n          state: \"submitting\",\n          type: \"loaderSubmission\",\n          formMethod: formMethod.toUpperCase(),\n          formAction,\n          formEncType,\n          formData,\n          json,\n          text,\n          // @ts-expect-error formData/json/text are mutually exclusive in the type,\n          // so TS can't be sure these meet that criteria, but as a straight\n          // assignment from the RR fetcher we know they will\n          submission: {\n            method: formMethod.toUpperCase(),\n            action: url.pathname + url.search,\n            encType: formEncType,\n            formData,\n            json,\n            text,\n            key: \"\"\n          },\n          data\n        };\n        return fetcher;\n      }\n    }\n  }\n\n  // If all else fails, it's a normal load!\n  let fetcher = {\n    state: \"loading\",\n    type: \"normalLoad\",\n    formMethod: undefined,\n    formAction: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    formEncType: undefined,\n    submission: undefined,\n    data\n  };\n  return fetcher;\n}\n\n// Dead Code Elimination magic for production builds.\n// This way devs don't have to worry about doing the NODE_ENV check themselves.\n// If running an un-bundled server outside of `remix dev` you will still need\n// to set the REMIX_DEV_SERVER_WS_PORT manually.\nconst LiveReload = process.env.NODE_ENV !== \"development\" ? () => null : function LiveReload({\n  port,\n  timeoutMs = 1000,\n  nonce = undefined\n}) {\n  let js = String.raw;\n  return /*#__PURE__*/React.createElement(\"script\", {\n    nonce: nonce,\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: js`\n                function remixLiveReloadConnect(config) {\n                  let REMIX_DEV_ORIGIN = ${JSON.stringify(process.env.REMIX_DEV_ORIGIN)};\n                  let protocol =\n                    REMIX_DEV_ORIGIN ? new URL(REMIX_DEV_ORIGIN).protocol.replace(/^http/, \"ws\") :\n                    location.protocol === \"https:\" ? \"wss:\" : \"ws:\"; // remove in v2?\n                  let hostname = location.hostname;\n                  let url = new URL(protocol + \"//\" + hostname + \"/socket\");\n\n                  url.port =\n                    ${port} ||\n                    REMIX_DEV_ORIGIN ? new URL(REMIX_DEV_ORIGIN).port :\n                    Number(${\n      // TODO: remove in v2\n      process.env.REMIX_DEV_SERVER_WS_PORT}) ||\n                    8002;\n\n                  let ws = new WebSocket(url.href);\n                  ws.onmessage = async (message) => {\n                    let event = JSON.parse(message.data);\n                    if (event.type === \"LOG\") {\n                      console.log(event.message);\n                    }\n                    if (event.type === \"RELOAD\") {\n                      console.log(\"\uD83D\uDCBF Reloading window ...\");\n                      window.location.reload();\n                    }\n                    if (event.type === \"HMR\") {\n                      if (!window.__hmr__ || !window.__hmr__.contexts) {\n                        console.log(\"\uD83D\uDCBF [HMR] No HMR context, reloading window ...\");\n                        window.location.reload();\n                        return;\n                      }\n                      if (!event.updates || !event.updates.length) return;\n                      let updateAccepted = false;\n                      let needsRevalidation = new Set();\n                      for (let update of event.updates) {\n                        console.log(\"[HMR] \" + update.reason + \" [\" + update.id +\"]\")\n                        if (update.revalidate) {\n                          needsRevalidation.add(update.routeId);\n                          console.log(\"[HMR] Revalidating [\" + update.routeId + \"]\");\n                        }\n                        let imported = await import(update.url +  '?t=' + event.assetsManifest.hmr.timestamp);\n                        if (window.__hmr__.contexts[update.id]) {\n                          let accepted = window.__hmr__.contexts[update.id].emit(\n                            imported\n                          );\n                          if (accepted) {\n                            console.log(\"[HMR] Updated accepted by\", update.id);\n                            updateAccepted = true;\n                          }\n                        }\n                      }\n                      if (event.assetsManifest && window.__hmr__.contexts[\"remix:manifest\"]) {\n                        let accepted = window.__hmr__.contexts[\"remix:manifest\"].emit(\n                          { needsRevalidation, assetsManifest: event.assetsManifest }\n                        );\n                        if (accepted) {\n                          console.log(\"[HMR] Updated accepted by\", \"remix:manifest\");\n                          updateAccepted = true;\n                        }\n                      }\n                      if (!updateAccepted) {\n                        console.log(\"[HMR] Updated rejected, reloading...\");\n                        window.location.reload();\n                      }\n                    }\n                  };\n                  ws.onopen = () => {\n                    if (config && typeof config.onOpen === \"function\") {\n                      config.onOpen();\n                    }\n                  };\n                  ws.onclose = (event) => {\n                    if (event.code === 1006) {\n                      console.log(\"Remix dev asset server web socket closed. Reconnecting...\");\n                      setTimeout(\n                        () =>\n                          remixLiveReloadConnect({\n                            onOpen: () => window.location.reload(),\n                          }),\n                      ${String(timeoutMs)}\n                      );\n                    }\n                  };\n                  ws.onerror = (error) => {\n                    console.log(\"Remix dev asset server web socket error:\");\n                    console.error(error);\n                  };\n                }\n                remixLiveReloadConnect();\n              `\n    }\n  });\n};\nfunction mergeRefs(...refs) {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\nexport { Await, Link, Links, LiveReload, Meta, NavLink, PrefetchPageLinks, RemixContext, RemixRoute, RemixRouteError, Scripts, composeEventHandlers, useActionData, useFetcher, useFetchers, useLoaderData, useMatches, useRouteLoaderData, useTransition };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport React__default, { useContext } from 'react';\nimport { useRouteError, isRouteErrorResponse } from 'react-router-dom';\n\nclass RemixErrorBoundary extends React__default.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: props.error || null,\n      location: props.location\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application (even the HTML!) that will have no effect--the error page\n    // continues to display. This gives us a mechanism to recover from the error\n    // when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error || null,\n        location: props.location\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/React__default.createElement(this.props.component, {\n        error: this.state.error\n      });\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\n/**\n * When app's don't provide a root level ErrorBoundary, we default to this.\n */\nfunction RemixRootDefaultErrorBoundary({\n  error\n}) {\n  // Only log client side to avoid double-logging on the server\n  React__default.useEffect(() => {\n    console.error(error);\n  }, [error]);\n  return /*#__PURE__*/React__default.createElement(\"html\", {\n    lang: \"en\"\n  }, /*#__PURE__*/React__default.createElement(\"head\", null, /*#__PURE__*/React__default.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  }), /*#__PURE__*/React__default.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1, viewport-fit=cover\"\n  }), /*#__PURE__*/React__default.createElement(\"title\", null, \"Application Error!\")), /*#__PURE__*/React__default.createElement(\"body\", null, /*#__PURE__*/React__default.createElement(\"main\", {\n    style: {\n      fontFamily: \"system-ui, sans-serif\",\n      padding: \"2rem\"\n    }\n  }, /*#__PURE__*/React__default.createElement(\"h1\", {\n    style: {\n      fontSize: \"24px\"\n    }\n  }, \"Application Error\"), error.stack ? /*#__PURE__*/React__default.createElement(\"pre\", {\n    style: {\n      padding: \"2rem\",\n      background: \"hsla(10, 50%, 50%, 0.1)\",\n      color: \"red\",\n      overflow: \"auto\"\n    }\n  }, error.stack) : null), /*#__PURE__*/React__default.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n              console.log(\n                \"\uD83D\uDCBF Hey developer\uD83D\uDC4B. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n              );\n            `\n    }\n  })));\n}\nfunction V2_RemixRootDefaultErrorBoundary() {\n  let error = useRouteError();\n  if (isRouteErrorResponse(error)) {\n    return /*#__PURE__*/React__default.createElement(RemixRootDefaultCatchBoundaryImpl, {\n      caught: error\n    });\n  } else if (error instanceof Error) {\n    return /*#__PURE__*/React__default.createElement(RemixRootDefaultErrorBoundary, {\n      error: error\n    });\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    return /*#__PURE__*/React__default.createElement(RemixRootDefaultErrorBoundary, {\n      error: new Error(errorString)\n    });\n  }\n}\nlet RemixCatchContext = /*#__PURE__*/React__default.createContext(undefined);\n\n/**\n * Returns the status code and thrown response data.\n *\n * @deprecated Please enable the v2_errorBoundary flag\n *\n * @see https://remix.run/route/catch-boundary\n */\nfunction useCatch() {\n  return useContext(RemixCatchContext);\n}\nfunction RemixCatchBoundary({\n  catch: catchVal,\n  component: Component,\n  children\n}) {\n  if (catchVal) {\n    return /*#__PURE__*/React__default.createElement(RemixCatchContext.Provider, {\n      value: catchVal\n    }, /*#__PURE__*/React__default.createElement(Component, null));\n  }\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, children);\n}\n\n/**\n * When app's don't provide a root level CatchBoundary, we default to this.\n */\nfunction RemixRootDefaultCatchBoundary() {\n  let caught = useCatch();\n  return /*#__PURE__*/React__default.createElement(RemixRootDefaultCatchBoundaryImpl, {\n    caught: caught\n  });\n}\nfunction RemixRootDefaultCatchBoundaryImpl({\n  caught\n}) {\n  return /*#__PURE__*/React__default.createElement(\"html\", {\n    lang: \"en\"\n  }, /*#__PURE__*/React__default.createElement(\"head\", null, /*#__PURE__*/React__default.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  }), /*#__PURE__*/React__default.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1, viewport-fit=cover\"\n  }), /*#__PURE__*/React__default.createElement(\"title\", null, \"Unhandled Thrown Response!\")), /*#__PURE__*/React__default.createElement(\"body\", null, /*#__PURE__*/React__default.createElement(\"h1\", {\n    style: {\n      fontFamily: \"system-ui, sans-serif\",\n      padding: \"2rem\"\n    }\n  }, caught.status, \" \", caught.statusText), /*#__PURE__*/React__default.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n              console.log(\n                \"\uD83D\uDCBF Hey developer\uD83D\uDC4B. You can provide a way better UX than this when your app throws 404s (and other responses). Check out https://remix.run/guides/not-found for more information.\"\n              );\n            `\n    }\n  })));\n}\n\nexport { RemixCatchBoundary, RemixErrorBoundary, RemixRootDefaultCatchBoundary, RemixRootDefaultErrorBoundary, V2_RemixRootDefaultErrorBoundary, useCatch };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport { invariant as default };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parsePath } from 'react-router-dom';\nimport { loadRouteModule } from './routeModules.js';\n\n/**\n * Represents a `<link>` element.\n *\n * WHATWG Specification: https://html.spec.whatwg.org/multipage/semantics.html#the-link-element\n */\n\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Gets all the links for a set of matches. The modules are assumed to have been\n * loaded already.\n */\nfunction getLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map(match => {\n    var _module$links;\n    let module = routeModules[match.route.id];\n    return ((_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || [];\n  }).flat(1);\n  let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);\n  return dedupe(descriptors, preloads);\n}\nasync function prefetchStyleLinks(routeModule) {\n  if (!routeModule.links) return;\n  let descriptors = routeModule.links();\n  if (!descriptors) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n\n  // don't block for non-matching media queries, or for stylesheets that are\n  // already in the DOM (active route revalidations)\n  let matchingLinks = styleLinks.filter(link => (!link.media || window.matchMedia(link.media).matches) && !document.querySelector(`link[rel=\"stylesheet\"][href=\"${link.href}\"]`));\n  await Promise.all(matchingLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise(resolve => {\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      // if a navigation interrupts this prefetch React will update the <head>\n      // and remove the link we put in there manually, so we check if it's still\n      // there before trying to remove it\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) return false;\n\n  // <link> may not have an href if <link rel=\"preload\"> is used with imagesrcset + imagesizes\n  // https://github.com/remix-run/remix/issues/184\n  // https://html.spec.whatwg.org/commit-snapshots/cb4f5ff75de5f4cbd7013c4abad02f21c77d4d1c/#attr-link-imagesrcset\n  if (object.href == null) {\n    return object.rel === \"preload\" && (typeof object.imageSrcSet === \"string\" || typeof object.imagesrcset === \"string\") && (typeof object.imageSizes === \"string\" || typeof object.imagesizes === \"string\");\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getStylesheetPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(matches.map(async match => {\n    let mod = await loadRouteModule(manifest.routes[match.route.id], routeModules);\n    return mod.links ? mod.links() : [];\n  }));\n  return links.flat(1).filter(isHtmlLinkDescriptor).filter(link => link.rel === \"stylesheet\" || link.rel === \"preload\").map(link => link.rel === \"preload\" ? {\n    ...link,\n    rel: \"prefetch\"\n  } : {\n    ...link,\n    rel: \"prefetch\",\n    as: \"style\"\n  });\n}\n\n// This is ridiculously identical to transition.ts `filterMatchesToLoad`\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let path = parsePathPatch(page);\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    var _currentMatches$index;\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname ||\n      // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      ((_currentMatches$index = currentMatches[index].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith(\"*\")) && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n\n  // NOTE: keep this mostly up-to-date w/ the transition data diff, but this\n  // version doesn't care about submissions\n  let newMatches = mode === \"data\" && location.search !== path.search ?\n  // this is really similar to stuff in transition.ts, maybe somebody smarter\n  // than me (or in less of a hurry) can share some of it. You're the best.\n  nextMatches.filter((match, index) => {\n    let manifestRoute = manifest.routes[match.route.id];\n    if (!manifestRoute.hasLoader) {\n      return false;\n    }\n    if (isNew(match, index) || matchPathChanged(match, index)) {\n      return true;\n    }\n    if (match.route.shouldRevalidate) {\n      var _currentMatches$;\n      let routeChoice = match.route.shouldRevalidate({\n        currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),\n        currentParams: ((_currentMatches$ = currentMatches[0]) === null || _currentMatches$ === void 0 ? void 0 : _currentMatches$.params) || {},\n        nextUrl: new URL(page, window.origin),\n        nextParams: match.params,\n        defaultShouldRevalidate: true\n      });\n      if (typeof routeChoice === \"boolean\") {\n        return routeChoice;\n      }\n    }\n    return true;\n  }) : nextMatches.filter((match, index) => {\n    let manifestRoute = manifest.routes[match.route.id];\n    return (mode === \"assets\" || manifestRoute.hasLoader) && (isNew(match, index) || matchPathChanged(match, index));\n  });\n  return newMatches;\n}\nfunction getDataLinkHrefs(page, matches, manifest) {\n  let path = parsePathPatch(page);\n  return dedupeHrefs(matches.filter(match => manifest.routes[match.route.id].hasLoader).map(match => {\n    let {\n      pathname,\n      search\n    } = path;\n    let searchParams = new URLSearchParams(search);\n    searchParams.set(\"_data\", match.route.id);\n    return `${pathname}?${searchParams}`;\n  }));\n}\nfunction getModuleLinkHrefs(matches, manifestPatch) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifestPatch.routes[match.route.id];\n    let hrefs = [route.module];\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n    return hrefs;\n  }).flat(1));\n}\n\n// The `<Script>` will render rel=modulepreload for the current page, we don't\n// need to include them in a page prefetch, this gives us the list to remove\n// while deduping.\nfunction getCurrentPageModulePreloadHrefs(matches, manifest) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifest.routes[match.route.id];\n    let hrefs = [route.module];\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n    return hrefs;\n  }).flat(1));\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction dedupe(descriptors, preloads) {\n  let set = new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let str = JSON.stringify(descriptor);\n    if (!set.has(str)) {\n      set.add(str);\n      deduped.push(descriptor);\n    }\n    return deduped;\n  }, []);\n}\n\n// https://github.com/remix-run/history/issues/897\nfunction parsePathPatch(href) {\n  let path = parsePath(href);\n  if (path.search === undefined) path.search = \"\";\n  return path;\n}\n\nexport { dedupe, getDataLinkHrefs, getLinksForMatches, getModuleLinkHrefs, getNewMatchesForLinks, getStylesheetPrefetchLinks, isHtmlLinkDescriptor, isPageLinkDescriptor, prefetchStyleLinks };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n/**\n * A React component that is rendered when the server throws a Response.\n *\n * @deprecated Please enable the v2_errorBoundary flag\n *\n * @see https://remix.run/route/catch-boundary\n */\n\n/**\n * A React component that is rendered when there is an error on a route.\n *\n * @deprecated Please enable the v2_errorBoundary flag\n *\n * @see https://remix.run/route/error-boundary\n */\n\n/**\n * V2 version of the ErrorBoundary that eliminates the distinction between\n * Error and Catch Boundaries and behaves like RR 6.4 errorElement and captures\n * errors with useRouteError()\n */\n\n/**\n * A function that defines `<link>` tags to be inserted into the `<head>` of\n * the document on route transitions.\n *\n * @see https://remix.run/route/meta\n */\n\n/**\n * A function that returns an object of name + content pairs to use for\n * `<meta>` tags for a route. These tags will be merged with (and take\n * precedence over) tags from parent routes.\n *\n * @see https://remix.run/route/meta\n */\n\n// TODO: Replace in v2\n\n/**\n * A name/content pair used to render `<meta>` tags in a meta function for a\n * route. The value can be either a string, which will render a single `<meta>`\n * tag, or an array of strings that will render multiple tags with the same\n * `name` attribute.\n */\n\n// TODO: Replace in v2\n\n/**\n * A React component that is rendered for a route.\n */\n\n/**\n * An arbitrary object that is associated with a route.\n *\n * @see https://remix.run/route/handle\n */\n\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import( /* webpackIgnore: true */route.module);\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    // User got caught in the middle of a deploy and the CDN no longer has the\n    // asset we're trying to import! Reload from the server and the user\n    // (should) get the new manifest--unless the developer purged the static\n    // assets, the manifest path, but not the documents \uD83D\uDE2C\n    window.location.reload();\n    return new Promise(() => {\n      // check out of this hook cause the DJs never gonna re[s]olve this\n    });\n  }\n}\n\n/**\n * @deprecated The `unstable_shouldReload` function has been removed, so this\n * function will never run and route data will be revalidated on every request.\n * Please update the function name to `shouldRevalidate` and use the\n * `ShouldRevalidateFunction` interface.\n */\n\nexport { loadRouteModule };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n// This escapeHtml utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\n\n// We've chosen to inline the utility here to reduce the number of npm dependencies we have,\n// slightly decrease the code size compared the original package and make it esm compatible.\n\nconst ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return {\n    __html: html\n  };\n}\n\nexport { createHtml, escapeHtml };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n// Thanks https://github.com/sindresorhus/type-fest!\n\n// Fetchers need a separate set of types to reflect the json/text submission\n// support in react-router.  We do not carry that into useTransition since\n// it's deprecated\n// TODO: keep data around on resubmission?\nconst IDLE_TRANSITION = {\n  state: \"idle\",\n  submission: undefined,\n  location: undefined,\n  type: \"idle\"\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  type: \"init\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n  submission: undefined\n};\n\nexport { IDLE_FETCHER, IDLE_TRANSITION };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nconst alreadyWarned = {};\nfunction logDeprecationOnce(message, key = message) {\n  if (process.env.NODE_ENV !== \"production\" && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    console.warn(message);\n  }\n}\n\nexport { logDeprecationOnce };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { ErrorResponse } from '@remix-run/router';\n\n/**\n * @deprecated in favor of the `ErrorResponse` class in React Router.  Please\n * enable the `future.v2_errorBoundary` flag to ease your migration to Remix v2.\n */\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in remix-server-runtime/errors.ts :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            error.stack = val.stack;\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = val.stack;\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\nexport { deserializeErrors };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { redirect } from 'react-router-dom';\nimport { loadRouteModule } from './routeModules.js';\nimport { fetchData, isRedirectResponse, isCatchResponse, isDeferredResponse, parseDeferredReadableStream } from './data.js';\nimport { prefetchStyleLinks } from './links.js';\nimport invariant from './invariant.js';\nimport { RemixRoute, RemixRouteError } from './components.js';\n\n// NOTE: make sure to change the Route in server-runtime if you change this\n\n// NOTE: make sure to change the EntryRoute in server-runtime if you change this\n\n// Create a map of routes by parentId to use recursively instead of\n// repeatedly filtering the manifest.\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach(route => {\n    let parentId = route.parentId || \"\";\n    if (!routes[parentId]) {\n      routes[parentId] = [];\n    }\n    routes[parentId].push(route);\n  });\n  return routes;\n}\nfunction createServerRoutes(manifest, routeModules, future, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest)) {\n  return (routesByParentId[parentId] || []).map(route => {\n    let hasErrorBoundary = future.v2_errorBoundary === true ? route.id === \"root\" || route.hasErrorBoundary : route.id === \"root\" || route.hasCatchBoundary || route.hasErrorBoundary;\n    let dataRoute = {\n      caseSensitive: route.caseSensitive,\n      element: /*#__PURE__*/React.createElement(RemixRoute, {\n        id: route.id\n      }),\n      errorElement: hasErrorBoundary ? /*#__PURE__*/React.createElement(RemixRouteError, {\n        id: route.id\n      }) : undefined,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModules[route.id].handle\n      // Note: we don't need loader/action/shouldRevalidate on these routes\n      // since they're for a static render\n    };\n\n    let children = createServerRoutes(manifest, routeModules, future, route.id, routesByParentId);\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, future) {\n  return createClientRoutes(manifest, routeModulesCache, future, \"\", groupRoutesByParentId(manifest), needsRevalidation);\n}\nfunction createClientRoutes(manifest, routeModulesCache, future, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map(route => {\n    let hasErrorBoundary = future.v2_errorBoundary === true ? route.id === \"root\" || route.hasErrorBoundary : route.id === \"root\" || route.hasCatchBoundary || route.hasErrorBoundary;\n    let dataRoute = {\n      caseSensitive: route.caseSensitive,\n      element: /*#__PURE__*/React.createElement(RemixRoute, {\n        id: route.id\n      }),\n      errorElement: hasErrorBoundary ? /*#__PURE__*/React.createElement(RemixRouteError, {\n        id: route.id\n      }) : undefined,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      // handle gets added in via useMatches since we aren't guaranteed to\n      // have the route module available here\n      handle: undefined,\n      loader: createDataFunction(route, routeModulesCache, false),\n      action: createDataFunction(route, routeModulesCache, true),\n      shouldRevalidate: createShouldRevalidate(route, routeModulesCache, needsRevalidation)\n    };\n    let children = createClientRoutes(manifest, routeModulesCache, future, route.id, routesByParentId, needsRevalidation);\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createShouldRevalidate(route, routeModules, needsRevalidation) {\n  let handledRevalidation = false;\n  return function (arg) {\n    let module = routeModules[route.id];\n    invariant(module, `Expected route module to be loaded for ${route.id}`);\n\n    // When an HMR / HDR update happens we opt out of all user-defined\n    // revalidation logic and the do as the dev server tells us the first\n    // time router.revalidate() is called.\n    if (needsRevalidation !== undefined && !handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(route.id);\n    }\n    if (module.shouldRevalidate) {\n      return module.shouldRevalidate(arg);\n    }\n    return arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModule = await loadRouteModule(route, routeModules);\n  await prefetchStyleLinks(routeModule);\n  return routeModule;\n}\nfunction createDataFunction(route, routeModules, isAction) {\n  return async ({\n    request\n  }) => {\n    let routeModulePromise = loadRouteModuleWithBlockingLinks(route, routeModules);\n    try {\n      if (isAction && !route.hasAction) {\n        let msg = `Route \"${route.id}\" does not have an action, but you are trying ` + `to submit to it. To fix this, please add an \\`action\\` function to the route`;\n        console.error(msg);\n        throw new Error(msg);\n      } else if (!isAction && !route.hasLoader) {\n        return null;\n      }\n      let result = await fetchData(request, route.id);\n      if (result instanceof Error) {\n        throw result;\n      }\n      if (isRedirectResponse(result)) {\n        throw getRedirect(result);\n      }\n      if (isCatchResponse(result)) {\n        throw result;\n      }\n      if (isDeferredResponse(result) && result.body) {\n        return await parseDeferredReadableStream(result.body);\n      }\n      return result;\n    } finally {\n      await routeModulePromise;\n    }\n  };\n}\nfunction getRedirect(response) {\n  let status = parseInt(response.headers.get(\"X-Remix-Status\"), 10) || 302;\n  let url = response.headers.get(\"X-Remix-Redirect\");\n  let headers = {};\n  let revalidate = response.headers.get(\"X-Remix-Revalidate\");\n  if (revalidate) {\n    headers[\"X-Remix-Revalidate\"] = revalidate;\n  }\n  return redirect(url, {\n    status,\n    headers\n  });\n}\n\nexport { createClientRoutes, createClientRoutesWithHMRRevalidationOptOut, createServerRoutes };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { AbortedDeferredError, UNSAFE_DeferredData } from '@remix-run/router';\n\n/**\n * Data for a route that was returned from a `loader()`.\n *\n * Note: This moves to unknown in ReactRouter and eventually likely in Remix\n */\n\nfunction isCatchResponse(response) {\n  return response.headers.get(\"X-Remix-Catch\") != null;\n}\nfunction isErrorResponse(response) {\n  return response.headers.get(\"X-Remix-Error\") != null;\n}\nfunction isNetworkErrorResponse(response) {\n  // If we reach the Remix server, we can safely identify response types via the\n  // X-Remix-Error/X-Remix-Catch headers.  However, if we never reach the Remix\n  // server, and instead receive a 4xx/5xx from somewhere in between (like\n  // Cloudflare), then we get a false negative n the isErrorResponse check and\n  // we incorrectly assume that the user returns the 4xx/5xx response and\n  // consider it successful.  To alleviate this, we add X-Remix-Response to any\n  // non-Error/non-Catch responses coming back from the server.  If we don't\n  // see this, we can conclude that a 4xx/5xx response never actually reached\n  // the Remix server and we can bubble it up as an error.\n  return isResponse(response) && response.status >= 400 && response.headers.get(\"X-Remix-Error\") == null && response.headers.get(\"X-Remix-Catch\") == null && response.headers.get(\"X-Remix-Response\") == null;\n}\nfunction isRedirectResponse(response) {\n  return response.headers.get(\"X-Remix-Redirect\") != null;\n}\nfunction isDeferredResponse(response) {\n  var _response$headers$get;\n  return !!((_response$headers$get = response.headers.get(\"Content-Type\")) !== null && _response$headers$get !== void 0 && _response$headers$get.match(/text\\/remix-deferred/));\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nasync function fetchData(request, routeId, retry = 0) {\n  let url = new URL(request.url);\n  url.searchParams.set(\"_data\", routeId);\n  let init = {\n    signal: request.signal\n  };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  if (retry > 0) {\n    // Retry up to 3 times waiting 50, 250, 1250 ms\n    // between retries for a total of 1550 ms before giving up.\n    await new Promise(resolve => setTimeout(resolve, 5 ** retry * 10));\n  }\n  let revalidation = window.__remixRevalidation;\n  let response = await fetch(url.href, init).catch(error => {\n    if (typeof revalidation === \"number\" && revalidation === window.__remixRevalidation && (error === null || error === void 0 ? void 0 : error.name) === \"TypeError\" && retry < 3) {\n      return fetchData(request, routeId, retry + 1);\n    }\n    throw error;\n  });\n  if (isErrorResponse(response)) {\n    let data = await response.json();\n    let error = new Error(data.message);\n    error.stack = data.stack;\n    return error;\n  }\n  if (isNetworkErrorResponse(response)) {\n    let text = await response.text();\n    let error = new Error(text);\n    error.stack = undefined;\n    return error;\n  }\n  return response;\n}\nconst DEFERRED_VALUE_PLACEHOLDER_PREFIX = \"__deferred_promise:\";\nasync function parseDeferredReadableStream(stream) {\n  if (!stream) {\n    throw new Error(\"parseDeferredReadableStream requires stream argument\");\n  }\n  let deferredData;\n  let deferredResolvers = {};\n  try {\n    let sectionReader = readStreamSections(stream);\n\n    // Read the first section to get the critical data\n    let initialSectionResult = await sectionReader.next();\n    let initialSection = initialSectionResult.value;\n    if (!initialSection) throw new Error(\"no critical data\");\n    let criticalData = JSON.parse(initialSection);\n\n    // Setup deferred data and resolvers for later based on the critical data\n    if (typeof criticalData === \"object\" && criticalData !== null) {\n      for (let [eventKey, value] of Object.entries(criticalData)) {\n        if (typeof value !== \"string\" || !value.startsWith(DEFERRED_VALUE_PLACEHOLDER_PREFIX)) {\n          continue;\n        }\n        deferredData = deferredData || {};\n        deferredData[eventKey] = new Promise((resolve, reject) => {\n          deferredResolvers[eventKey] = {\n            resolve: value => {\n              resolve(value);\n              delete deferredResolvers[eventKey];\n            },\n            reject: error => {\n              reject(error);\n              delete deferredResolvers[eventKey];\n            }\n          };\n        });\n      }\n    }\n\n    // Read the rest of the stream and resolve deferred promises\n    (async () => {\n      try {\n        for await (let section of sectionReader) {\n          // Determine event type and data\n          let [event, ...sectionDataStrings] = section.split(\":\");\n          let sectionDataString = sectionDataStrings.join(\":\");\n          let data = JSON.parse(sectionDataString);\n          if (event === \"data\") {\n            for (let [key, value] of Object.entries(data)) {\n              if (deferredResolvers[key]) {\n                deferredResolvers[key].resolve(value);\n              }\n            }\n          } else if (event === \"error\") {\n            for (let [key, value] of Object.entries(data)) {\n              let err = new Error(value.message);\n              err.stack = value.stack;\n              if (deferredResolvers[key]) {\n                deferredResolvers[key].reject(err);\n              }\n            }\n          }\n        }\n        for (let [key, resolver] of Object.entries(deferredResolvers)) {\n          resolver.reject(new AbortedDeferredError(`Deferred ${key} will never be resolved`));\n        }\n      } catch (error) {\n        // Reject any existing deferred promises if something blows up\n        for (let resolver of Object.values(deferredResolvers)) {\n          resolver.reject(error);\n        }\n      }\n    })();\n    return new UNSAFE_DeferredData({\n      ...criticalData,\n      ...deferredData\n    });\n  } catch (error) {\n    for (let resolver of Object.values(deferredResolvers)) {\n      resolver.reject(error);\n    }\n    throw error;\n  }\n}\nasync function* readStreamSections(stream) {\n  let reader = stream.getReader();\n  let buffer = [];\n  let sections = [];\n  let closed = false;\n  let encoder = new TextEncoder();\n  let decoder = new TextDecoder();\n  let readStreamSection = async () => {\n    if (sections.length > 0) return sections.shift();\n\n    // Read from the stream until we have at least one complete section to process\n    while (!closed && sections.length === 0) {\n      let chunk = await reader.read();\n      if (chunk.done) {\n        closed = true;\n        break;\n      }\n      // Buffer the raw chunks\n      buffer.push(chunk.value);\n      try {\n        // Attempt to split off a section from the buffer\n        let bufferedString = decoder.decode(mergeArrays(...buffer));\n        let splitSections = bufferedString.split(\"\\n\\n\");\n        if (splitSections.length >= 2) {\n          // We have a complete section, so add it to the sections array\n          sections.push(...splitSections.slice(0, -1));\n          // Remove the section from the buffer and store the rest for future processing\n          buffer = [encoder.encode(splitSections.slice(-1).join(\"\\n\\n\"))];\n        }\n\n        // If we successfully parsed at least one section, break out of reading the stream\n        // to allow upstream processing of the processable sections\n        if (sections.length > 0) {\n          break;\n        }\n      } catch {\n        // If we failed to parse the buffer it was because we failed to decode the stream\n        // because we are missing bytes that we haven't yet received, so continue reading\n        // from the stream until we have a complete section\n        continue;\n      }\n    }\n\n    // If we have a complete section, return it\n    if (sections.length > 0) {\n      return sections.shift();\n    }\n\n    // If we have no complete section, but we have no more chunks to process,\n    // split those sections and clear out the buffer as there is no more data\n    // to process. If this errors, let it bubble up as the stream ended\n    // without valid data\n    if (buffer.length > 0) {\n      let bufferedString = decoder.decode(mergeArrays(...buffer));\n      sections = bufferedString.split(\"\\n\\n\").filter(s => s);\n      buffer = [];\n    }\n\n    // Return any remaining sections that have been processed\n    return sections.shift();\n  };\n  let section = await readStreamSection();\n  while (section) {\n    yield section;\n    section = await readStreamSection();\n  }\n}\nfunction mergeArrays(...arrays) {\n  let out = new Uint8Array(arrays.reduce((total, arr) => total + arr.length, 0));\n  let offset = 0;\n  for (let arr of arrays) {\n    out.set(arr, offset);\n    offset += arr.length;\n  }\n  return out;\n}\n\nexport { fetchData, isCatchResponse, isDeferredResponse, isErrorResponse, isNetworkErrorResponse, isRedirectResponse, parseDeferredReadableStream };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nexport { RemixBrowser } from './browser.js';\nexport { Form, Outlet, createPath, generatePath, isRouteErrorResponse, matchPath, matchRoutes, parsePath, resolvePath, unstable_useBlocker, unstable_usePrompt, useAsyncError, useAsyncValue, useBeforeUnload, useFormAction, useHref, useLocation, useMatch, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useSearchParams, useSubmit } from 'react-router-dom';\nexport { Await, Link, Links, LiveReload, Meta, NavLink, PrefetchPageLinks, Scripts, RemixContext as UNSAFE_RemixContext, useActionData, useFetcher, useFetchers, useLoaderData, useMatches, useRouteLoaderData, useTransition } from './components.js';\nexport { useCatch } from './errorBoundaries.js';\nexport { ScrollRestoration } from './scroll-restoration.js';\nexport { RemixServer } from './server.js';\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.js';\nimport * as React from 'react';\nimport { useLocation, UNSAFE_useScrollRestoration } from 'react-router-dom';\nimport { useMatches } from './components.js';\n\nlet STORAGE_KEY = \"positions\";\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n *\n * @see https://remix.run/components/scroll-restoration\n */\nfunction ScrollRestoration({\n  getKey,\n  ...props\n}) {\n  let location = useLocation();\n  let matches = useMatches();\n  UNSAFE_useScrollRestoration({\n    getKey,\n    storageKey: STORAGE_KEY\n  });\n\n  // In order to support `getKey`, we need to compute a \"key\" here so we can\n  // hydrate that up so that SSR scroll restoration isn't waiting on React to\n  // hydrate. *However*, our key on the server is not the same as our key on\n  // the client!  So if the user's getKey implementation returns the SSR\n  // location key, then let's ignore it and let our inline <script> below pick\n  // up the client side history state key\n  let key = React.useMemo(() => {\n    if (!getKey) return null;\n    let userKey = getKey(location, matches);\n    return userKey !== location.key ? userKey : null;\n  },\n  // Nah, we only need this the first time for the SSR render\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  let restoreScroll = ((STORAGE_KEY, restoreKey) => {\n    if (!window.history.state || !window.history.state.key) {\n      let key = Math.random().toString(32).slice(2);\n      window.history.replaceState({\n        key\n      }, \"\");\n    }\n    try {\n      let positions = JSON.parse(sessionStorage.getItem(STORAGE_KEY) || \"{}\");\n      let storedY = positions[restoreKey || window.history.state.key];\n      if (typeof storedY === \"number\") {\n        window.scrollTo(0, storedY);\n      }\n    } catch (error) {\n      console.error(error);\n      sessionStorage.removeItem(STORAGE_KEY);\n    }\n  }).toString();\n  return /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: `(${restoreScroll})(${JSON.stringify(STORAGE_KEY)}, ${JSON.stringify(key)})`\n    }\n  }));\n}\n\nexport { ScrollRestoration };\n", "/**\n * @remix-run/react v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { createStaticRouter, StaticRouterProvider } from 'react-router-dom/server';\nimport { RemixContext } from './components.js';\nimport { RemixErrorBoundary, RemixRootDefaultErrorBoundary } from './errorBoundaries.js';\nimport { createServerRoutes } from './routes.js';\n\n/**\n * The entry point for a Remix app when it is rendered on the server (in\n * `app/entry.server.js`). This component is used to generate the HTML in the\n * response from the server.\n */\nfunction RemixServer({\n  context,\n  url,\n  abortDelay\n}) {\n  if (typeof url === \"string\") {\n    url = new URL(url);\n  }\n  let {\n    manifest,\n    routeModules,\n    serverHandoffString\n  } = context;\n  let routes = createServerRoutes(manifest.routes, routeModules, context.future);\n  let router = createStaticRouter(routes, context.staticHandlerContext);\n  return /*#__PURE__*/React.createElement(RemixContext.Provider, {\n    value: {\n      manifest,\n      routeModules,\n      serverHandoffString,\n      future: context.future,\n      serializeError: context.serializeError,\n      abortDelay\n    }\n  }, /*#__PURE__*/React.createElement(RemixErrorBoundary, {\n    location: router.state.location,\n    component: RemixRootDefaultErrorBoundary\n  }, /*#__PURE__*/React.createElement(StaticRouterProvider, {\n    router: router,\n    context: context.staticHandlerContext,\n    hydrate: false\n  })));\n}\n\nexport { RemixServer };\n"],
  "mappings": "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",
  "names": ["createMemoryHistory", "options", "initialEntries", "initialIndex", "v5Compat", "entries", "map", "entry", "index", "createMemoryLocation", "state", "undefined", "clampIndex", "length", "action", "Action", "Pop", "listener", "n", "Math", "min", "max", "getCurrentLocation", "to", "key", "location", "createLocation", "pathname", "warning", "charAt", "JSON", "stringify", "createHref", "createPath", "history", "createURL", "URL", "encodeLocation", "path", "parsePath", "search", "hash", "push", "Push", "nextLocation", "splice", "delta", "replace", "Replace", "go", "nextIndex", "listen", "fn", "createBrowserHistory", "createBrowserLocation", "window", "globalHistory", "usr", "createBrowserHref", "getUrlBasedHistory", "createHashHistory", "createHashLocation", "substr", "createHashHref", "base", "document", "querySelector", "href", "getAttribute", "url", "hashIndex", "indexOf", "slice", "validateHashLocation", "invariant", "value", "message", "Error", "cond", "console", "warn", "e", "createKey", "random", "toString", "getHistoryState", "idx", "current", "_extends", "_ref", "parsedPath", "searchIndex", "getLocation", "validateLocation", "defaultView", "getIndex", "replaceState", "handlePop", "historyState", "pushState", "error", "DOMException", "name", "assign", "origin", "addEventListener", "PopStateEventType", "removeEventListener", "isIndexRoute", "route", "convertRoutesToDataRoutes", "routes", "mapRouteProperties", "parentPath", "manifest", "treePath", "id", "join", "children", "indexRoute", "pathOrLayoutRoute", "matchRoutes", "locationArg", "basename", "stripBasename", "branches", "flattenRoutes", "rankRouteBranches", "matches", "i", "matchRouteBranch", "safelyDecodeURI", "parentsMeta", "flattenRoute", "relativePath", "meta", "caseSensitive", "childrenIndex", "startsWith", "joinPaths", "routesMeta", "concat", "score", "computeScore", "forEach", "_route$path", "includes", "exploded", "explodeOptionalSegments", "segments", "split", "first", "rest", "isOptional", "endsWith", "required", "restExploded", "result", "subpath", "sort", "a", "b", "compareIndexes", "initialScore", "some", "isSplat", "splatPenalty", "indexRouteValue", "filter", "s", "reduce", "segment", "paramRe", "test", "dynamicSegmentValue", "emptySegmentValue", "staticSegmentValue", "siblings", "every", "branch", "matchedParams", "matchedPathname", "end", "remainingPathname", "match", "matchPath", "Object", "params", "pathnameBase", "normalizePathname", "generatePath", "originalPath", "prefix", "p", "String", "array", "isLastSegment", "star", "keyMatch", "optional", "param", "pattern", "matcher", "paramNames", "compilePath", "captureGroups", "memo", "paramName", "splatValue", "safelyDecodeURIComponent", "regexpSource", "_", "RegExp", "decodeURI", "decodeURIComponent", "toLowerCase", "startIndex", "nextChar", "resolvePath", "fromPathname", "toPathname", "resolvePathname", "normalizeSearch", "normalizeHash", "relativeSegments", "pop", "getInvalidPathError", "char", "field", "dest", "getPathContributingMatches", "resolveTo", "toArg", "routePathnames", "locationPathname", "isPathRelative", "isEmptyPath", "from", "routePathnameIndex", "toSegments", "shift", "hasExplicitTrailingSlash", "hasCurrentTrailingSlash", "getToPathname", "isTrackedPromise", "Promise", "_tracked", "unwrapTrackedPromise", "_error", "_data", "isRouteErrorResponse", "status", "statusText", "internal", "createRouter", "init", "routerWindow", "isBrowser", "createElement", "isServer", "detectErrorBoundary", "hasErrorBoundary", "defaultMapRouteProperties", "dataRoutes", "inFlightDataRoutes", "future", "v7_normalizeFormMethod", "v7_prependBasename", "unlistenHistory", "subscribers", "Set", "savedScrollPositions", "getScrollRestorationKey", "getScrollPosition", "initialScrollRestored", "hydrationData", "initialMatches", "initialErrors", "getInternalRouterError", "getShortCircuitMatches", "initialized", "m", "lazy", "loader", "router", "historyAction", "navigation", "IDLE_NAVIGATION", "restoreScrollPosition", "preventScrollReset", "revalidation", "loaderData", "actionData", "errors", "fetchers", "Map", "blockers", "pendingAction", "HistoryAction", "pendingPreventScrollReset", "pendingNavigationController", "isUninterruptedRevalidation", "isRevalidationRequired", "cancelledDeferredRoutes", "cancelledFetcherLoads", "fetchControllers", "incrementingLoadId", "pendingNavigationLoadId", "fetchReloadIds", "fetchRedirectIds", "fetchLoadMatches", "activeDeferreds", "blockerFunctions", "ignoreNextHistoryUpdate", "initialize", "size", "blockerKey", "shouldBlockNavigation", "currentLocation", "updateBlocker", "proceed", "reset", "set", "IDLE_BLOCKER", "updateState", "startNavigation", "dispose", "clear", "abort", "deleteFetcher", "deleteBlocker", "subscribe", "add", "delete", "newState", "subscriber", "completeNavigation", "_location$state", "_location$state2", "isActionReload", "formMethod", "isMutationMethod", "_isRedirect", "keys", "mergeLoaderData", "k", "getSavedScrollPosition", "navigate", "opts", "normalizedPath", "normalizeTo", "fromRouteId", "relative", "submission", "normalizeNavigateOptions", "userReplace", "formAction", "pendingError", "revalidate", "interruptActiveLoads", "startUninterruptedRevalidation", "overrideNavigation", "saveScrollPosition", "routesToUse", "loadingNavigation", "notFoundMatches", "cancelActiveDeferreds", "isHashChangeOnly", "AbortController", "request", "createClientSideRequest", "signal", "pendingActionData", "findNearestBoundary", "actionOutput", "handleAction", "shortCircuited", "pendingActionError", "getLoadingNavigation", "Request", "handleLoaders", "fetcherSubmission", "getSubmittingNavigation", "actionMatch", "getTargetMatch", "type", "ResultType", "method", "routeId", "callLoaderOrAction", "aborted", "isRedirectResult", "startRedirectNavigation", "isErrorResult", "boundaryMatch", "isDeferredResult", "data", "activeSubmission", "getSubmissionFromNavigation", "matchesToLoad", "revalidatingFetchers", "getMatchesToLoad", "updatedFetchers", "markFetchRedirectsDone", "rf", "fetcher", "get", "revalidatingFetcher", "getLoadingFetcher", "has", "abortFetcher", "controller", "abortPendingFetchRevalidations", "f", "results", "loaderResults", "fetcherResults", "callLoadersAndMaybeResolveData", "redirect", "findRedirect", "fetcherKey", "processLoaderData", "deferredData", "done", "didAbortFetchLoads", "abortStaleFetchLoads", "shouldUpdateFetchers", "getFetcher", "IDLE_FETCHER", "fetch", "setFetcherError", "handleFetcherAction", "handleFetcherLoader", "requestMatches", "existingFetcher", "getSubmittingFetcher", "abortController", "fetchRequest", "originatingLoadId", "actionResult", "doneFetcher", "getDoneFetcher", "loadingFetcher", "isFetchActionRedirect", "revalidationRequest", "loadId", "loadFetcher", "staleKey", "r", "resolveDeferredData", "_temp", "redirectLocation", "_isFetchActionRedirect", "ABSOLUTE_URL_REGEX", "isDifferentBasename", "redirectHistoryAction", "redirectPreserveMethodStatusCodes", "currentMatches", "fetchersToLoad", "all", "resolveDeferredResults", "markFetchersDone", "doneKeys", "landedId", "yeetedKeys", "getBlocker", "blocker", "newBlocker", "_ref2", "Array", "blockerFunction", "predicate", "cancelledRouteIds", "dfd", "cancel", "enableScrollRestoration", "positions", "getPosition", "getKey", "y", "getScrollKey", "createUseMatchesMatch", "_internalSetRoutes", "newRoutes", "_internalFetchControllers", "_internalActiveDeferreds", "createStaticHandler", "query", "_temp2", "requestContext", "isValidMethod", "methodNotAllowedMatches", "statusCode", "loaderHeaders", "actionHeaders", "queryImpl", "isResponse", "queryRoute", "_temp3", "find", "values", "_result$activeDeferre", "UNSAFE_DEFERRED_SYMBOL", "routeMatch", "submit", "loadRouteData", "isQueryRouteResponse", "isRedirectResponse", "response", "isRouteRequest", "isStaticRequest", "Response", "headers", "Location", "context", "loaderRequest", "getLoaderMatchesUntilBoundary", "acc", "processRouteLoaderData", "executedLoaders", "fromEntries", "getStaticContextFromError", "newContext", "_deepestRenderedBoundaryId", "isSubmissionNavigation", "formData", "body", "prependBasename", "contextualMatches", "activeRouteMatch", "hasNakedIndexQuery", "normalizeFormMethod", "isFetcher", "getInvalidBodyError", "rawFormMethod", "toUpperCase", "stripHashFromPath", "formEncType", "text", "FormData", "URLSearchParams", "_ref3", "json", "parse", "searchParams", "convertFormDataToSearchParams", "convertSearchParamsToFormData", "append", "boundaryId", "boundaryMatches", "findIndex", "currentUrl", "nextUrl", "navigationMatches", "isNewLoader", "currentRouteMatch", "nextRouteMatch", "shouldRevalidateLoader", "currentParams", "nextParams", "defaultShouldRevalidate", "isNewRouteInstance", "fetcherMatches", "fetcherMatch", "shouldRevalidate", "currentLoaderData", "currentMatch", "isNew", "isMissingData", "currentPath", "loaderMatch", "arg", "routeChoice", "loadLazyRouteModule", "lazyRoute", "routeToUpdate", "routeUpdates", "lazyRouteProperty", "staticRouteValue", "isPropertyStaticallyDefined", "immutableRouteKeys", "resultType", "onReject", "runHandler", "handler", "reject", "abortPromise", "race", "redirectStatusCodes", "protocol", "isSameBasename", "contentType", "ErrorResponse", "isDeferredData", "_result$init", "_result$init2", "deferred", "Headers", "foundError", "newLoaderData", "mergedLoaderData", "hasOwnProperty", "eligibleMatches", "reverse", "_temp4", "errorMessage", "resolveData", "obj", "validRequestMethods", "validMutationMethods", "signals", "isRevalidatingLoader", "then", "unwrap", "unwrappedData", "getAll", "v", "handle", "pathMatches", "AbortedDeferredError", "DeferredData", "defer", "validMutationMethodsArr", "validRequestMethodsArr", "paths", "responseInit", "constructor", "pendingKeysSet", "deferredKeys", "isArray", "onAbort", "unlistenAbortSignal", "trackPromise", "promise", "onSettle", "catch", "defineProperty", "undefinedError", "emit", "settledKey", "resolve", "pendingKeys", "Boolean", "Symbol", "useHref", "to", "_temp", "relative", "useInRouterContext", "process", "invariant", "basename", "navigator", "useContext", "NavigationContext", "hash", "pathname", "search", "useResolvedPath", "joinedPathname", "joinPaths", "createHref", "LocationContext", "useLocation", "location", "useNavigationType", "navigationType", "useMatch", "pattern", "useMemo", "matchPath", "useIsomorphicLayoutEffect", "cb", "isStatic", "static", "React", "useLayoutEffect", "useNavigate", "isDataRoute", "RouteContext", "useNavigateStable", "useNavigateUnstable", "dataRouterContext", "DataRouterContext", "matches", "locationPathname", "routePathnamesJson", "JSON", "stringify", "getPathContributingMatches", "map", "match", "pathnameBase", "activeRef", "useRef", "current", "navigate", "useCallback", "options", "warning", "navigateEffectWarning", "go", "path", "resolveTo", "parse", "replace", "push", "state", "useOutletContext", "OutletContext", "useOutlet", "context", "outlet", "createElement", "Provider", "value", "useParams", "routeMatch", "length", "params", "_temp2", "useRoutes", "routes", "locationArg", "useRoutesImpl", "dataRouterState", "parentMatches", "parentParams", "parentPathname", "parentPathnameBase", "parentRoute", "route", "parentPath", "warningOnce", "endsWith", "locationFromContext", "_parsedLocationArg$pa", "parsedLocationArg", "parsePath", "startsWith", "remainingPathname", "slice", "matchRoutes", "element", "undefined", "Component", "renderedMatches", "_renderMatches", "Object", "assign", "encodeLocation", "_extends", "key", "NavigationType", "Pop", "DefaultErrorComponent", "error", "useRouteError", "message", "isRouteErrorResponse", "status", "statusText", "Error", "stack", "lightgrey", "preStyles", "padding", "backgroundColor", "codeStyles", "devInfo", "console", "Fragment", "style", "fontStyle", "RenderedRoute", "_ref", "routeContext", "children", "staticContext", "errorElement", "ErrorBoundary", "_deepestRenderedBoundaryId", "id", "_dataRouterState2", "_dataRouterState", "errors", "errorIndex", "findIndex", "m", "keys", "join", "Math", "min", "reduceRight", "index", "defaultErrorElement", "concat", "getChildren", "RenderErrorBoundary", "revalidation", "component", "getDataRouterConsoleError", "hookName", "useDataRouterContext", "ctx", "useDataRouterState", "DataRouterStateContext", "useRouteContext", "useCurrentRouteId", "thisRoute", "useRouteId", "DataRouterStateHook", "UseRouteId", "useNavigation", "UseNavigation", "navigation", "useRevalidator", "DataRouterHook", "UseRevalidator", "revalidate", "router", "useMatches", "loaderData", "UseMatches", "data", "handle", "useLoaderData", "UseLoaderData", "routeId", "useRouteLoaderData", "UseRouteLoaderData", "useActionData", "UseActionData", "values", "actionData", "_state$errors", "RouteErrorContext", "UseRouteError", "useAsyncValue", "AwaitContext", "_data", "useAsyncError", "_error", "useBlocker", "shouldBlock", "UseBlocker", "blockerKey", "setBlockerKey", "useState", "blockerFunction", "arg", "currentLocation", "nextLocation", "historyAction", "stripBasename", "useEffect", "String", "blockerId", "deleteBlocker", "getBlocker", "blockers", "has", "get", "IDLE_BLOCKER", "UseNavigateStable", "fromRouteId", "cond", "alreadyWarned", "RouterProvider", "fallbackElement", "future", "setStateImpl", "v7_startTransition", "setState", "newState", "startTransitionImpl", "subscribe", "n", "opts", "preventScrollReset", "Router", "initialized", "DataRoutes", "_ref2", "MemoryRouter", "_ref3", "initialEntries", "initialIndex", "historyRef", "createMemoryHistory", "v5Compat", "history", "action", "listen", "Navigate", "_ref4", "jsonPath", "Outlet", "props", "Route", "_props", "_ref5", "basenameProp", "locationProp", "staticProp", "navigationContext", "locationContext", "trailingPathname", "Routes", "_ref6", "createRoutesFromChildren", "Await", "_ref7", "resolve", "AwaitErrorBoundary", "ResolveAwait", "_ref8", "toRender", "Children", "forEach", "isValidElement", "treePath", "type", "apply", "name", "caseSensitive", "loader", "hasErrorBoundary", "shouldRevalidate", "lazy", "renderMatches", "mapRouteProperties", "updates", "createMemoryRouter", "createRouter", "v7_prependBasename", "hydrationData", "initialize", "START_TRANSITION", "AwaitRenderStatus", "neverSettledPromise", "createContext", "displayName", "constructor", "getDerivedStateFromError", "getDerivedStateFromProps", "componentDidCatch", "errorInfo", "render", "Promise", "promise", "pending", "success", "defineProperty", "renderError", "reject", "catch", "_tracked", "then", "AbortedDeferredError", "isHtmlElement", "object", "tagName", "isButtonElement", "toLowerCase", "isFormElement", "isInputElement", "isModifiedEvent", "event", "metaKey", "altKey", "ctrlKey", "shiftKey", "shouldProcessLinkClick", "target", "button", "createSearchParams", "init", "URLSearchParams", "Array", "isArray", "Object", "keys", "reduce", "memo", "key", "value", "concat", "map", "v", "getSearchParamsForLocation", "locationSearch", "defaultSearchParams", "searchParams", "has", "getAll", "forEach", "append", "isFormDataSubmitterSupported", "_formDataSupportsSubmitter", "FormData", "document", "createElement", "e", "getFormEncType", "encType", "supportedFormEncTypes", "process", "warning", "defaultEncType", "getFormSubmissionInfo", "basename", "method", "action", "formData", "body", "attr", "getAttribute", "stripBasename", "defaultMethod", "type", "form", "Error", "name", "prefix", "undefined", "createBrowserRouter", "routes", "opts", "createRouter", "future", "_extends", "v7_prependBasename", "history", "createBrowserHistory", "window", "hydrationData", "parseHydrationData", "mapRouteProperties", "initialize", "createHashRouter", "createHashHistory", "_window", "state", "__staticRouterHydrationData", "errors", "deserializeErrors", "entries", "serialized", "val", "__type", "ErrorResponse", "status", "statusText", "data", "internal", "__subType", "ErrorConstructor", "error", "message", "stack", "BrowserRouter", "_ref", "children", "historyRef", "useRef", "current", "v5Compat", "setStateImpl", "useState", "location", "v7_startTransition", "setState", "useCallback", "newState", "startTransitionImpl", "React", "useLayoutEffect", "listen", "Router", "navigationType", "navigator", "HashRouter", "_ref2", "HistoryRouter", "_ref3", "ScrollRestoration", "_ref7", "getKey", "storageKey", "useScrollRestoration", "getDataRouterConsoleError", "hookName", "useDataRouterContext", "ctx", "useContext", "DataRouterContext", "invariant", "useDataRouterState", "DataRouterStateContext", "useLinkClickHandler", "to", "_temp", "replace", "replaceProp", "preventScrollReset", "relative", "navigate", "useNavigate", "useLocation", "path", "useResolvedPath", "preventDefault", "createPath", "useSearchParams", "defaultInit", "defaultSearchParamsRef", "hasSetSearchParamsRef", "useMemo", "search", "setSearchParams", "nextInit", "navigateOptions", "newSearchParams", "validateClientSideSubmission", "useSubmit", "router", "DataRouterHook", "UseSubmit", "NavigationContext", "currentRouteId", "useRouteId", "options", "formMethod", "formEncType", "fromRouteId", "useSubmitFetcher", "fetcherKey", "fetcherRouteId", "UseSubmitFetcher", "fetch", "useFormAction", "_temp2", "routeContext", "RouteContext", "match", "matches", "slice", "hash", "route", "index", "params", "delete", "toString", "pathname", "joinPaths", "createFetcherForm", "routeId", "FetcherForm", "forwardRef", "props", "ref", "submit", "FormImpl", "displayName", "useFetcher", "_route$matches", "UseFetcher", "length", "id", "String", "fetcherId", "Form", "load", "href", "fetcher", "getFetcher", "fetcherWithComponents", "useEffect", "console", "warn", "deleteFetcher", "useFetchers", "DataRouterStateHook", "UseFetchers", "fetchers", "values", "_temp3", "UseScrollRestoration", "restoreScrollPosition", "useMatches", "navigation", "useNavigation", "scrollRestoration", "usePageHide", "savedScrollPositions", "scrollY", "sessionStorage", "setItem", "SCROLL_RESTORATION_STORAGE_KEY", "JSON", "stringify", "sessionPositions", "getItem", "parse", "getKeyWithoutBasename", "disableScrollRestoration", "enableScrollRestoration", "scrollTo", "el", "getElementById", "decodeURIComponent", "scrollIntoView", "useBeforeUnload", "callback", "capture", "addEventListener", "removeEventListener", "usePrompt", "_ref8", "when", "blocker", "useBlocker", "reset", "proceed", "confirm", "setTimeout", "START_TRANSITION", "isBrowser", "ABSOLUTE_URL_REGEX", "Link", "NavLink", "Set", "LinkWithRef", "_ref4", "onClick", "reloadDocument", "rest", "_objectWithoutPropertiesLoose", "_excluded", "absoluteHref", "isExternal", "test", "currentUrl", "URL", "targetUrl", "startsWith", "protocol", "origin", "useHref", "internalOnClick", "handleClick", "defaultPrevented", "NavLinkWithRef", "_ref5", "ariaCurrentProp", "caseSensitive", "className", "classNameProp", "end", "style", "styleProp", "_excluded2", "routerState", "toPathname", "encodeLocation", "locationPathname", "nextLocationPathname", "isActive", "charAt", "isPending", "ariaCurrent", "filter", "Boolean", "join", "_ref6", "forwardedRef", "onSubmit", "_excluded3", "formAction", "submitHandler", "submitter", "nativeEvent", "submitMethod", "currentTarget", "React", "router", "StaticRouterProvider", "json", "DataRoutes", "createStaticHandler", "createStaticRouter", "ESCAPE_LOOKUP", "ESCAPE_REGEX", "React", "init_dist", "_extends", "React", "init_dist", "init_dist", "React__default", "Component", "invariant", "init_dist", "IDLE_FETCHER", "alreadyWarned", "useDataRouterContext", "invariant", "Component", "ABSOLUTE_URL_REGEX", "NavLink", "_extends", "Link", "React", "router", "json", "Await", "matches", "dedupe", "useMatches", "useLoaderData", "useRouteLoaderData", "useActionData", "transition", "useFetchers", "useFetcher", "fetcher", "IDLE_FETCHER", "LiveReload", "deserializeErrors", "React", "init_dist", "isResponse", "isRedirectResponse", "value", "invariant", "isRedirectResponse", "router", "deserializeErrors", "init_dist", "React", "init_dist", "ScrollRestoration", "useMatches", "STORAGE_KEY", "key", "_extends", "React", "router"]
}
