{"version":3,"file":"index.cjs.js","sources":["../../auth/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { onAuthStateChanged, onIdTokenChanged, getIdToken } from 'firebase/auth';\nimport { Observable, from, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n/**\n * Create an observable of authentication state. The observer is only\n * triggered on sign-in or sign-out.\n * @param auth firebase.auth.Auth\n */\nexport function authState(auth) {\n    return new Observable(function (subscriber) {\n        var unsubscribe = onAuthStateChanged(auth, subscriber.next.bind(subscriber), subscriber.error.bind(subscriber), subscriber.complete.bind(subscriber));\n        return { unsubscribe: unsubscribe };\n    });\n}\n/**\n * Create an observable of user state. The observer is triggered for sign-in,\n * sign-out, and token refresh events\n * @param auth firebase.auth.Auth\n */\nexport function user(auth) {\n    return new Observable(function (subscriber) {\n        var unsubscribe = onIdTokenChanged(auth, subscriber.next.bind(subscriber), subscriber.error.bind(subscriber), subscriber.complete.bind(subscriber));\n        return { unsubscribe: unsubscribe };\n    });\n}\n/**\n * Create an observable of idToken state. The observer is triggered for sign-in,\n * sign-out, and token refresh events\n * @param auth firebase.auth.Auth\n */\nexport function idToken(auth) {\n    return user(auth).pipe(switchMap(function (user) { return (user ? from(getIdToken(user)) : of(null)); }));\n}\n"],"names":["auth","Observable","onAuthStateChanged","onIdTokenChanged","switchMap","from","getIdToken","of"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACO,SAAS,SAAS,CAACA,MAAI,EAAE;AAChC,IAAI,OAAO,IAAIC,eAAU,CAAC,UAAU,UAAU,EAAE;AAChD,QAAQ,IAAI,WAAW,GAAGC,uBAAkB,CAACF,MAAI,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC9J,QAAQ,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;AAC5C,KAAK,CAAC,CAAC;AACP,CAAC;AACD;AACA;AACA;AACA;AACA;AACO,SAAS,IAAI,CAACA,MAAI,EAAE;AAC3B,IAAI,OAAO,IAAIC,eAAU,CAAC,UAAU,UAAU,EAAE;AAChD,QAAQ,IAAI,WAAW,GAAGE,qBAAgB,CAACH,MAAI,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC5J,QAAQ,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;AAC5C,KAAK,CAAC,CAAC;AACP,CAAC;AACD;AACA;AACA;AACA;AACA;AACO,SAAS,OAAO,CAACA,MAAI,EAAE;AAC9B,IAAI,OAAO,IAAI,CAACA,MAAI,CAAC,CAAC,IAAI,CAACI,mBAAS,CAAC,UAAU,IAAI,EAAE,EAAE,QAAQ,IAAI,GAAGC,SAAI,CAACC,eAAU,CAAC,IAAI,CAAC,CAAC,GAAGC,OAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAC9G;;;;;;"}