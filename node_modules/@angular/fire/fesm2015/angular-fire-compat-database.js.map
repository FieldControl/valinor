{"version":3,"file":"angular-fire-compat-database.js","sources":["../../../src/compat/database/utils.ts","../../../src/compat/database/observable/fromRef.ts","../../../src/compat/database/list/changes.ts","../../../src/compat/database/list/utils.ts","../../../src/compat/database/list/snapshot-changes.ts","../../../src/compat/database/list/state-changes.ts","../../../src/compat/database/list/audit-trail.ts","../../../src/compat/database/list/data-operation.ts","../../../src/compat/database/list/remove.ts","../../../src/compat/database/list/create-reference.ts","../../../src/compat/database/object/snapshot-changes.ts","../../../src/compat/database/object/create-reference.ts","../../../src/compat/database/database.ts","../../../src/compat/database/database.module.ts","../../../src/compat/database/angular-fire-compat-database.ts"],"sourcesContent":["import { DatabaseReference, FirebaseOperation, FirebaseOperationCases, PathReference } from './interfaces';\nimport firebase from 'firebase/compat/app';\n\nexport function isString(value: any): boolean {\n  return typeof value === 'string';\n}\n\nexport function isFirebaseDataSnapshot(value: any): boolean {\n  return typeof value.exportVal === 'function';\n}\n\nexport function isNil(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\nexport function isFirebaseRef(value: any): boolean {\n  return typeof value.set === 'function';\n}\n\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nexport function getRef(database: firebase.database.Database, pathRef: PathReference): DatabaseReference {\n  // if a db ref was passed in, just return it\n  return isFirebaseRef(pathRef) ? pathRef as DatabaseReference\n    : database.ref(pathRef as string);\n}\n\nexport function checkOperationCases(item: FirebaseOperation, cases: FirebaseOperationCases): Promise<void> {\n  if (isString(item)) {\n    return cases.stringCase();\n  } else if (isFirebaseRef(item)) {\n    return cases.firebaseCase();\n  } else if (isFirebaseDataSnapshot(item)) {\n    return cases.snapshotCase();\n  }\n  throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n","import { AngularFireAction, DatabaseQuery, DatabaseSnapshot, ListenEvent } from '../interfaces';\nimport { asyncScheduler, Observable, SchedulerLike } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\n\ninterface SnapshotPrevKey<T> {\n  snapshot: DatabaseSnapshot<T>;\n  prevKey: string | null | undefined;\n}\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nexport function fromRef<T>(ref: DatabaseQuery,\n                           event: ListenEvent,\n                           listenType = 'on',\n                           scheduler: SchedulerLike = asyncScheduler\n): Observable<AngularFireAction<DatabaseSnapshot<T>>> {\n  return new Observable<SnapshotPrevKey<T>>(subscriber => {\n    let fn: any | null = null;\n    fn = ref[listenType](event, (snapshot, prevKey) => {\n      scheduler.schedule(() => {\n        subscriber.next({ snapshot, prevKey });\n      });\n      if (listenType === 'once') {\n        scheduler.schedule(() => subscriber.complete());\n      }\n    }, err => {\n      scheduler.schedule(() => subscriber.error(err));\n    });\n\n    if (listenType === 'on') {\n      return {\n        unsubscribe() {\n          if (fn != null) {\n            ref.off(event, fn);\n          }\n        }\n      };\n    } else {\n      return {\n        unsubscribe() {\n        }\n      };\n    }\n  }).pipe(\n    map(payload => {\n      const { snapshot, prevKey } = payload;\n      let key: string | null = null;\n      if (snapshot.exists()) {\n        key = snapshot.key;\n      }\n      return { type: event, payload: snapshot, prevKey, key };\n    }),\n    share()\n  );\n}\n","import { fromRef } from '../observable/fromRef';\nimport { merge, Observable, of, SchedulerLike } from 'rxjs';\n\nimport { ChildEvent, DatabaseQuery, SnapshotAction } from '../interfaces';\nimport { isNil } from '../utils';\n\nimport { distinctUntilChanged, scan, switchMap } from 'rxjs/operators';\n\nexport function listChanges<T = any>(ref: DatabaseQuery, events: ChildEvent[], scheduler?: SchedulerLike): Observable<SnapshotAction<T>[]> {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(\n    switchMap(snapshotAction => {\n      const childEvent$ = [of(snapshotAction)];\n      events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n      return merge(...childEvent$).pipe(scan(buildView, []));\n    }),\n    distinctUntilChanged()\n  );\n}\n\nfunction positionFor<T>(changes: SnapshotAction<T>[], key) {\n  const len = changes.length;\n  for (let i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction positionAfter<T>(changes: SnapshotAction<T>[], prevKey?: string) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, action) {\n  const { payload, prevKey, key } = action;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey);\n  switch (action.type) {\n    case 'value':\n      if (action.payload && action.payload.exists()) {\n        let prevKey = null;\n        action.payload.forEach(payload => {\n          const action = { payload, type: 'value', prevKey, key: payload.key };\n          prevKey = payload.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n      return current;\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        const previous = current[currentKeyPosition - 1];\n        if ((previous && previous.key || null) !== prevKey) {\n          current = current.filter(x => x.payload.key !== payload.key);\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action, ...current];\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n      return current;\n    case 'child_removed':\n      return current.filter(x => x.payload.key !== payload.key);\n    case 'child_changed':\n      return current.map(x => x.payload.key === key ? action : x);\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n      return current;\n    // default will also remove null results\n    default:\n      return current;\n  }\n}\n","import { isNil } from '../utils';\n\nexport function validateEventsArray(events?: any[]) {\n  if (isNil(events) || events.length === 0) {\n    events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n  }\n  return events;\n}\n","import { Observable, SchedulerLike } from 'rxjs';\nimport { listChanges } from './changes';\nimport { ChildEvent, DatabaseQuery, SnapshotAction } from '../interfaces';\nimport { validateEventsArray } from './utils';\n\nexport function snapshotChanges<T>(\n  query: DatabaseQuery,\n  events?: ChildEvent[],\n  scheduler?: SchedulerLike\n): Observable<SnapshotAction<T>[]> {\n  events = validateEventsArray(events);\n  return listChanges<T>(query, events, scheduler);\n}\n","import { ChildEvent, DatabaseQuery } from '../interfaces';\nimport { fromRef } from '../observable/fromRef';\nimport { validateEventsArray } from './utils';\nimport { merge, SchedulerLike } from 'rxjs';\n\nexport function stateChanges<T>(query: DatabaseQuery, events?: ChildEvent[], scheduler?: SchedulerLike) {\n  events = validateEventsArray(events);\n  const childEvent$ = events.map(event => fromRef<T>(query, event, 'on', scheduler));\n  return merge(...childEvent$);\n}\n","import { AngularFireAction, ChildEvent, DatabaseQuery, DataSnapshot, SnapshotAction } from '../interfaces';\nimport { stateChanges } from './state-changes';\nimport { Observable, SchedulerLike } from 'rxjs';\nimport { fromRef } from '../observable/fromRef';\n\nimport { map, scan, skipWhile, withLatestFrom } from 'rxjs/operators';\n\nexport function auditTrail<T>(query: DatabaseQuery, events?: ChildEvent[], scheduler?: SchedulerLike): Observable<SnapshotAction<T>[]> {\n  const auditTrail$ = stateChanges<T>(query, events)\n    .pipe(\n      scan((current, action) => [...current, action], [])\n    );\n  return waitForLoaded<T>(query, auditTrail$, scheduler);\n}\n\ninterface LoadedMetadata {\n  data: AngularFireAction<DataSnapshot>;\n  lastKeyToLoad: any;\n}\n\nfunction loadedData<T>(query: DatabaseQuery, scheduler?: SchedulerLike): Observable<LoadedMetadata> {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef<T>(query, 'value', 'on', scheduler)\n  .pipe(\n    map(data => {\n      // Store the last key in the data set\n      let lastKeyToLoad;\n      // Loop through loaded dataset to find the last key\n      data.payload.forEach(child => {\n        lastKeyToLoad = child.key; return false;\n      });\n      // return data set and the current last key loaded\n      return { data, lastKeyToLoad };\n    })\n  );\n}\n\nfunction waitForLoaded<T>(query: DatabaseQuery, action$: Observable<SnapshotAction<T>[]>, scheduler?: SchedulerLike) {\n  const loaded$ = loadedData<T>(query, scheduler);\n  return loaded$\n    .pipe(\n      withLatestFrom(action$),\n      // Get the latest values from the \"loaded\" and \"child\" datasets\n      // We can use both datasets to form an array of the latest values.\n      map(([loaded, actions]) => {\n        // Store the last key in the data set\n        const lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys };\n      }),\n      // This is the magical part, only emit when the last load key\n      // in the dataset has been loaded by a child event. At this point\n      // we can assume the dataset is \"whole\".\n      skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1),\n      // Pluck off the meta data because the user only cares\n      // to iterate through the snapshots\n      map(meta => meta.actions)\n    );\n}\n","import { DatabaseReference, DatabaseSnapshot, FirebaseOperation } from '../interfaces';\nimport { checkOperationCases } from '../utils';\n\nexport function createDataOperationMethod<T>(ref: DatabaseReference, operation: string) {\n  return function dataOperation<T>(item: FirebaseOperation, value: T) {\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item as string)[operation](value),\n      firebaseCase: () => (item as DatabaseReference)[operation](value),\n      snapshotCase: () => (item as DatabaseSnapshot<T>).ref[operation](value)\n    });\n  };\n}\n","import { DatabaseReference, DatabaseSnapshot, FirebaseOperation } from '../interfaces';\nimport { checkOperationCases } from '../utils';\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nexport function createRemoveMethod<T>(ref: DatabaseReference) {\n  return function remove(item?: FirebaseOperation): any {\n    if (!item) { return ref.remove(); }\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item as string).remove(),\n      firebaseCase: () => (item as DatabaseReference).remove(),\n      snapshotCase: () => (item as DatabaseSnapshot<T>).ref.remove()\n    });\n  };\n}\n","import { AngularFireList, ChildEvent, DatabaseQuery } from '../interfaces';\nimport { snapshotChanges } from './snapshot-changes';\nimport { stateChanges } from './state-changes';\nimport { auditTrail } from './audit-trail';\nimport { createDataOperationMethod } from './data-operation';\nimport { createRemoveMethod } from './remove';\nimport { AngularFireDatabase } from '../database';\nimport { map } from 'rxjs/operators';\nimport { keepUnstableUntilFirst } from '@angular/fire';\n\nexport function createListReference<T= any>(query: DatabaseQuery, afDatabase: AngularFireDatabase): AngularFireList<T> {\n  const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n  const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n  return {\n    query,\n    update: createDataOperationMethod<Partial<T>>(refInZone, 'update'),\n    set: createDataOperationMethod<T>(refInZone, 'set'),\n    push: (data: T) => refInZone.push(data),\n    remove: createRemoveMethod(refInZone),\n    snapshotChanges(events?: ChildEvent[]) {\n      return snapshotChanges<T>(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    stateChanges(events?: ChildEvent[]) {\n      return stateChanges<T>(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    auditTrail(events?: ChildEvent[]) {\n      return auditTrail<T>(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n    valueChanges<K extends string>(events?: ChildEvent[], options?: {idField?: K}) {\n      const snapshotChanges$ = snapshotChanges<T>(query, events, outsideAngularScheduler);\n      return snapshotChanges$.pipe(\n        map(actions => actions.map(a => {\n          if (options && options.idField) {\n            return {\n              ...a.payload.val() as T,\n              ...{\n                [options.idField]: a.key\n              }\n            };\n          } else {\n            return a.payload.val() as T;\n          }\n        })),\n        keepUnstableUntilFirst\n      );\n    }\n  };\n}\n","import { Observable, SchedulerLike } from 'rxjs';\nimport { fromRef } from '../observable/fromRef';\nimport { DatabaseQuery, SnapshotAction } from '../interfaces';\n\nexport function createObjectSnapshotChanges<T>(query: DatabaseQuery, scheduler?: SchedulerLike) {\n  return function snapshotChanges(): Observable<SnapshotAction<T>> {\n    return fromRef(query, 'value', 'on', scheduler);\n  };\n}\n","import { map } from 'rxjs/operators';\nimport { AngularFireObject, DatabaseQuery } from '../interfaces';\nimport { createObjectSnapshotChanges } from './snapshot-changes';\nimport { AngularFireDatabase } from '../database';\nimport { keepUnstableUntilFirst } from '@angular/fire';\n\nexport function createObjectReference<T= any>(query: DatabaseQuery, afDatabase: AngularFireDatabase): AngularFireObject<T> {\n  return {\n    query,\n    snapshotChanges<T>() {\n      return createObjectSnapshotChanges<T>(query, afDatabase.schedulers.outsideAngular)().pipe(\n        keepUnstableUntilFirst\n      );\n    },\n    update(data: Partial<T>) { return query.ref.update(data as any) as Promise<void>; },\n    set(data: T) { return query.ref.set(data) as Promise<void>; },\n    remove() { return query.ref.remove() as Promise<void>; },\n    valueChanges<T>() {\n      const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n      return snapshotChanges$.pipe(\n        keepUnstableUntilFirst,\n        map(action => action.payload.exists() ? action.payload.val() as T : null)\n      );\n    },\n  };\n}\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { AngularFireList, AngularFireObject, DatabaseQuery, PathReference, QueryFn } from './interfaces';\nimport { getRef } from './utils';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\nimport { ɵAngularFireSchedulers } from '@angular/fire';\nimport { FirebaseOptions } from 'firebase/app';\nimport { ɵfirebaseAppFactory, FIREBASE_APP_NAME, FIREBASE_OPTIONS, ɵcacheInstance } from '@angular/fire/compat';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport {\n  AngularFireAuth,\n  USE_EMULATOR as USE_AUTH_EMULATOR,\n  SETTINGS as AUTH_SETTINGS,\n  TENANT_ID,\n  LANGUAGE_CODE,\n  USE_DEVICE_LANGUAGE,\n  PERSISTENCE,\n  ɵauthFactory,\n} from '@angular/fire/compat/auth';\nimport firebase from 'firebase/compat/app';\nimport { AppCheckInstances } from '@angular/fire/app-check';\n\nexport const URL = new InjectionToken<string>('angularfire2.realtimeDatabaseURL');\n\ntype UseEmulatorArguments = Parameters<firebase.database.Database['useEmulator']>;\nexport const USE_EMULATOR = new InjectionToken<UseEmulatorArguments>('angularfire2.database.use-emulator');\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireDatabase {\n  public readonly database: firebase.database.Database;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) name: string | null | undefined,\n    @Optional() @Inject(URL) databaseURL: string | null,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone,\n    public schedulers: ɵAngularFireSchedulers,\n    @Optional() @Inject(USE_EMULATOR) _useEmulator: any, // tuple isn't working here\n    @Optional() auth: AngularFireAuth,\n    @Optional() @Inject(USE_AUTH_EMULATOR) useAuthEmulator: any,\n    @Optional() @Inject(AUTH_SETTINGS) authSettings: any, // can't use firebase.auth.AuthSettings here\n    @Optional() @Inject(TENANT_ID) tenantId: string | null,\n    @Optional() @Inject(LANGUAGE_CODE) languageCode: string | null,\n    @Optional() @Inject(USE_DEVICE_LANGUAGE) useDeviceLanguage: boolean | null,\n    @Optional() @Inject(PERSISTENCE) persistence: string | null,\n    @Optional() _appCheckInstances: AppCheckInstances,\n  ) {\n\n    const useEmulator: UseEmulatorArguments | null = _useEmulator;\n    const app = ɵfirebaseAppFactory(options, zone, name);\n\n    if (auth) {\n      ɵauthFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n    }\n\n    this.database = ɵcacheInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app.name, () => {\n      const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n      if (useEmulator) {\n        database.useEmulator(...useEmulator);\n      }\n      return database;\n    }, [useEmulator]);\n  }\n\n  list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T> {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    let query: DatabaseQuery = ref;\n    if (queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference<T>(query, this);\n  }\n\n  object<T>(pathOrRef: PathReference): AngularFireObject<T> {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    return createObjectReference<T>(ref, this);\n  }\n\n  createPushId() {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n    return ref.push().key;\n  }\n\n}\n\nexport {\n  PathReference,\n  DatabaseSnapshot,\n  ChildEvent,\n  ListenEvent,\n  QueryFn,\n  AngularFireList,\n  AngularFireObject,\n  AngularFireAction,\n  Action,\n  SnapshotAction\n} from './interfaces';\n","import { NgModule } from '@angular/core';\nimport { AngularFireDatabase } from './database';\nimport firebase from 'firebase/compat/app';\nimport { VERSION } from '@angular/fire';\n\n@NgModule({\n  providers: [ AngularFireDatabase ]\n})\nexport class AngularFireDatabaseModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'rtdb-compat');\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["USE_AUTH_EMULATOR","AUTH_SETTINGS"],"mappings":"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"}