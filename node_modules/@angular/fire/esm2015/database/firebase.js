// DO NOT MODIFY, this file is autogenerated by tools/build.ts
export * from 'firebase/database';
import { ɵzoneWrap } from '@angular/fire';
import { child as _child, connectDatabaseEmulator as _connectDatabaseEmulator, enableLogging as _enableLogging, endAt as _endAt, endBefore as _endBefore, equalTo as _equalTo, forceLongPolling as _forceLongPolling, forceWebSockets as _forceWebSockets, get as _get, getDatabase as _getDatabase, goOffline as _goOffline, goOnline as _goOnline, increment as _increment, limitToFirst as _limitToFirst, limitToLast as _limitToLast, off as _off, onChildAdded as _onChildAdded, onChildChanged as _onChildChanged, onChildMoved as _onChildMoved, onChildRemoved as _onChildRemoved, onDisconnect as _onDisconnect, onValue as _onValue, orderByChild as _orderByChild, orderByKey as _orderByKey, orderByPriority as _orderByPriority, orderByValue as _orderByValue, push as _push, query as _query, ref as _ref, refFromURL as _refFromURL, remove as _remove, runTransaction as _runTransaction, serverTimestamp as _serverTimestamp, set as _set, setPriority as _setPriority, setWithPriority as _setWithPriority, startAfter as _startAfter, startAt as _startAt, update as _update } from 'firebase/database';
export const child = ɵzoneWrap(_child, true);
export const connectDatabaseEmulator = ɵzoneWrap(_connectDatabaseEmulator, true);
export const enableLogging = ɵzoneWrap(_enableLogging, true);
export const endAt = ɵzoneWrap(_endAt, true);
export const endBefore = ɵzoneWrap(_endBefore, true);
export const equalTo = ɵzoneWrap(_equalTo, true);
export const forceLongPolling = ɵzoneWrap(_forceLongPolling, true);
export const forceWebSockets = ɵzoneWrap(_forceWebSockets, true);
export const get = ɵzoneWrap(_get, true);
export const getDatabase = ɵzoneWrap(_getDatabase, true);
export const goOffline = ɵzoneWrap(_goOffline, true);
export const goOnline = ɵzoneWrap(_goOnline, true);
export const increment = ɵzoneWrap(_increment, true);
export const limitToFirst = ɵzoneWrap(_limitToFirst, true);
export const limitToLast = ɵzoneWrap(_limitToLast, true);
export const off = ɵzoneWrap(_off, true);
export const onChildAdded = ɵzoneWrap(_onChildAdded, true);
export const onChildChanged = ɵzoneWrap(_onChildChanged, true);
export const onChildMoved = ɵzoneWrap(_onChildMoved, true);
export const onChildRemoved = ɵzoneWrap(_onChildRemoved, true);
export const onDisconnect = ɵzoneWrap(_onDisconnect, true);
export const onValue = ɵzoneWrap(_onValue, true);
export const orderByChild = ɵzoneWrap(_orderByChild, true);
export const orderByKey = ɵzoneWrap(_orderByKey, true);
export const orderByPriority = ɵzoneWrap(_orderByPriority, true);
export const orderByValue = ɵzoneWrap(_orderByValue, true);
export const push = ɵzoneWrap(_push, true);
export const query = ɵzoneWrap(_query, true);
export const ref = ɵzoneWrap(_ref, true);
export const refFromURL = ɵzoneWrap(_refFromURL, true);
export const remove = ɵzoneWrap(_remove, true);
export const runTransaction = ɵzoneWrap(_runTransaction, true);
export const serverTimestamp = ɵzoneWrap(_serverTimestamp, true);
export const set = ɵzoneWrap(_set, true);
export const setPriority = ɵzoneWrap(_setPriority, true);
export const setWithPriority = ɵzoneWrap(_setWithPriority, true);
export const startAfter = ɵzoneWrap(_startAfter, true);
export const startAt = ɵzoneWrap(_startAt, true);
export const update = ɵzoneWrap(_update, true);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZWJhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvZGF0YWJhc2UvZmlyZWJhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOERBQThEO0FBQzlELGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQ0wsS0FBSyxJQUFJLE1BQU0sRUFDZix1QkFBdUIsSUFBSSx3QkFBd0IsRUFDbkQsYUFBYSxJQUFJLGNBQWMsRUFDL0IsS0FBSyxJQUFJLE1BQU0sRUFDZixTQUFTLElBQUksVUFBVSxFQUN2QixPQUFPLElBQUksUUFBUSxFQUNuQixnQkFBZ0IsSUFBSSxpQkFBaUIsRUFDckMsZUFBZSxJQUFJLGdCQUFnQixFQUNuQyxHQUFHLElBQUksSUFBSSxFQUNYLFdBQVcsSUFBSSxZQUFZLEVBQzNCLFNBQVMsSUFBSSxVQUFVLEVBQ3ZCLFFBQVEsSUFBSSxTQUFTLEVBQ3JCLFNBQVMsSUFBSSxVQUFVLEVBQ3ZCLFlBQVksSUFBSSxhQUFhLEVBQzdCLFdBQVcsSUFBSSxZQUFZLEVBQzNCLEdBQUcsSUFBSSxJQUFJLEVBQ1gsWUFBWSxJQUFJLGFBQWEsRUFDN0IsY0FBYyxJQUFJLGVBQWUsRUFDakMsWUFBWSxJQUFJLGFBQWEsRUFDN0IsY0FBYyxJQUFJLGVBQWUsRUFDakMsWUFBWSxJQUFJLGFBQWEsRUFDN0IsT0FBTyxJQUFJLFFBQVEsRUFDbkIsWUFBWSxJQUFJLGFBQWEsRUFDN0IsVUFBVSxJQUFJLFdBQVcsRUFDekIsZUFBZSxJQUFJLGdCQUFnQixFQUNuQyxZQUFZLElBQUksYUFBYSxFQUM3QixJQUFJLElBQUksS0FBSyxFQUNiLEtBQUssSUFBSSxNQUFNLEVBQ2YsR0FBRyxJQUFJLElBQUksRUFDWCxVQUFVLElBQUksV0FBVyxFQUN6QixNQUFNLElBQUksT0FBTyxFQUNqQixjQUFjLElBQUksZUFBZSxFQUNqQyxlQUFlLElBQUksZ0JBQWdCLEVBQ25DLEdBQUcsSUFBSSxJQUFJLEVBQ1gsV0FBVyxJQUFJLFlBQVksRUFDM0IsZUFBZSxJQUFJLGdCQUFnQixFQUNuQyxVQUFVLElBQUksV0FBVyxFQUN6QixPQUFPLElBQUksUUFBUSxFQUNuQixNQUFNLElBQUksT0FBTyxFQUNsQixNQUFNLG1CQUFtQixDQUFDO0FBRTNCLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzdDLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLFNBQVMsQ0FBQyx3QkFBd0IsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNqRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsU0FBUyxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUM3RCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztBQUM3QyxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNyRCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNqRCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxTQUFTLENBQUMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDbkUsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNqRSxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN6QyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN6RCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNyRCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNuRCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNyRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsU0FBUyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMzRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN6RCxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN6QyxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsU0FBUyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMzRCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMvRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsU0FBUyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMzRCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMvRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsU0FBUyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMzRCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNqRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsU0FBUyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMzRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN2RCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsU0FBUyxDQUFDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2pFLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxTQUFTLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzNELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxTQUFTLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzNDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzdDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxTQUFTLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3pDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxTQUFTLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3ZELE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQy9DLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxTQUFTLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQy9ELE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxTQUFTLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDakUsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDekMsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLFNBQVMsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDekQsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNqRSxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN2RCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNqRCxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIERPIE5PVCBNT0RJRlksIHRoaXMgZmlsZSBpcyBhdXRvZ2VuZXJhdGVkIGJ5IHRvb2xzL2J1aWxkLnRzXG5leHBvcnQgKiBmcm9tICdmaXJlYmFzZS9kYXRhYmFzZSc7XG5pbXBvcnQgeyDJtXpvbmVXcmFwIH0gZnJvbSAnQGFuZ3VsYXIvZmlyZSc7XG5pbXBvcnQge1xuICBjaGlsZCBhcyBfY2hpbGQsXG4gIGNvbm5lY3REYXRhYmFzZUVtdWxhdG9yIGFzIF9jb25uZWN0RGF0YWJhc2VFbXVsYXRvcixcbiAgZW5hYmxlTG9nZ2luZyBhcyBfZW5hYmxlTG9nZ2luZyxcbiAgZW5kQXQgYXMgX2VuZEF0LFxuICBlbmRCZWZvcmUgYXMgX2VuZEJlZm9yZSxcbiAgZXF1YWxUbyBhcyBfZXF1YWxUbyxcbiAgZm9yY2VMb25nUG9sbGluZyBhcyBfZm9yY2VMb25nUG9sbGluZyxcbiAgZm9yY2VXZWJTb2NrZXRzIGFzIF9mb3JjZVdlYlNvY2tldHMsXG4gIGdldCBhcyBfZ2V0LFxuICBnZXREYXRhYmFzZSBhcyBfZ2V0RGF0YWJhc2UsXG4gIGdvT2ZmbGluZSBhcyBfZ29PZmZsaW5lLFxuICBnb09ubGluZSBhcyBfZ29PbmxpbmUsXG4gIGluY3JlbWVudCBhcyBfaW5jcmVtZW50LFxuICBsaW1pdFRvRmlyc3QgYXMgX2xpbWl0VG9GaXJzdCxcbiAgbGltaXRUb0xhc3QgYXMgX2xpbWl0VG9MYXN0LFxuICBvZmYgYXMgX29mZixcbiAgb25DaGlsZEFkZGVkIGFzIF9vbkNoaWxkQWRkZWQsXG4gIG9uQ2hpbGRDaGFuZ2VkIGFzIF9vbkNoaWxkQ2hhbmdlZCxcbiAgb25DaGlsZE1vdmVkIGFzIF9vbkNoaWxkTW92ZWQsXG4gIG9uQ2hpbGRSZW1vdmVkIGFzIF9vbkNoaWxkUmVtb3ZlZCxcbiAgb25EaXNjb25uZWN0IGFzIF9vbkRpc2Nvbm5lY3QsXG4gIG9uVmFsdWUgYXMgX29uVmFsdWUsXG4gIG9yZGVyQnlDaGlsZCBhcyBfb3JkZXJCeUNoaWxkLFxuICBvcmRlckJ5S2V5IGFzIF9vcmRlckJ5S2V5LFxuICBvcmRlckJ5UHJpb3JpdHkgYXMgX29yZGVyQnlQcmlvcml0eSxcbiAgb3JkZXJCeVZhbHVlIGFzIF9vcmRlckJ5VmFsdWUsXG4gIHB1c2ggYXMgX3B1c2gsXG4gIHF1ZXJ5IGFzIF9xdWVyeSxcbiAgcmVmIGFzIF9yZWYsXG4gIHJlZkZyb21VUkwgYXMgX3JlZkZyb21VUkwsXG4gIHJlbW92ZSBhcyBfcmVtb3ZlLFxuICBydW5UcmFuc2FjdGlvbiBhcyBfcnVuVHJhbnNhY3Rpb24sXG4gIHNlcnZlclRpbWVzdGFtcCBhcyBfc2VydmVyVGltZXN0YW1wLFxuICBzZXQgYXMgX3NldCxcbiAgc2V0UHJpb3JpdHkgYXMgX3NldFByaW9yaXR5LFxuICBzZXRXaXRoUHJpb3JpdHkgYXMgX3NldFdpdGhQcmlvcml0eSxcbiAgc3RhcnRBZnRlciBhcyBfc3RhcnRBZnRlcixcbiAgc3RhcnRBdCBhcyBfc3RhcnRBdCxcbiAgdXBkYXRlIGFzIF91cGRhdGVcbn0gZnJvbSAnZmlyZWJhc2UvZGF0YWJhc2UnO1xuXG5leHBvcnQgY29uc3QgY2hpbGQgPSDJtXpvbmVXcmFwKF9jaGlsZCwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgY29ubmVjdERhdGFiYXNlRW11bGF0b3IgPSDJtXpvbmVXcmFwKF9jb25uZWN0RGF0YWJhc2VFbXVsYXRvciwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgZW5hYmxlTG9nZ2luZyA9IMm1em9uZVdyYXAoX2VuYWJsZUxvZ2dpbmcsIHRydWUpO1xuZXhwb3J0IGNvbnN0IGVuZEF0ID0gybV6b25lV3JhcChfZW5kQXQsIHRydWUpO1xuZXhwb3J0IGNvbnN0IGVuZEJlZm9yZSA9IMm1em9uZVdyYXAoX2VuZEJlZm9yZSwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgZXF1YWxUbyA9IMm1em9uZVdyYXAoX2VxdWFsVG8sIHRydWUpO1xuZXhwb3J0IGNvbnN0IGZvcmNlTG9uZ1BvbGxpbmcgPSDJtXpvbmVXcmFwKF9mb3JjZUxvbmdQb2xsaW5nLCB0cnVlKTtcbmV4cG9ydCBjb25zdCBmb3JjZVdlYlNvY2tldHMgPSDJtXpvbmVXcmFwKF9mb3JjZVdlYlNvY2tldHMsIHRydWUpO1xuZXhwb3J0IGNvbnN0IGdldCA9IMm1em9uZVdyYXAoX2dldCwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgZ2V0RGF0YWJhc2UgPSDJtXpvbmVXcmFwKF9nZXREYXRhYmFzZSwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgZ29PZmZsaW5lID0gybV6b25lV3JhcChfZ29PZmZsaW5lLCB0cnVlKTtcbmV4cG9ydCBjb25zdCBnb09ubGluZSA9IMm1em9uZVdyYXAoX2dvT25saW5lLCB0cnVlKTtcbmV4cG9ydCBjb25zdCBpbmNyZW1lbnQgPSDJtXpvbmVXcmFwKF9pbmNyZW1lbnQsIHRydWUpO1xuZXhwb3J0IGNvbnN0IGxpbWl0VG9GaXJzdCA9IMm1em9uZVdyYXAoX2xpbWl0VG9GaXJzdCwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgbGltaXRUb0xhc3QgPSDJtXpvbmVXcmFwKF9saW1pdFRvTGFzdCwgdHJ1ZSk7XG5leHBvcnQgY29uc3Qgb2ZmID0gybV6b25lV3JhcChfb2ZmLCB0cnVlKTtcbmV4cG9ydCBjb25zdCBvbkNoaWxkQWRkZWQgPSDJtXpvbmVXcmFwKF9vbkNoaWxkQWRkZWQsIHRydWUpO1xuZXhwb3J0IGNvbnN0IG9uQ2hpbGRDaGFuZ2VkID0gybV6b25lV3JhcChfb25DaGlsZENoYW5nZWQsIHRydWUpO1xuZXhwb3J0IGNvbnN0IG9uQ2hpbGRNb3ZlZCA9IMm1em9uZVdyYXAoX29uQ2hpbGRNb3ZlZCwgdHJ1ZSk7XG5leHBvcnQgY29uc3Qgb25DaGlsZFJlbW92ZWQgPSDJtXpvbmVXcmFwKF9vbkNoaWxkUmVtb3ZlZCwgdHJ1ZSk7XG5leHBvcnQgY29uc3Qgb25EaXNjb25uZWN0ID0gybV6b25lV3JhcChfb25EaXNjb25uZWN0LCB0cnVlKTtcbmV4cG9ydCBjb25zdCBvblZhbHVlID0gybV6b25lV3JhcChfb25WYWx1ZSwgdHJ1ZSk7XG5leHBvcnQgY29uc3Qgb3JkZXJCeUNoaWxkID0gybV6b25lV3JhcChfb3JkZXJCeUNoaWxkLCB0cnVlKTtcbmV4cG9ydCBjb25zdCBvcmRlckJ5S2V5ID0gybV6b25lV3JhcChfb3JkZXJCeUtleSwgdHJ1ZSk7XG5leHBvcnQgY29uc3Qgb3JkZXJCeVByaW9yaXR5ID0gybV6b25lV3JhcChfb3JkZXJCeVByaW9yaXR5LCB0cnVlKTtcbmV4cG9ydCBjb25zdCBvcmRlckJ5VmFsdWUgPSDJtXpvbmVXcmFwKF9vcmRlckJ5VmFsdWUsIHRydWUpO1xuZXhwb3J0IGNvbnN0IHB1c2ggPSDJtXpvbmVXcmFwKF9wdXNoLCB0cnVlKTtcbmV4cG9ydCBjb25zdCBxdWVyeSA9IMm1em9uZVdyYXAoX3F1ZXJ5LCB0cnVlKTtcbmV4cG9ydCBjb25zdCByZWYgPSDJtXpvbmVXcmFwKF9yZWYsIHRydWUpO1xuZXhwb3J0IGNvbnN0IHJlZkZyb21VUkwgPSDJtXpvbmVXcmFwKF9yZWZGcm9tVVJMLCB0cnVlKTtcbmV4cG9ydCBjb25zdCByZW1vdmUgPSDJtXpvbmVXcmFwKF9yZW1vdmUsIHRydWUpO1xuZXhwb3J0IGNvbnN0IHJ1blRyYW5zYWN0aW9uID0gybV6b25lV3JhcChfcnVuVHJhbnNhY3Rpb24sIHRydWUpO1xuZXhwb3J0IGNvbnN0IHNlcnZlclRpbWVzdGFtcCA9IMm1em9uZVdyYXAoX3NlcnZlclRpbWVzdGFtcCwgdHJ1ZSk7XG5leHBvcnQgY29uc3Qgc2V0ID0gybV6b25lV3JhcChfc2V0LCB0cnVlKTtcbmV4cG9ydCBjb25zdCBzZXRQcmlvcml0eSA9IMm1em9uZVdyYXAoX3NldFByaW9yaXR5LCB0cnVlKTtcbmV4cG9ydCBjb25zdCBzZXRXaXRoUHJpb3JpdHkgPSDJtXpvbmVXcmFwKF9zZXRXaXRoUHJpb3JpdHksIHRydWUpO1xuZXhwb3J0IGNvbnN0IHN0YXJ0QWZ0ZXIgPSDJtXpvbmVXcmFwKF9zdGFydEFmdGVyLCB0cnVlKTtcbmV4cG9ydCBjb25zdCBzdGFydEF0ID0gybV6b25lV3JhcChfc3RhcnRBdCwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgdXBkYXRlID0gybV6b25lV3JhcChfdXBkYXRlLCB0cnVlKTtcbiJdfQ==