import { getApps } from 'firebase/app';
import { from, timer } from 'rxjs';
import { concatMap, distinct } from 'rxjs/operators';
export class FirebaseApp {
    constructor(app) {
        return app;
    }
}
export class FirebaseApps {
    constructor() {
        return getApps();
    }
}
export const firebaseApp$ = timer(0, 300).pipe(concatMap(() => from(getApps())), distinct());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2FwcC9hcHAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUErQixPQUFPLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDcEUsT0FBTyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDbkMsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQWtCckQsTUFBTSxPQUFPLFdBQVc7SUFDdEIsWUFBWSxHQUFpQjtRQUMzQixPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7Q0FDRjtBQUlELE1BQU0sT0FBTyxZQUFZO0lBQ3ZCO1FBQ0UsT0FBTyxPQUFPLEVBQUUsQ0FBQztJQUNuQixDQUFDO0NBQ0Y7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQzVDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUNoQyxRQUFRLEVBQUUsQ0FDWCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmlyZWJhc2VBcHAgYXMgSUZpcmViYXNlQXBwLCBnZXRBcHBzIH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7IGZyb20sIHRpbWVyIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBjb25jYXRNYXAsIGRpc3RpbmN0IH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG4vLyBOZWVkIHRvIHR1cm4gdGhlIEZpcmViYXNlQXBwIGludGVyZmFjZSBleHBvcnRlZCBieSBmaXJlYmFzZS9hcHAgaW50byBhIGNsYXNzXG4vLyBhcyB0eXBlcyBkb24ndCB3b3JrIGluIEFuZ3VsYXIgREkuIFdlIHdhbnQgZGV2ZWxvcGVycyB0byBiZSBhYmxlIHRvIGluamVjdCBGaXJlYmFzZUFwcCBsaWtlIHNvXG4vLyAgIGNvbnN0cnVjdG9yKGFwcDogRmlyZWJhc2VBcHApXG4vLyB0aGUgY2xlYW5lc3Qgd2F5IHRvIGFjaGlldmUgdGhpcyB0aGF0IEkgZm91bmQgaXMgdG8gZXhwb3J0IGEgbmV3IGludGVyZmFjZSBhbmQgY2xhc3Ncbi8vIHRoZSBpbnRlcmZhY2UganVzdCBleHRlbmRzIHRoZSBpbnRlcmZhY2UgeW91IHdhbnQgdG8gdHVybiBpbnRvIHRoZSBjbGFzcy4gVGhpcyBpbmZvcm1zIHR5ZXBzY3JpcHRcbi8vIHRoYXQgdGhlIGNsYXNzIGhhcyBhbGwgdGhlIHNhbWUgbWV0aG9kcy9wcm9wZXJ0aWVzIGFzIHRoZSBpbnRlcmZhY2UgeW91IHdhbnQgdG8gZXh0ZW5kIHdpdGhvdXRcbi8vIGJyZWFraW5nIGlmIEZpcmViYXNlIGFkZHMvcmVtb3ZlcyBBUElzIGluIGZ1dHVyZSByZWxlYXNlcy4gVGhpcyB3YXMgYSBiaWcgcHJvYmxlbSBmb3IgQGFuZ3VsYXIvZmlyZVxuLy8gYmFjayB3aGVuIHdlIGNvbnN0cnVjdGVkIG91ciBvd24gY2xhc3MuIFRoZW4gaW4gdGhlIFwibmV3IGNsYXNzXCIgd2UganVzdCByZXR1cm4gdGhlIEZpcmViYXNlQXBwIGluIHRoZVxuLy8gY29uc3RydWN0b3IsIHRoaXMgYWxzbyBoYXMgdGhlIGFkZGVkIGJlbmVmaXQgb2YgRmlyZWJhc2UgbWV0aG9kcyB0YWtpbmcgb3VyIERJIGNsYXNzIHdpdGhvdXRcbi8vIGNhc3RpbmcuIEUuZyxcbi8vICAgY29uc3RydWN0b3IocHJpdmF0ZSBhcHA6IEZpcmViYXNlQXBwKSB7IH1cbi8vICAgbmdPbkRlc3Ryb3koKSB7IGRlbGV0ZUFwcCh0aGlzLmFwcCk7IH1cbi8vXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tZW1wdHktaW50ZXJmYWNlXG5leHBvcnQgaW50ZXJmYWNlIEZpcmViYXNlQXBwIGV4dGVuZHMgSUZpcmViYXNlQXBwIHt9XG5cbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUFwcCB7XG4gIGNvbnN0cnVjdG9yKGFwcDogSUZpcmViYXNlQXBwKSB7XG4gICAgcmV0dXJuIGFwcDtcbiAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZpcmViYXNlQXBwcyBleHRlbmRzIEFycmF5PElGaXJlYmFzZUFwcD4ge31cblxuZXhwb3J0IGNsYXNzIEZpcmViYXNlQXBwcyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHJldHVybiBnZXRBcHBzKCk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGZpcmViYXNlQXBwJCA9IHRpbWVyKDAsIDMwMCkucGlwZShcbiAgY29uY2F0TWFwKCgpID0+IGZyb20oZ2V0QXBwcygpKSksXG4gIGRpc3RpbmN0KCksXG4pO1xuIl19