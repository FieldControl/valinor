{"version":3,"file":"firebase-firestore-lite.js","sources":["../util/src/crypt.ts","../util/src/defaults.ts","../util/src/global.ts","../util/src/errors.ts","../util/src/obj.ts","../util/src/compat.ts","../logger/src/logger.ts","../firestore/dist/lite/index.browser.esm2017.js","../util/src/emulator.ts","../component/src/component.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.17.2\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function A(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const I = \"ok\", T = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", D = \"already-exists\", N = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class z {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class Q {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Z {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass J {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new J(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof J && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass X {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === X.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof X ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends X {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends X {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return I;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return N;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? I : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    A(t, e, n, r, s) {\n        const i = this.I(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.T(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.A(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    T(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    I(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst yt = /^[_a-zA-Z][_a-zA-Z0-9]*(?:\\.[_a-zA-Z][_a-zA-Z0-9]*)*$/;\n\n/**\n * An alias for aggregation results.\n * @internal\n */ class gt {\n    /**\n     * @internal\n     * @param alias Un-escaped alias representation\n     */\n    constructor(t) {\n        this.alias = t;\n    }\n    /**\n     * Returns true if the string could be used as an alias.\n     */    static D(t) {\n        return yt.test(t);\n    }\n    /**\n     * Return an escaped and quoted string representation of the alias.\n     */    canonicalString() {\n        let t = this.alias.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\");\n        return gt.D(t) || (t = \"`\" + t + \"`\"), t;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */ class _t {\n    constructor(t, e, n) {\n        this.alias = t, this.N = e, this.fieldPath = n;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */ function vt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class bt {\n    static F() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = vt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction Et(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function At(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function It(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Tt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */\nclass Rt extends Error {\n    constructor() {\n        super(...arguments), this.name = \"Base64DecodeError\";\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Pt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = function(t) {\n            try {\n                return atob(t);\n            } catch (t) {\n                throw t instanceof DOMException ? new Rt(\"Invalid base64 string: \" + t) : t;\n            }\n        }\n        /** Converts a binary string to a Base64 encoded string. */ (t);\n        return new Pt(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Pt(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return Et(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nPt.EMPTY_BYTE_STRING = new Pt(\"\");\n\nconst Vt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function $t(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Vt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Dt(t.seconds),\n        nanos: Dt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Dt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Nt(t) {\n    return \"string\" == typeof t ? Pt.fromBase64String(t) : Pt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Ft {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Ft.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Ft.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new Ft(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? Et(this.nanoseconds, t.nanoseconds) : Et(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function xt(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function St(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return xt(e) ? St(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function qt(t) {\n    const e = $t(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Ft(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ot = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction kt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? xt(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Ct(t, e) {\n    if (t === e) return !0;\n    const n = kt(t);\n    if (n !== kt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return qt(t).isEqual(qt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = $t(t.timestampValue), r = $t(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Nt(t.bytesValue).isEqual(Nt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Dt(t.geoPointValue.latitude) === Dt(e.geoPointValue.latitude) && Dt(t.geoPointValue.longitude) === Dt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Dt(t.integerValue) === Dt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Dt(t.doubleValue), r = Dt(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return At(t.arrayValue.values || [], e.arrayValue.values || [], Ct);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (It(n) !== It(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Ct(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction Lt(t, e) {\n    return void 0 !== (t.values || []).find((t => Ct(t, e)));\n}\n\nfunction Mt(t, e) {\n    if (t === e) return 0;\n    const n = kt(t), r = kt(e);\n    if (n !== r) return Et(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return Et(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Dt(t.integerValue || t.doubleValue), r = Dt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return Ut(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Ut(qt(t), qt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return Et(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Nt(t), r = Nt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = Et(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return Et(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = Et(Dt(t.latitude), Dt(e.latitude));\n            if (0 !== n) return n;\n            return Et(Dt(t.longitude), Dt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Mt(n[t], r[t]);\n                if (e) return e;\n            }\n            return Et(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ot && e === Ot) return 0;\n            if (t === Ot) return 1;\n            if (e === Ot) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = Et(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Mt(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return Et(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction Ut(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return Et(t, e);\n    const n = $t(t), r = $t(e), s = Et(n.seconds, r.seconds);\n    return 0 !== s ? s : Et(n.nanos, r.nanos);\n}\n\nfunction jt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Bt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function zt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Qt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Wt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Gt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Tt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Gt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Gt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Kt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction Yt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Ct(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Ht {}\n\nclass Zt extends Ht {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new te(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new se(t, n) : \"in\" /* Operator.IN */ === e ? new ie(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new oe(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new ue(t, n) : new Zt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new ee(t, n) : new ne(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Mt(e, this.value)) : null !== e && kt(this.value) === kt(e) && this.matchesComparison(Mt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Jt extends Ht {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.S = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Jt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.S || (this.S = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.S;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.q((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    q(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction Xt(t, e) {\n    return t instanceof Zt ? function(t, e) {\n        return e instanceof Zt && t.op === e.op && t.field.isEqual(e.field) && Ct(t.value, e.value);\n    }(t, e) : t instanceof Jt ? function(t, e) {\n        if (e instanceof Jt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && Xt(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass te extends Zt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class ee extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = re(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class ne extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = re(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction re(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class se extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Bt(e) && Lt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ie extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Lt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class oe extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Lt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Lt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ue extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Bt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Lt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class ce {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ae(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class he {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new he(t);\n    }\n    static min() {\n        return new he(new Ft(0, 0));\n    }\n    static max() {\n        return new he(new Ft(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass le {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || de.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new le(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, de.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new le(this.comparator, this.root.remove(t, this.comparator).copy(null, null, de.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new fe(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new fe(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new fe(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new fe(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass fe {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass de {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : de.RED, this.left = null != r ? r : de.EMPTY, \n        this.right = null != s ? s : de.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new de(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return de.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return de.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, de.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, de.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nde.EMPTY = null, de.RED = !0, de.BLACK = !1;\n\n// end LLRBEmptyNode\nde.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new de(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass we {\n    constructor(t) {\n        this.comparator = t, this.data = new le(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new me(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new me(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof we)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new we(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass me {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class pe {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new pe([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new we(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new pe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return At(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class ye {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new ye({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Wt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Gt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Gt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Wt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Ct(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Wt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Tt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new ye(Gt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class ge {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new ge(t, 0 /* DocumentType.INVALID */ , \n        /* version */ he.min(), \n        /* readTime */ he.min(), \n        /* createTime */ he.min(), ye.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new ge(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ he.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new ge(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ he.min(), \n        /* createTime */ he.min(), ye.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new ge(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ he.min(), \n        /* createTime */ he.min(), ye.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(he.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = ye.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = ye.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = he.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof ge && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new ge(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass _e {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.O = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function ve(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new _e(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass be {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.k = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.C = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function Ee(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction Ae(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction Ie(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function Te(t) {\n    const e = A(t);\n    if (null === e.k) {\n        e.k = [];\n        const t = Ae(e), n = Ee(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.k.push(new ce(t)), e.k.push(new ce(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.k.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.k.push(new ce(nt.keyField(), t));\n            }\n        }\n    }\n    return e.k;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Re(t) {\n    const e = A(t);\n    if (!e.C) if (\"F\" /* LimitType.First */ === e.limitType) e.C = ve(e.path, e.collectionGroup, Te(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of Te(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new ce(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Kt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Kt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.C = ve(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.C;\n}\n\nfunction Pe(t, e) {\n    e.getFirstInequalityField(), Ae(t);\n    const n = t.filters.concat([ e ]);\n    return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Ve(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ae(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!Xt(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Yt(t.startAt, e.startAt) && Yt(t.endAt, e.endAt);\n    }(Re(t), Re(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction $e(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.L) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class De {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Ne extends De {}\n\n/** Transforms an array value via a union operation. */ class Fe extends De {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class xe extends De {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Se extends De {\n    constructor(t, e) {\n        super(), this.M = t, this.U = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class qe {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Oe {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Oe;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Oe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Oe(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class ke {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Ce extends ke {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Le extends ke {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Me extends ke {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Ue extends ke {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const je = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Be = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), ze = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Qe {\n    constructor(t, e) {\n        this.databaseId = t, this.L = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction We(t, e) {\n    if (t.L) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ge(t, e) {\n    return t.L ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Ke(t, e) {\n    return We(t, e.toTimestamp());\n}\n\nfunction Ye(t) {\n    return E(!!t), he.fromTimestamp(function(t) {\n        const e = $t(t);\n        return new Ft(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction He(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ze(t, e) {\n    return He(t.databaseId, e.path);\n}\n\nfunction Je(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(fn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Xe(t, e) {\n    return He(t.databaseId, e);\n}\n\nfunction tn(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction en(t, e, n) {\n    return {\n        name: Ze(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction nn(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Je(t, e.found.name), r = Ye(e.found.updateTime), s = e.found.createTime ? Ye(e.found.createTime) : he.min(), i = new ye({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return ge.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Je(t, e.missing), r = Ye(e.readTime);\n        return ge.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction rn(t, e) {\n    let n;\n    if (e instanceof Ce) n = {\n        update: en(t, e.key, e.value)\n    }; else if (e instanceof Me) n = {\n        delete: Ze(t, e.key)\n    }; else if (e instanceof Le) n = {\n        update: en(t, e.key, e.data),\n        updateMask: ln(e.fieldMask)\n    }; else {\n        if (!(e instanceof Ue)) return b();\n        n = {\n            verify: Ze(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Ne) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Fe) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof xe) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Se) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.U\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Ke(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction sn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Xe(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Xe(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return hn(Jt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: an(t.field),\n                direction: on(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.L || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction on(t) {\n    return je[t];\n}\n\n// visible for testing\nfunction un(t) {\n    return Be[t];\n}\n\nfunction cn(t) {\n    return ze[t];\n}\n\nfunction an(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction hn(t) {\n    return t instanceof Zt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Qt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (zt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Qt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (zt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: an(t.field),\n                op: un(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Jt ? function(t) {\n        const e = t.getFilters().map((t => hn(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: cn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction ln(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction fn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function dn(t) {\n    return new Qe(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass wn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.j = t, this.timerId = e, this.B = n, this.W = r, this.G = s, this.K = 0, this.Y = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.H = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.K = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Z() {\n        this.K = this.G;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    J(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.K + this.X()), n = Math.max(0, Date.now() - this.H), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.K} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.Y = this.j.enqueueAfterDelay(this.timerId, r, (() => (this.H = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.K *= this.W, this.K < this.B && (this.K = this.B), this.K > this.G && (this.K = this.G);\n    }\n    tt() {\n        null !== this.Y && (this.Y.skipDelay(), this.Y = null);\n    }\n    cancel() {\n        null !== this.Y && (this.Y.cancel(), this.Y = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    X() {\n        return (Math.random() - .5) * this.K;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass mn extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.M = r, this.et = !1;\n    }\n    nt() {\n        if (this.et) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    A(t, e, n) {\n        return this.nt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.A(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.nt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.et = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function pn(t, e) {\n    const n = A(t), r = tn(n.M) + \"/documents\", s = {\n        writes: e.map((t => rn(n.M, t)))\n    };\n    await n.A(\"Commit\", r, s);\n}\n\nasync function yn(t, e) {\n    const n = A(t), r = tn(n.M) + \"/documents\", s = {\n        documents: e.map((t => Ze(n.M, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = nn(n.M, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function gn(t, e) {\n    const n = A(t), r = sn(n.M, Re(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Je(t, e.name), s = Ye(e.updateTime), i = e.createTime ? Ye(e.createTime) : he.min(), o = new ye({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = ge.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.M, t.document, void 0)));\n}\n\nasync function _n(t, e, n) {\n    const r = A(t), s = function(t, e, n) {\n        const r = sn(t, e), s = [];\n        return n.forEach((t => {\n            \"count\" === t.N ? s.push({\n                alias: t.alias.canonicalString(),\n                count: {}\n            }) : \"avg\" === t.N ? s.push({\n                alias: t.alias.canonicalString(),\n                avg: {\n                    field: an(t.fieldPath)\n                }\n            }) : \"sum\" === t.N && s.push({\n                alias: t.alias.canonicalString(),\n                sum: {\n                    field: an(t.fieldPath)\n                }\n            });\n        })), {\n            structuredAggregationQuery: {\n                aggregations: s,\n                structuredQuery: r.structuredQuery\n            },\n            parent: r.parent\n        };\n    }(r.M, Re(e), n), i = s.parent;\n    r.connection.v || delete s.parent;\n    const o = (await r.P(\"RunAggregationQuery\", i, s, /*expectedResponseCount=*/ 1)).filter((t => !!t.result));\n    // Omit RunAggregationQueryResponse that only contain readTimes.\n        return E(1 === o.length), (u = o[0]).result, u.result.aggregateFields, new ye({\n        mapValue: {\n            fields: null === (c = u.result) || void 0 === c ? void 0 : c.aggregateFields\n        }\n    });\n    var u, c;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const vn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction bn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!vn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new Z(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = dn(t._databaseId), u = function(t, e, n, r) {\n            return new mn(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        vn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return vn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass En {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class An {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new En({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new En(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new z;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = vn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), vn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction In(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction Tn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && Rn(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function Rn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, An))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new Q(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function Pn(t) {\n    return t = ct(t, An), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Vn {\n    /**\n     * Create a new AggregateField<T>\n     * @param _aggregateType Specifies the type of aggregation operation to perform.\n     * @param _internalFieldPath Optionally specifies the field that is aggregated.\n     * @internal\n     */\n    constructor(\n    // TODO (sum/avg) make aggregateType public when the feature is supported\n    t = \"count\", e) {\n        this._aggregateType = t, this._internalFieldPath = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class $n {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._userDataWriter = e, this._data = n, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._userDataWriter.convertValue(this._data.value);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Dn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new Fn(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Dn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Nn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Nn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class Fn extends Nn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new be(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Dn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new Fn(this.firestore, t, this._path);\n    }\n}\n\nfunction xn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof An) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new Fn(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Dn || t instanceof Fn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new Fn(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Sn(t, e) {\n    if (t = ct(t, An), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Nn(t, \n    /* converter= */ null, function(t) {\n        return new be(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction qn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = bt.F()), st(\"doc\", \"path\", e), t instanceof An) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Dn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Dn || t instanceof Fn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Dn(t.firestore, t instanceof Fn ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function On(t, e) {\n    return t = l(t), e = l(e), (t instanceof Dn || t instanceof Fn) && (e instanceof Dn || e instanceof Fn) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function kn(t, e) {\n    return t = l(t), e = l(e), t instanceof Nn && e instanceof Nn && (t.firestore === e.firestore && Ve(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Cn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Cn(Pt.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Cn(Pt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class Ln {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Mn() {\n    return new Ln(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Un {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class jn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return Et(this._lat, t._lat) || Et(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Bn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class zn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Le(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Ce(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Qn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Le(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Wn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Gn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.M = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.rt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get st() {\n        return this.settings.st;\n    }\n    /** Returns a new context with the specified settings overwritten. */    it(t) {\n        return new Gn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.M, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    ot(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.it({\n            path: n,\n            ut: !1\n        });\n        return r.ct(t), r;\n    }\n    at(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.it({\n            path: n,\n            ut: !1\n        });\n        return r.rt(), r;\n    }\n    ht(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.it({\n            path: void 0,\n            ut: !0\n        });\n    }\n    lt(t) {\n        return dr(t, this.settings.methodName, this.settings.ft || !1, this.path, this.settings.dt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    rt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ct(this.path.get(t));\n    }\n    ct(t) {\n        if (0 === t.length) throw this.lt(\"Document fields must not be empty\");\n        if (Wn(this.st) && Bn.test(t)) throw this.lt('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Kn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.M = n || dn(t);\n    }\n    /** Creates a new top-level parse context. */    wt(t, e, n, r = !1) {\n        return new Gn({\n            st: t,\n            methodName: e,\n            dt: n,\n            path: nt.emptyPath(),\n            ut: !1,\n            ft: r\n        }, this.databaseId, this.M, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Yn(t) {\n    const e = t._freezeSettings(), n = dn(t._databaseId);\n    return new Kn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Hn(t, e, n, r, s, i = {}) {\n    const o = t.wt(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    ar(\"Data must be an object, but it was:\", o, r);\n    const u = ur(r, o);\n    let c, a;\n    if (i.merge) c = new pe(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = hr(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            wr(t, s) || t.push(s);\n        }\n        c = new pe(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new zn(new ye(u), c, a);\n}\n\nclass Zn extends Un {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.st) throw 1 /* UserDataSource.Update */ === t.st ? t.lt(`${this._methodName}() can only appear at the top level of your update data`) : t.lt(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Zn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Jn(t, e, n) {\n    return new Gn({\n        st: 3 /* UserDataSource.Argument */ ,\n        dt: e.settings.dt,\n        methodName: t._methodName,\n        ut: n\n    }, e.databaseId, e.M, e.ignoreUndefinedProperties);\n}\n\nclass Xn extends Un {\n    _toFieldTransform(t) {\n        return new qe(t.path, new Ne);\n    }\n    isEqual(t) {\n        return t instanceof Xn;\n    }\n}\n\nclass tr extends Un {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Jn(this, t, \n        /*array=*/ !0), n = this.yt.map((t => or(t, e))), r = new Fe(n);\n        return new qe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass er extends Un {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Jn(this, t, \n        /*array=*/ !0), n = this.yt.map((t => or(t, e))), r = new xe(n);\n        return new qe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass nr extends Un {\n    constructor(t, e) {\n        super(t), this.gt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Se(t.M, $e(t.M, this.gt));\n        return new qe(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function rr(t, e, n, r) {\n    const s = t.wt(1 /* UserDataSource.Update */ , e, n);\n    ar(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = ye.empty();\n    Tt(r, ((t, r) => {\n        const u = fr(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.at(u);\n        if (r instanceof Zn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = or(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new pe(i);\n    return new Qn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function sr(t, e, n, r, s, i) {\n    const o = t.wt(1 /* UserDataSource.Update */ , e, n), u = [ hr(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(hr(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = ye.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!wr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.at(e);\n        if (n instanceof Zn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = or(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new pe(a);\n    return new Qn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function ir(t, e, n, r = !1) {\n    return or(n, t.wt(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function or(t, e) {\n    if (cr(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return ar(\"Unsupported field value:\", e, t), ur(t, e);\n    if (t instanceof Un) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Wn(e.st)) throw e.lt(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.lt(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ut && 4 /* UserDataSource.ArrayArgument */ !== e.st) throw e.lt(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = or(s, e.ht(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return $e(e.M, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = Ft.fromDate(t);\n            return {\n                timestampValue: We(e.M, n)\n            };\n        }\n        if (t instanceof Ft) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new Ft(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: We(e.M, n)\n            };\n        }\n        if (t instanceof jn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Cn) return {\n            bytesValue: Ge(e.M, t._byteString)\n        };\n        if (t instanceof Dn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.lt(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: He(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.lt(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction ur(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Tt(t, ((t, r) => {\n        const s = or(r, e.ot(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction cr(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Ft || t instanceof jn || t instanceof Cn || t instanceof Dn || t instanceof Un);\n}\n\nfunction ar(t, e, n) {\n    if (!cr(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.lt(t + \" a custom object\") : e.lt(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function hr(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof Ln) return e._internalPath;\n    if (\"string\" == typeof e) return fr(t, e);\n    throw dr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const lr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function fr(t, e, n) {\n    if (e.search(lr) >= 0) throw dr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Ln(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw dr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction dr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function wr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class mr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Dn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new pr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(_r(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class pr extends mr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class yr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function gr(t, e) {\n    return t = l(t), e = l(e), t instanceof mr && e instanceof mr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof yr && e instanceof yr && (kn(t.query, e.query) && At(t.docs, e.docs, gr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function _r(t, e) {\n    return \"string\" == typeof e ? fr(t, e) : e instanceof Ln ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass vr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class br extends vr {}\n\nfunction Er(t, e, ...n) {\n    let r = [];\n    e instanceof vr && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Tr)).length, n = t.filter((t => t instanceof Ar)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class Ar extends br {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new Ar(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return jr(t._query, e), new Nn(t.firestore, t.converter, Pe(t._query, e));\n    }\n    _parse(t) {\n        const e = Yn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Ur(o, i);\n                    const e = [];\n                    for (const n of o) e.push(Mr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = Mr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Ur(o, i), \n            u = ir(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Zt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function Ir(t, e, n) {\n    const r = e, s = _r(\"where\", t);\n    return Ar._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ class Tr extends vr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Tr(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Jt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) jr(n, t), n = Pe(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Nn(t.firestore, t.converter, Pe(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Rr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zr(\"or\", t))), Tr._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Pr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zr(\"and\", t))), Tr._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Vr extends br {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Vr(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new ce(e, n);\n            return function(t, e) {\n                if (null === Ee(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = Ae(t);\n                    null !== n && Br(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Nn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new be(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function $r(t, e = \"asc\") {\n    const n = e, r = _r(\"orderBy\", t);\n    return Vr._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Dr extends br {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Dr(t, e, n);\n    }\n    _apply(t) {\n        return new Nn(t.firestore, t.converter, function(t, e, n) {\n            return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Nr(t) {\n    return at(\"limit\", t), Dr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Fr(t) {\n    return at(\"limitToLast\", t), Dr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class xr extends br {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new xr(t, e, n);\n    }\n    _apply(t) {\n        const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n        return new Nn(t.firestore, t.converter, function(t, e) {\n            return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Sr(...t) {\n    return xr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction qr(...t) {\n    return xr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class Or extends br {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Or(t, e, n);\n    }\n    _apply(t) {\n        const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n        return new Nn(t.firestore, t.converter, function(t, e) {\n            return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction kr(...t) {\n    return Or._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction Cr(...t) {\n    return Or._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Lr(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof mr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of Te(t)) if (n.field.isKeyField()) i.push(jt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (xt(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Kt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Yn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!Ie(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(jt(e, s));\n                } else {\n                    const t = ir(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Kt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction Mr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!Ie(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return jt(t, new rt(r));\n    }\n    if (n instanceof Dn) return jt(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Ur(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */ function jr(t, e) {\n    if (e.isInequality()) {\n        const n = Ae(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = Ee(t);\n        null !== s && Br(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n          case \"in\" /* Operator.IN */ :\n            return [ \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Br(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction zr(t, e) {\n    if (!(e instanceof Ar || e instanceof Tr)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Qr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Wr extends class {\n    convertValue(t, e = \"none\") {\n        switch (kt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Dt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Nt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Tt(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new jn(Dt(t.latitude), Dt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = St(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(qt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = $t(t);\n        return new Ft(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(fn(n));\n        const r = new J(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Cn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Dn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Gr(t) {\n    const e = bn((t = ct(t, Dn)).firestore), n = new Wr(t.firestore);\n    return yn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new mr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Kr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Nn))._query);\n    const e = bn(t.firestore), n = new Wr(t.firestore);\n    return gn(e, t._query).then((e => {\n        const r = e.map((e => new pr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new yr(t, r);\n    }));\n}\n\nfunction Yr(t, e, n) {\n    const r = Qr((t = ct(t, Dn)).converter, e, n), s = Hn(Yn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return pn(bn(t.firestore), [ s.toMutation(t._key, Oe.none()) ]);\n}\n\nfunction Hr(t, e, n, ...r) {\n    const s = Yn((t = ct(t, Dn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? sr(s, \"updateDoc\", t._key, e, n, r) : rr(s, \"updateDoc\", t._key, e);\n    return pn(bn(t.firestore), [ i.toMutation(t._key, Oe.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Zr(t) {\n    return pn(bn((t = ct(t, Dn)).firestore), [ new Me(t._key, Oe.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Jr(t, e) {\n    const n = qn(t = ct(t, Fn)), r = Qr(t.converter, e), s = Hn(Yn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return pn(bn(t.firestore), [ s.toMutation(n._key, Oe.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function Xr(t) {\n    return ts(t, {\n        count: rs()\n    });\n}\n\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregate(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */ function ts(t, e) {\n    const n = ct(t.firestore, An), r = bn(n), s = function(t, e) {\n        const n = [];\n        for (const r in t) Object.prototype.hasOwnProperty.call(t, r) && n.push(e(t[r], r, t));\n        return n;\n    }(e, ((t, e) => new _t(new gt(e), t._aggregateType, t._internalFieldPath)));\n    // Run the aggregation and convert the results\n    return _n(r, t._query, s).then((e => function(t, e, n) {\n        const r = new Wr(t);\n        return new $n(e, r, n);\n    }\n    /**\n * Create an AggregateField object that can be used to compute the sum of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to sum across the result set.\n * @internal TODO (sum/avg) remove when public\n */ (n, t, e)));\n}\n\nfunction es(t) {\n    return new Vn(\"sum\", hr(\"sum\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */ function ns(t) {\n    return new Vn(\"avg\", hr(\"average\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */ function rs() {\n    return new Vn(\"count\");\n}\n\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */ function ss(t, e) {\n    var n, r;\n    return t instanceof Vn && e instanceof Vn && t._aggregateType === e._aggregateType && (null === (n = t._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString()) === (null === (r = e._internalFieldPath) || void 0 === r ? void 0 : r.canonicalString());\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function is(t, e) {\n    return kn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function os() {\n    return new Zn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function us() {\n    return new Xn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function cs(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new tr(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function as(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new er(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function hs(t) {\n    return new nr(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class ls {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Yn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = fs(t, this._firestore), s = Qr(r.converter, e, n), i = Hn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Oe.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = fs(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? sr(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : rr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Oe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = fs(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Me(e._key, Oe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction fs(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function ds(t) {\n    const e = bn(t = ct(t, An));\n    return new ls(t, (t => pn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class ws {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await yn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Me(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new Ue(n, this.precondition(n)));\n        })), await pn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = he.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(he.min()) ? Oe.exists(!1) : Oe.updateTime(e) : Oe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(he.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Oe.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Oe.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ms = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass ps {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this._t = n.maxAttempts, this.vt = new wn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this._t -= 1, this.bt();\n    }\n    bt() {\n        this.vt.J((async () => {\n            const t = new ws(this.datastore), e = this.Et(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.At(t);\n                }))));\n            })).catch((t => {\n                this.At(t);\n            }));\n        }));\n    }\n    Et(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    At(t) {\n        this._t > 0 && this.It(t) ? (this._t -= 1, this.asyncQueue.enqueueAndForget((() => (this.bt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    It(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case T:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case D:\n                  case N:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function ys() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class gs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new gs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class _s {\n    constructor() {\n        // The last promise in the queue.\n        this.Tt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Rt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.Pt = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Vt = [], \n        // visible for testing\n        this.$t = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Dt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Nt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Ft = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.vt = new wn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.xt = () => {\n            const t = ys();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.vt.tt();\n        };\n        const t = ys();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.xt);\n    }\n    get isShuttingDown() {\n        return this.Pt;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.St(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.qt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.Pt) {\n            this.Pt = !0, this.Nt = t || !1;\n            const e = ys();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.xt);\n        }\n    }\n    enqueue(t) {\n        if (this.St(), this.Pt) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.qt((() => this.Pt && this.Nt ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Rt.push(t), this.Ot())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Ot() {\n        if (0 !== this.Rt.length) {\n            try {\n                await this.Rt[0](), this.Rt.shift(), this.vt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Rt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.vt.J((() => this.Ot()));\n        }\n    }\n    qt(t) {\n        const e = this.Tt.then((() => (this.Dt = !0, t().catch((t => {\n            this.$t = t, this.Dt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Dt = !1, t))))));\n        return this.Tt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.St(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Ft.indexOf(t) > -1 && (e = 0);\n        const r = gs.createAndSchedule(this, t, e, n, (t => this.kt(t)));\n        return this.Vt.push(r), r;\n    }\n    St() {\n        this.$t && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ct() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Tt, await t;\n        } while (t !== this.Tt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Lt(t) {\n        for (const e of this.Vt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Mt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ct().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Vt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Vt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ct();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Ut(t) {\n        this.Ft.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    kt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Vt.indexOf(t);\n        this.Vt.splice(e, 1);\n    }\n}\n\nclass vs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Yn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = fs(t, this._firestore), n = new Wr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new mr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new mr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = fs(t, this._firestore), s = Qr(r.converter, e, n), i = Hn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = fs(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? sr(this._dataReader, \"Transaction.update\", s._key, e, n, r) : rr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = fs(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function bs(t, e, n) {\n    const r = bn(t = ct(t, An)), s = Object.assign(Object.assign({}, ms), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new ps(new _s, r, s, (n => e(new vs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new An(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new J(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.8.4\", \"\"), r(\"firestore-lite\", \"3.8.4\", \"__BUILD_TARGET__\");\n\nexport { Vn as AggregateField, $n as AggregateQuerySnapshot, Cn as Bytes, Fn as CollectionReference, Dn as DocumentReference, mr as DocumentSnapshot, Ln as FieldPath, Un as FieldValue, An as Firestore, U as FirestoreError, jn as GeoPoint, Nn as Query, Tr as QueryCompositeFilterConstraint, br as QueryConstraint, pr as QueryDocumentSnapshot, Or as QueryEndAtConstraint, Ar as QueryFieldFilterConstraint, Dr as QueryLimitConstraint, Vr as QueryOrderByConstraint, yr as QuerySnapshot, xr as QueryStartAtConstraint, Ft as Timestamp, vs as Transaction, ls as WriteBatch, Jr as addDoc, ss as aggregateFieldEqual, is as aggregateQuerySnapshotEqual, Pr as and, as as arrayRemove, cs as arrayUnion, ns as average, xn as collection, Sn as collectionGroup, Rn as connectFirestoreEmulator, rs as count, Zr as deleteDoc, os as deleteField, qn as doc, Mn as documentId, Cr as endAt, kr as endBefore, ts as getAggregate, Xr as getCount, Gr as getDoc, Kr as getDocs, Tn as getFirestore, hs as increment, In as initializeFirestore, Nr as limit, Fr as limitToLast, Rr as or, $r as orderBy, Er as query, kn as queryEqual, On as refEqual, bs as runTransaction, us as serverTimestamp, Yr as setDoc, p as setLogLevel, gr as snapshotEqual, qr as startAfter, Sr as startAt, es as sum, Pn as terminate, Hr as updateDoc, Ir as where, ds as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n"],"names":["stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","DecodeBase64StringError","constructor","name","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","getDefaultsFromGlobal","self","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromCookie","document","match","cookie","e","decoded","console","error","base64Decode","JSON","parse","getDefaults","process","env","defaultsJsonString","getDefaultsFromEnvVariable","info","getDefaultEmulatorHostnameAndPort","productName","host","_a","_b","emulatorHosts","getDefaultEmulatorHost","separatorIndex","lastIndexOf","port","parseInt","substring","FirebaseError","code","message","customData","super","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","PATTERN","_","key","value","replaceTemplate","fullMessage","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","getModularInstance","_delegate","LogLevel","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","INFO","warn","WARN","ERROR","silent","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","args","logLevel","now","Date","toISOString","method","d","t","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","log","y","n","map","v","g","stringify","E","A","T","R","P","V","$","N","F","x","S","q","O","C","L","U","toString","j","promise","Promise","resolve","reject","B","user","type","headers","Map","set","z","getToken","invalidateToken","start","enqueueRetryable","shutdown","Q","token","changeListener","W","auth","onInit","then","accessToken","getUid","G","r","o","h","l","getAuthHeaderValueForFirstParty","K","Y","H","appCheck","Z","s","databaseId","appId","persistenceKey","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","J","projectId","database","static","isDefaultDatabase","X","segments","offset","len","comparator","child","slice","limit","forEach","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","tt","canonicalString","indexOf","split","filter","et","nt","test","isValidIdentifier","isKeyField","rt","path","fromString","emptyPath","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","st","it","isDocumentKey","ot","ut","ct","at","ht","lt","ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","dt","wt","mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","pt","databaseInfo","I","async","body","status","statusText","ok","json","yt","gt","alias","D","_t","fieldPath","vt","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","bt","Et","At","every","It","hasOwnProperty","call","Tt","Rt","arguments","Pt","binaryString","DOMException","Symbol","iterator","next","done","toBase64","toUint8Array","approximateByteSize","compareTo","EMPTY_BYTE_STRING","Vt","RegExp","$t","exec","substr","Number","seconds","getTime","nanos","Dt","Nt","fromBase64String","fromUint8Array","Ft","nanoseconds","fromMillis","toDate","toMillis","_compareTo","toJSON","valueOf","padStart","xt","mapValue","fields","__type__","stringValue","St","__previous_value__","qt","__local_write_time__","timestampValue","Ot","kt","Ct","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","Lt","find","Mt","Ut","sort","jt","Bt","zt","Qt","Wt","Gt","assign","Kt","position","inclusive","Yt","Ht","Zt","field","op","createKeyFieldInFilter","te","se","ie","oe","ue","ee","ne","matches","matchesComparison","isInequality","getFlattenedFilters","getFilters","getFirstInequalityField","Jt","filters","reduce","concat","Xt","fromName","re","some","nullValue","ce","dir","ae","he","timestamp","toMicroseconds","toTimestamp","le","root","de","EMPTY","insert","copy","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","fe","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","we","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","me","add","delete","unionWith","iter","pe","covers","ye","getFieldsMap","setAll","applyChanges","clone","ge","documentType","version","readTime","createTime","documentState","empty","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","_e","orderBy","startAt","endAt","ve","be","explicitOrderBy","limitType","Ee","Ae","Ie","Te","keyField","Re","Pe","$e","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","De","Ne","Fe","elements","xe","Se","M","qe","transform","Oe","updateTime","exists","isNone","ke","Ce","precondition","fieldTransforms","getFieldMask","Le","fieldMask","Me","Ue","je","asc","desc","Be","in","ze","and","or","Qe","We","Ge","Ke","Ye","fromTimestamp","He","Ze","Je","fn","Xe","tn","en","sn","structuredQuery","parent","from","collectionId","allDescendants","hn","where","an","direction","on","before","un","cn","unaryFilter","fieldFilter","compositeFilter","ln","fieldPaths","dn","wn","timerId","reset","cancel","max","enqueueAfterDelay","skipDelay","mn","authCredentials","appCheckCredentials","connection","all","catch","terminate","pn","writes","update","updateMask","verify","updateTransforms","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","rn","yn","documents","found","newFoundDocument","missing","newNoDocument","nn","vn","bn","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","En","credentials","ignoreUndefinedProperties","cacheSizeBytes","An","_app","_settings","_settingsFrozen","_initialized","_terminateTask","_setSettings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_delete","_terminate","settings","In","_getProvider","isInitialized","initialize","instanceIdentifier","Tn","getImmediate","identifier","Rn","mockUserToken","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","alg","Pn","Vn","_aggregateType","_internalFieldPath","$n","_userDataWriter","_data","query","convertValue","Dn","converter","_key","firestore","_path","id","Fn","withConverter","Nn","_query","xn","Sn","qn","On","kn","Ve","Cn","_byteString","Ln","_internalPath","Mn","Un","_methodName","jn","isFinite","_lat","_long","Bn","zn","toMutation","Qn","Wn","Gn","dr","methodName","contains","Kn","Yn","Hn","merge","mergeFields","ar","ur","hr","wr","Zn","_toFieldTransform","Jn","Xn","tr","er","nr","rr","fr","sr","f","ir","cr","fromDate","getPrototypeOf","lr","search","mr","_firestore","_document","_converter","ref","pr","fromFirestore","_r","yr","_docs","docs","gr","vr","br","Er","Tr","Ar","_apply","_field","_op","_value","_parse","jr","Ur","Mr","Ir","_create","_queryConstraints","_getOperator","_getQueryConstraints","Rr","zr","Pr","Vr","_direction","Br","$r","Dr","_limit","_limitType","Nr","Fr","xr","_docOrFields","_inclusive","Lr","Sr","qr","Or","kr","Cr","Qr","toFirestore","Wr","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","Gr","Kr","gn","reverse","Yr","none","Hr","Zr","Jr","Xr","ts","count","rs","avg","sum","structuredAggregationQuery","aggregations","result","aggregateFields","_n","es","ns","ss","is","os","us","cs","as","hs","ls","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","fs","commit","ds","ws","datastore","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","fromPath","ms","maxAttempts","ps","asyncQueue","updateFunction","deferred","run","enqueueAndForget","ys","gs","targetTimeMs","removalCallback","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","_s","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","shift","stack","createAndSchedule","verifyOperationInProgress","splice","vs","_transaction","lookup","bs","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","callback","getProvider","apply"],"mappings":"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","preExistingComment":"firebase-firestore-lite.js.map"}