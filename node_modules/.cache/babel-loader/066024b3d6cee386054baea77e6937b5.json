{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unicodeToCodepoint; // avoid runtime RegExp creation for not so smart,\n// not JIT based, and old browsers / engines\n// https://github.com/twitter/twemoji/blob/gh-pages/2/twemoji.js#L232\n\nvar UFE0Fg = /\\uFE0F/g; // \\u200D is a zero-width joiner character\n// https://github.com/twitter/twemoji/blob/gh-pages/2/twemoji.js#L235\n\nvar U200D = String.fromCharCode(0x200d); // convert utf16 into code points\n\nfunction toCodePoint(input) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"-\";\n  var codePoints = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var codePoint = _step.value;\n      codePoints.push(codePoint.codePointAt(0).toString(16));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return codePoints.join(separator);\n}\n\nfunction unicodeToCodepoint(input) {\n  return toCodePoint(input.indexOf(U200D) < 0 ? input.replace(UFE0Fg, \"\") : input);\n}","map":{"version":3,"sources":["/Users/mie/Desktop/Web development /valinor/node_modules/react-emoji-render/lib/unicodeToCodepoint.js"],"names":["Object","defineProperty","exports","value","default","unicodeToCodepoint","UFE0Fg","U200D","String","fromCharCode","toCodePoint","input","separator","arguments","length","undefined","codePoints","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","done","codePoint","push","codePointAt","toString","err","return","join","indexOf","replace"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,kBAAlB,C,CACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAG,SAAb,C,CAEA;AACA;;AACA,IAAIC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoB,MAApB,CAAZ,C,CAEA;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,GAApF;AAEA,MAAIG,UAAU,GAAG,EAAjB;AACA,MAAIC,yBAAyB,GAAG,IAAhC;AACA,MAAIC,iBAAiB,GAAG,KAAxB;AACA,MAAIC,cAAc,GAAGJ,SAArB;;AAEA,MAAI;AACF,SAAK,IAAIK,SAAS,GAAGT,KAAK,CAACU,MAAM,CAACC,QAAR,CAAL,EAAhB,EAA0CC,KAA/C,EAAsD,EAAEN,yBAAyB,GAAG,CAACM,KAAK,GAAGH,SAAS,CAACI,IAAV,EAAT,EAA2BC,IAAzD,CAAtD,EAAsHR,yBAAyB,GAAG,IAAlJ,EAAwJ;AACtJ,UAAIS,SAAS,GAAGH,KAAK,CAACpB,KAAtB;AAEAa,MAAAA,UAAU,CAACW,IAAX,CAAgBD,SAAS,CAACE,WAAV,CAAsB,CAAtB,EAAyBC,QAAzB,CAAkC,EAAlC,CAAhB;AACD;AACF,GAND,CAME,OAAOC,GAAP,EAAY;AACZZ,IAAAA,iBAAiB,GAAG,IAApB;AACAC,IAAAA,cAAc,GAAGW,GAAjB;AACD,GATD,SASU;AACR,QAAI;AACF,UAAI,CAACb,yBAAD,IAA8BG,SAAS,CAACW,MAA5C,EAAoD;AAClDX,QAAAA,SAAS,CAACW,MAAV;AACD;AACF,KAJD,SAIU;AACR,UAAIb,iBAAJ,EAAuB;AACrB,cAAMC,cAAN;AACD;AACF;AACF;;AAED,SAAOH,UAAU,CAACgB,IAAX,CAAgBpB,SAAhB,CAAP;AACD;;AAED,SAASP,kBAAT,CAA4BM,KAA5B,EAAmC;AACjC,SAAOD,WAAW,CAACC,KAAK,CAACsB,OAAN,CAAc1B,KAAd,IAAuB,CAAvB,GAA2BI,KAAK,CAACuB,OAAN,CAAc5B,MAAd,EAAsB,EAAtB,CAA3B,GAAuDK,KAAxD,CAAlB;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unicodeToCodepoint;\n// avoid runtime RegExp creation for not so smart,\n// not JIT based, and old browsers / engines\n// https://github.com/twitter/twemoji/blob/gh-pages/2/twemoji.js#L232\nvar UFE0Fg = /\\uFE0F/g;\n\n// \\u200D is a zero-width joiner character\n// https://github.com/twitter/twemoji/blob/gh-pages/2/twemoji.js#L235\nvar U200D = String.fromCharCode(0x200d);\n\n// convert utf16 into code points\nfunction toCodePoint(input) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"-\";\n\n  var codePoints = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var codePoint = _step.value;\n\n      codePoints.push(codePoint.codePointAt(0).toString(16));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return codePoints.join(separator);\n}\n\nfunction unicodeToCodepoint(input) {\n  return toCodePoint(input.indexOf(U200D) < 0 ? input.replace(UFE0Fg, \"\") : input);\n}"]},"metadata":{},"sourceType":"script"}