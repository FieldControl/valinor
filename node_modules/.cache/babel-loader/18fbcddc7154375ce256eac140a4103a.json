{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.toArray = toArray;\nexports.default = Emoji;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames2 = require(\"classnames\");\n\nvar _classnames3 = _interopRequireDefault(_classnames2);\n\nvar _stringReplaceToArray = require(\"string-replace-to-array\");\n\nvar _stringReplaceToArray2 = _interopRequireDefault(_stringReplaceToArray);\n\nvar _emojiRegex = require(\"emoji-regex\");\n\nvar _emojiRegex2 = _interopRequireDefault(_emojiRegex);\n\nvar _asciiRegex = require(\"./asciiRegex\");\n\nvar _asciiRegex2 = _interopRequireDefault(_asciiRegex);\n\nvar _aliasRegex = require(\"./aliasRegex\");\n\nvar _aliasRegex2 = _interopRequireDefault(_aliasRegex);\n\nvar _normalizeProtocol = require(\"./normalizeProtocol\");\n\nvar _normalizeProtocol2 = _interopRequireDefault(_normalizeProtocol);\n\nvar _unicodeToCodepoint = require(\"./unicodeToCodepoint\");\n\nvar _unicodeToCodepoint2 = _interopRequireDefault(_unicodeToCodepoint);\n\nvar _aliases = require(\"../data/aliases\");\n\nvar _aliases2 = _interopRequireDefault(_aliases);\n\nvar _asciiAliases = require(\"../data/asciiAliases\");\n\nvar _asciiAliases2 = _interopRequireDefault(_asciiAliases);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar asciiAliasesRegex = (0, _asciiRegex2.default)();\nvar aliasesRegex = (0, _aliasRegex2.default)();\nvar unicodeEmojiRegex = (0, _emojiRegex2.default)(); // using em's we can ensure size matches surrounding font\n\nvar style = {\n  width: \"1em\",\n  height: \"1em\",\n  margin: \"0 .05em 0 .1em\",\n  verticalAlign: \"-0.1em\"\n};\n\nfunction toArray(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var protocol = (0, _normalizeProtocol2.default)(options.protocol);\n\n  function replaceUnicodeEmoji(match, i) {\n    if (!options.baseUrl) {\n      return _react2.default.createElement(\"span\", {\n        key: i,\n        style: style,\n        className: options.className\n      }, match);\n    }\n\n    var codepoint = (0, _unicodeToCodepoint2.default)(match, removeHelperCharacters); // if Emojione we don't want to add helper characters in the URL\n\n    var removeHelperCharacters = options.emojione;\n\n    if (removeHelperCharacters) {\n      codepoint = codepoint.replace(/-200d/g, \"\").replace(/-fe0f/g, \"\");\n    }\n\n    var separator = options.size ? \"/\" : \"\";\n    var src = \"\" + protocol + options.baseUrl + options.size + separator + codepoint + \".\" + options.ext;\n    return _react2.default.createElement(\"img\", _extends({\n      key: i,\n      alt: match,\n      src: src,\n      style: style,\n      className: options.className\n    }, options.props));\n  }\n\n  function replaceAsciiAliases() {\n    var asciiAliasKeys = Object.keys(_asciiAliases2.default);\n    var fullMatch = arguments.length <= 0 ? undefined : arguments[0];\n    var edgeCase = arguments.length <= 1 ? undefined : arguments[1];\n    var asciiAlias = arguments.length <= 2 ? undefined : arguments[2];\n    var maybeBiggerAliasCharacters = arguments.length <= 3 ? undefined : arguments[3];\n\n    for (var i in asciiAliasKeys) {\n      var alias = asciiAliasKeys[i];\n      var data = _asciiAliases2.default[alias];\n\n      if (data.includes(asciiAlias)) {\n        var isEdgeCase = edgeCase !== undefined;\n\n        if (isEdgeCase) {\n          return fullMatch; // do nothing\n        }\n\n        var isMaybePartOfBiggerAlias = maybeBiggerAliasCharacters !== undefined;\n\n        if (!isMaybePartOfBiggerAlias) {\n          return _aliases2.default[alias]; // replace with unicode\n        } else if (fullMatch[0] === \":\") {\n          var fullMatchContent = fullMatch.slice(1, -1); // remove \":\" at the beginning and end\n\n          var isPartOfBiggerAlias = _aliases2.default[fullMatchContent] !== undefined; // \":\" + fullMatchContent + \":\" alias doesn't exist\n\n          if (isPartOfBiggerAlias) {\n            return fullMatch; // do nothing\n          }\n        }\n\n        return \"\" + _aliases2.default[alias] + maybeBiggerAliasCharacters; // also return matched characters afterwards to handle them in next iteration\n      }\n    }\n  }\n\n  function replaceAliases() {\n    var fullMatch = arguments.length <= 0 ? undefined : arguments[0];\n    var edgeCase = arguments.length <= 1 ? undefined : arguments[1];\n    var alias = arguments.length <= 2 ? undefined : arguments[2];\n\n    if (edgeCase) {\n      return fullMatch;\n    }\n\n    var aliasEmoji = _aliases2.default[alias];\n    return aliasEmoji || fullMatch;\n  } // We need to execute several times `string.replace` for cases for such as \":):)\"\n  // As we are forced to match \":):\" to check if it's a normal alias, the second colon is consumed and cannot match again\n\n\n  function replaceAllAsciiAliases(textWithAsciiAliases) {\n    var previousTextWithoutAsciiAliases = null;\n    var textWithoutAsciiAliases = textWithAsciiAliases;\n\n    while (previousTextWithoutAsciiAliases !== textWithoutAsciiAliases) {\n      previousTextWithoutAsciiAliases = textWithoutAsciiAliases;\n      textWithoutAsciiAliases = textWithoutAsciiAliases.replace(asciiAliasesRegex, replaceAsciiAliases);\n    }\n\n    return textWithoutAsciiAliases;\n  }\n\n  var replacedText = text;\n  replacedText = replacedText.replace(aliasesRegex, replaceAliases);\n  replacedText = replaceAllAsciiAliases(replacedText);\n  replacedText = replacedText.replace(aliasesRegex, replaceAliases);\n  return (0, _stringReplaceToArray2.default)(replacedText, unicodeEmojiRegex, replaceUnicodeEmoji);\n}\n\nfunction Emoji(_ref) {\n  var text = _ref.text,\n      onlyEmojiClassName = _ref.onlyEmojiClassName,\n      _ref$options = _ref.options,\n      options = _ref$options === undefined ? {} : _ref$options,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"text\", \"onlyEmojiClassName\", \"options\", \"className\"]);\n\n  function isOnlyEmoji(output) {\n    if (output.length > 3) return false;\n\n    for (var i = 0; i < output.length; i++) {\n      if (typeof output[i] === \"string\") return false;\n    }\n\n    return true;\n  }\n\n  var output = toArray(text, options);\n  var classes = (0, _classnames3.default)(className, _defineProperty({}, onlyEmojiClassName, isOnlyEmoji(output)));\n  return _react2.default.createElement(\"span\", _extends({}, rest, {\n    className: classes\n  }), output);\n}\n\nEmoji.propTypes = {\n  text: _propTypes2.default.string,\n  props: _propTypes2.default.object,\n  onlyEmojiClassName: _propTypes2.default.string,\n  options: _propTypes2.default.shape({\n    baseUrl: _propTypes2.default.string,\n    size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n    ext: _propTypes2.default.string,\n    className: _propTypes2.default.string\n  })\n};","map":{"version":3,"sources":["/Users/mie/Desktop/Web development /valinor/node_modules/react-emoji-render/lib/renderer.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","toArray","default","Emoji","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","_classnames2","_classnames3","_stringReplaceToArray","_stringReplaceToArray2","_emojiRegex","_emojiRegex2","_asciiRegex","_asciiRegex2","_aliasRegex","_aliasRegex2","_normalizeProtocol","_normalizeProtocol2","_unicodeToCodepoint","_unicodeToCodepoint2","_aliases","_aliases2","_asciiAliases","_asciiAliases2","obj","__esModule","_defineProperty","enumerable","configurable","writable","_objectWithoutProperties","keys","indexOf","asciiAliasesRegex","aliasesRegex","unicodeEmojiRegex","style","width","height","margin","verticalAlign","text","options","undefined","protocol","replaceUnicodeEmoji","match","baseUrl","createElement","className","codepoint","removeHelperCharacters","emojione","replace","separator","size","src","ext","alt","props","replaceAsciiAliases","asciiAliasKeys","fullMatch","edgeCase","asciiAlias","maybeBiggerAliasCharacters","alias","data","includes","isEdgeCase","isMaybePartOfBiggerAlias","fullMatchContent","slice","isPartOfBiggerAlias","replaceAliases","aliasEmoji","replaceAllAsciiAliases","textWithAsciiAliases","previousTextWithoutAsciiAliases","textWithoutAsciiAliases","replacedText","_ref","onlyEmojiClassName","_ref$options","rest","isOnlyEmoji","output","classes","propTypes","string","object","shape","oneOfType","number"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEAJ,OAAO,CAACa,OAAR,GAAkBA,OAAlB;AACAb,OAAO,CAACc,OAAR,GAAkBC,KAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,MAAD,CAApC;;AAEA,IAAII,UAAU,GAAGH,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAII,WAAW,GAAGF,sBAAsB,CAACC,UAAD,CAAxC;;AAEA,IAAIE,YAAY,GAAGL,OAAO,CAAC,YAAD,CAA1B;;AAEA,IAAIM,YAAY,GAAGJ,sBAAsB,CAACG,YAAD,CAAzC;;AAEA,IAAIE,qBAAqB,GAAGP,OAAO,CAAC,yBAAD,CAAnC;;AAEA,IAAIQ,sBAAsB,GAAGN,sBAAsB,CAACK,qBAAD,CAAnD;;AAEA,IAAIE,WAAW,GAAGT,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAIU,YAAY,GAAGR,sBAAsB,CAACO,WAAD,CAAzC;;AAEA,IAAIE,WAAW,GAAGX,OAAO,CAAC,cAAD,CAAzB;;AAEA,IAAIY,YAAY,GAAGV,sBAAsB,CAACS,WAAD,CAAzC;;AAEA,IAAIE,WAAW,GAAGb,OAAO,CAAC,cAAD,CAAzB;;AAEA,IAAIc,YAAY,GAAGZ,sBAAsB,CAACW,WAAD,CAAzC;;AAEA,IAAIE,kBAAkB,GAAGf,OAAO,CAAC,qBAAD,CAAhC;;AAEA,IAAIgB,mBAAmB,GAAGd,sBAAsB,CAACa,kBAAD,CAAhD;;AAEA,IAAIE,mBAAmB,GAAGjB,OAAO,CAAC,sBAAD,CAAjC;;AAEA,IAAIkB,oBAAoB,GAAGhB,sBAAsB,CAACe,mBAAD,CAAjD;;AAEA,IAAIE,QAAQ,GAAGnB,OAAO,CAAC,iBAAD,CAAtB;;AAEA,IAAIoB,SAAS,GAAGlB,sBAAsB,CAACiB,QAAD,CAAtC;;AAEA,IAAIE,aAAa,GAAGrB,OAAO,CAAC,sBAAD,CAA3B;;AAEA,IAAIsB,cAAc,GAAGpB,sBAAsB,CAACmB,aAAD,CAA3C;;AAEA,SAASnB,sBAAT,CAAgCqB,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE1B,IAAAA,OAAO,EAAE0B;AAAX,GAArC;AAAwD;;AAE/F,SAASE,eAAT,CAAyBF,GAAzB,EAA8B/B,GAA9B,EAAmCR,KAAnC,EAA0C;AAAE,MAAIQ,GAAG,IAAI+B,GAAX,EAAgB;AAAE1C,IAAAA,MAAM,CAACC,cAAP,CAAsByC,GAAtB,EAA2B/B,GAA3B,EAAgC;AAAER,MAAAA,KAAK,EAAEA,KAAT;AAAgB0C,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEL,IAAAA,GAAG,CAAC/B,GAAD,CAAH,GAAWR,KAAX;AAAmB;;AAAC,SAAOuC,GAAP;AAAa;;AAEjN,SAASM,wBAAT,CAAkCN,GAAlC,EAAuCO,IAAvC,EAA6C;AAAE,MAAI3C,MAAM,GAAG,EAAb;;AAAiB,OAAK,IAAIC,CAAT,IAAcmC,GAAd,EAAmB;AAAE,QAAIO,IAAI,CAACC,OAAL,CAAa3C,CAAb,KAAmB,CAAvB,EAA0B;AAAU,QAAI,CAACP,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC4B,GAArC,EAA0CnC,CAA1C,CAAL,EAAmD;AAAUD,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAYmC,GAAG,CAACnC,CAAD,CAAf;AAAqB;;AAAC,SAAOD,MAAP;AAAgB;;AAE5N,IAAI6C,iBAAiB,GAAG,CAAC,GAAGpB,YAAY,CAACf,OAAjB,GAAxB;AACA,IAAIoC,YAAY,GAAG,CAAC,GAAGnB,YAAY,CAACjB,OAAjB,GAAnB;AACA,IAAIqC,iBAAiB,GAAG,CAAC,GAAGxB,YAAY,CAACb,OAAjB,GAAxB,C,CAEA;;AACA,IAAIsC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,KADG;AAEVC,EAAAA,MAAM,EAAE,KAFE;AAGVC,EAAAA,MAAM,EAAE,gBAHE;AAIVC,EAAAA,aAAa,EAAE;AAJL,CAAZ;;AAOA,SAAS3C,OAAT,CAAiB4C,IAAjB,EAAuB;AACrB,MAAIC,OAAO,GAAGpD,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBqD,SAAzC,GAAqDrD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AAEA,MAAIsD,QAAQ,GAAG,CAAC,GAAG3B,mBAAmB,CAACnB,OAAxB,EAAiC4C,OAAO,CAACE,QAAzC,CAAf;;AAEA,WAASC,mBAAT,CAA6BC,KAA7B,EAAoCzD,CAApC,EAAuC;AACrC,QAAI,CAACqD,OAAO,CAACK,OAAb,EAAsB;AACpB,aAAO7C,OAAO,CAACJ,OAAR,CAAgBkD,aAAhB,CACL,MADK,EAEL;AAAEvD,QAAAA,GAAG,EAAEJ,CAAP;AAAU+C,QAAAA,KAAK,EAAEA,KAAjB;AAAwBa,QAAAA,SAAS,EAAEP,OAAO,CAACO;AAA3C,OAFK,EAGLH,KAHK,CAAP;AAKD;;AAED,QAAII,SAAS,GAAG,CAAC,GAAG/B,oBAAoB,CAACrB,OAAzB,EAAkCgD,KAAlC,EAAyCK,sBAAzC,CAAhB,CATqC,CAWrC;;AACA,QAAIA,sBAAsB,GAAGT,OAAO,CAACU,QAArC;;AACA,QAAID,sBAAJ,EAA4B;AAC1BD,MAAAA,SAAS,GAAGA,SAAS,CAACG,OAAV,CAAkB,QAAlB,EAA4B,EAA5B,EAAgCA,OAAhC,CAAwC,QAAxC,EAAkD,EAAlD,CAAZ;AACD;;AAED,QAAIC,SAAS,GAAGZ,OAAO,CAACa,IAAR,GAAe,GAAf,GAAqB,EAArC;AACA,QAAIC,GAAG,GAAG,KAAKZ,QAAL,GAAgBF,OAAO,CAACK,OAAxB,GAAkCL,OAAO,CAACa,IAA1C,GAAiDD,SAAjD,GAA6DJ,SAA7D,GAAyE,GAAzE,GAA+ER,OAAO,CAACe,GAAjG;AAEA,WAAOvD,OAAO,CAACJ,OAAR,CAAgBkD,aAAhB,CAA8B,KAA9B,EAAqC9D,QAAQ,CAAC;AACnDO,MAAAA,GAAG,EAAEJ,CAD8C;AAEnDqE,MAAAA,GAAG,EAAEZ,KAF8C;AAGnDU,MAAAA,GAAG,EAAEA,GAH8C;AAInDpB,MAAAA,KAAK,EAAEA,KAJ4C;AAKnDa,MAAAA,SAAS,EAAEP,OAAO,CAACO;AALgC,KAAD,EAMjDP,OAAO,CAACiB,KANyC,CAA7C,CAAP;AAOD;;AAED,WAASC,mBAAT,GAA+B;AAC7B,QAAIC,cAAc,GAAG/E,MAAM,CAACiD,IAAP,CAAYR,cAAc,CAACzB,OAA3B,CAArB;AAEA,QAAIgE,SAAS,GAAGxE,SAAS,CAACC,MAAV,IAAoB,CAApB,GAAwBoD,SAAxB,GAAoCrD,SAAS,CAAC,CAAD,CAA7D;AACA,QAAIyE,QAAQ,GAAGzE,SAAS,CAACC,MAAV,IAAoB,CAApB,GAAwBoD,SAAxB,GAAoCrD,SAAS,CAAC,CAAD,CAA5D;AACA,QAAI0E,UAAU,GAAG1E,SAAS,CAACC,MAAV,IAAoB,CAApB,GAAwBoD,SAAxB,GAAoCrD,SAAS,CAAC,CAAD,CAA9D;AACA,QAAI2E,0BAA0B,GAAG3E,SAAS,CAACC,MAAV,IAAoB,CAApB,GAAwBoD,SAAxB,GAAoCrD,SAAS,CAAC,CAAD,CAA9E;;AAEA,SAAK,IAAID,CAAT,IAAcwE,cAAd,EAA8B;AAC5B,UAAIK,KAAK,GAAGL,cAAc,CAACxE,CAAD,CAA1B;AACA,UAAI8E,IAAI,GAAG5C,cAAc,CAACzB,OAAf,CAAuBoE,KAAvB,CAAX;;AAEA,UAAIC,IAAI,CAACC,QAAL,CAAcJ,UAAd,CAAJ,EAA+B;AAC7B,YAAIK,UAAU,GAAGN,QAAQ,KAAKpB,SAA9B;;AAEA,YAAI0B,UAAJ,EAAgB;AACd,iBAAOP,SAAP,CADc,CACI;AACnB;;AAED,YAAIQ,wBAAwB,GAAGL,0BAA0B,KAAKtB,SAA9D;;AAEA,YAAI,CAAC2B,wBAAL,EAA+B;AAC7B,iBAAOjD,SAAS,CAACvB,OAAV,CAAkBoE,KAAlB,CAAP,CAD6B,CACI;AAClC,SAFD,MAEO,IAAIJ,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B;AAC/B,cAAIS,gBAAgB,GAAGT,SAAS,CAACU,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAvB,CAD+B,CACgB;;AAC/C,cAAIC,mBAAmB,GAAGpD,SAAS,CAACvB,OAAV,CAAkByE,gBAAlB,MAAwC5B,SAAlE,CAF+B,CAE8C;;AAE7E,cAAI8B,mBAAJ,EAAyB;AACvB,mBAAOX,SAAP,CADuB,CACL;AACnB;AACF;;AAED,eAAO,KAAKzC,SAAS,CAACvB,OAAV,CAAkBoE,KAAlB,CAAL,GAAgCD,0BAAvC,CApB6B,CAoBsC;AACpE;AACF;AACF;;AAED,WAASS,cAAT,GAA0B;AACxB,QAAIZ,SAAS,GAAGxE,SAAS,CAACC,MAAV,IAAoB,CAApB,GAAwBoD,SAAxB,GAAoCrD,SAAS,CAAC,CAAD,CAA7D;AACA,QAAIyE,QAAQ,GAAGzE,SAAS,CAACC,MAAV,IAAoB,CAApB,GAAwBoD,SAAxB,GAAoCrD,SAAS,CAAC,CAAD,CAA5D;AACA,QAAI4E,KAAK,GAAG5E,SAAS,CAACC,MAAV,IAAoB,CAApB,GAAwBoD,SAAxB,GAAoCrD,SAAS,CAAC,CAAD,CAAzD;;AAEA,QAAIyE,QAAJ,EAAc;AACZ,aAAOD,SAAP;AACD;;AAED,QAAIa,UAAU,GAAGtD,SAAS,CAACvB,OAAV,CAAkBoE,KAAlB,CAAjB;AAEA,WAAOS,UAAU,IAAIb,SAArB;AACD,GAnFoB,CAqFrB;AACA;;;AACA,WAASc,sBAAT,CAAgCC,oBAAhC,EAAsD;AACpD,QAAIC,+BAA+B,GAAG,IAAtC;AACA,QAAIC,uBAAuB,GAAGF,oBAA9B;;AAEA,WAAOC,+BAA+B,KAAKC,uBAA3C,EAAoE;AAClED,MAAAA,+BAA+B,GAAGC,uBAAlC;AACAA,MAAAA,uBAAuB,GAAGA,uBAAuB,CAAC1B,OAAxB,CAAgCpB,iBAAhC,EAAmD2B,mBAAnD,CAA1B;AACD;;AAED,WAAOmB,uBAAP;AACD;;AAED,MAAIC,YAAY,GAAGvC,IAAnB;AACAuC,EAAAA,YAAY,GAAGA,YAAY,CAAC3B,OAAb,CAAqBnB,YAArB,EAAmCwC,cAAnC,CAAf;AACAM,EAAAA,YAAY,GAAGJ,sBAAsB,CAACI,YAAD,CAArC;AACAA,EAAAA,YAAY,GAAGA,YAAY,CAAC3B,OAAb,CAAqBnB,YAArB,EAAmCwC,cAAnC,CAAf;AACA,SAAO,CAAC,GAAGjE,sBAAsB,CAACX,OAA3B,EAAoCkF,YAApC,EAAkD7C,iBAAlD,EAAqEU,mBAArE,CAAP;AACD;;AAED,SAAS9C,KAAT,CAAekF,IAAf,EAAqB;AACnB,MAAIxC,IAAI,GAAGwC,IAAI,CAACxC,IAAhB;AAAA,MACIyC,kBAAkB,GAAGD,IAAI,CAACC,kBAD9B;AAAA,MAEIC,YAAY,GAAGF,IAAI,CAACvC,OAFxB;AAAA,MAGIA,OAAO,GAAGyC,YAAY,KAAKxC,SAAjB,GAA6B,EAA7B,GAAkCwC,YAHhD;AAAA,MAIIlC,SAAS,GAAGgC,IAAI,CAAChC,SAJrB;AAAA,MAKImC,IAAI,GAAGtD,wBAAwB,CAACmD,IAAD,EAAO,CAAC,MAAD,EAAS,oBAAT,EAA+B,SAA/B,EAA0C,WAA1C,CAAP,CALnC;;AAOA,WAASI,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,QAAIA,MAAM,CAAC/F,MAAP,GAAgB,CAApB,EAAuB,OAAO,KAAP;;AAEvB,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiG,MAAM,CAAC/F,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AACtC,UAAI,OAAOiG,MAAM,CAACjG,CAAD,CAAb,KAAqB,QAAzB,EAAmC,OAAO,KAAP;AACpC;;AAED,WAAO,IAAP;AACD;;AAED,MAAIiG,MAAM,GAAGzF,OAAO,CAAC4C,IAAD,EAAOC,OAAP,CAApB;AACA,MAAI6C,OAAO,GAAG,CAAC,GAAGhF,YAAY,CAACT,OAAjB,EAA0BmD,SAA1B,EAAqCvB,eAAe,CAAC,EAAD,EAAKwD,kBAAL,EAAyBG,WAAW,CAACC,MAAD,CAApC,CAApD,CAAd;AAEA,SAAOpF,OAAO,CAACJ,OAAR,CAAgBkD,aAAhB,CACL,MADK,EAEL9D,QAAQ,CAAC,EAAD,EAAKkG,IAAL,EAAW;AAAEnC,IAAAA,SAAS,EAAEsC;AAAb,GAAX,CAFH,EAGLD,MAHK,CAAP;AAKD;;AAEDvF,KAAK,CAACyF,SAAN,GAAkB;AAChB/C,EAAAA,IAAI,EAAEpC,WAAW,CAACP,OAAZ,CAAoB2F,MADV;AAEhB9B,EAAAA,KAAK,EAAEtD,WAAW,CAACP,OAAZ,CAAoB4F,MAFX;AAGhBR,EAAAA,kBAAkB,EAAE7E,WAAW,CAACP,OAAZ,CAAoB2F,MAHxB;AAIhB/C,EAAAA,OAAO,EAAErC,WAAW,CAACP,OAAZ,CAAoB6F,KAApB,CAA0B;AACjC5C,IAAAA,OAAO,EAAE1C,WAAW,CAACP,OAAZ,CAAoB2F,MADI;AAEjClC,IAAAA,IAAI,EAAElD,WAAW,CAACP,OAAZ,CAAoB8F,SAApB,CAA8B,CAACvF,WAAW,CAACP,OAAZ,CAAoB+F,MAArB,EAA6BxF,WAAW,CAACP,OAAZ,CAAoB2F,MAAjD,CAA9B,CAF2B;AAGjChC,IAAAA,GAAG,EAAEpD,WAAW,CAACP,OAAZ,CAAoB2F,MAHQ;AAIjCxC,IAAAA,SAAS,EAAE5C,WAAW,CAACP,OAAZ,CAAoB2F;AAJE,GAA1B;AAJO,CAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.toArray = toArray;\nexports.default = Emoji;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames2 = require(\"classnames\");\n\nvar _classnames3 = _interopRequireDefault(_classnames2);\n\nvar _stringReplaceToArray = require(\"string-replace-to-array\");\n\nvar _stringReplaceToArray2 = _interopRequireDefault(_stringReplaceToArray);\n\nvar _emojiRegex = require(\"emoji-regex\");\n\nvar _emojiRegex2 = _interopRequireDefault(_emojiRegex);\n\nvar _asciiRegex = require(\"./asciiRegex\");\n\nvar _asciiRegex2 = _interopRequireDefault(_asciiRegex);\n\nvar _aliasRegex = require(\"./aliasRegex\");\n\nvar _aliasRegex2 = _interopRequireDefault(_aliasRegex);\n\nvar _normalizeProtocol = require(\"./normalizeProtocol\");\n\nvar _normalizeProtocol2 = _interopRequireDefault(_normalizeProtocol);\n\nvar _unicodeToCodepoint = require(\"./unicodeToCodepoint\");\n\nvar _unicodeToCodepoint2 = _interopRequireDefault(_unicodeToCodepoint);\n\nvar _aliases = require(\"../data/aliases\");\n\nvar _aliases2 = _interopRequireDefault(_aliases);\n\nvar _asciiAliases = require(\"../data/asciiAliases\");\n\nvar _asciiAliases2 = _interopRequireDefault(_asciiAliases);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar asciiAliasesRegex = (0, _asciiRegex2.default)();\nvar aliasesRegex = (0, _aliasRegex2.default)();\nvar unicodeEmojiRegex = (0, _emojiRegex2.default)();\n\n// using em's we can ensure size matches surrounding font\nvar style = {\n  width: \"1em\",\n  height: \"1em\",\n  margin: \"0 .05em 0 .1em\",\n  verticalAlign: \"-0.1em\"\n};\n\nfunction toArray(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var protocol = (0, _normalizeProtocol2.default)(options.protocol);\n\n  function replaceUnicodeEmoji(match, i) {\n    if (!options.baseUrl) {\n      return _react2.default.createElement(\n        \"span\",\n        { key: i, style: style, className: options.className },\n        match\n      );\n    }\n\n    var codepoint = (0, _unicodeToCodepoint2.default)(match, removeHelperCharacters);\n\n    // if Emojione we don't want to add helper characters in the URL\n    var removeHelperCharacters = options.emojione;\n    if (removeHelperCharacters) {\n      codepoint = codepoint.replace(/-200d/g, \"\").replace(/-fe0f/g, \"\");\n    }\n\n    var separator = options.size ? \"/\" : \"\";\n    var src = \"\" + protocol + options.baseUrl + options.size + separator + codepoint + \".\" + options.ext;\n\n    return _react2.default.createElement(\"img\", _extends({\n      key: i,\n      alt: match,\n      src: src,\n      style: style,\n      className: options.className\n    }, options.props));\n  }\n\n  function replaceAsciiAliases() {\n    var asciiAliasKeys = Object.keys(_asciiAliases2.default);\n\n    var fullMatch = arguments.length <= 0 ? undefined : arguments[0];\n    var edgeCase = arguments.length <= 1 ? undefined : arguments[1];\n    var asciiAlias = arguments.length <= 2 ? undefined : arguments[2];\n    var maybeBiggerAliasCharacters = arguments.length <= 3 ? undefined : arguments[3];\n\n    for (var i in asciiAliasKeys) {\n      var alias = asciiAliasKeys[i];\n      var data = _asciiAliases2.default[alias];\n\n      if (data.includes(asciiAlias)) {\n        var isEdgeCase = edgeCase !== undefined;\n\n        if (isEdgeCase) {\n          return fullMatch; // do nothing\n        }\n\n        var isMaybePartOfBiggerAlias = maybeBiggerAliasCharacters !== undefined;\n\n        if (!isMaybePartOfBiggerAlias) {\n          return _aliases2.default[alias]; // replace with unicode\n        } else if (fullMatch[0] === \":\") {\n          var fullMatchContent = fullMatch.slice(1, -1); // remove \":\" at the beginning and end\n          var isPartOfBiggerAlias = _aliases2.default[fullMatchContent] !== undefined; // \":\" + fullMatchContent + \":\" alias doesn't exist\n\n          if (isPartOfBiggerAlias) {\n            return fullMatch; // do nothing\n          }\n        }\n\n        return \"\" + _aliases2.default[alias] + maybeBiggerAliasCharacters; // also return matched characters afterwards to handle them in next iteration\n      }\n    }\n  }\n\n  function replaceAliases() {\n    var fullMatch = arguments.length <= 0 ? undefined : arguments[0];\n    var edgeCase = arguments.length <= 1 ? undefined : arguments[1];\n    var alias = arguments.length <= 2 ? undefined : arguments[2];\n\n    if (edgeCase) {\n      return fullMatch;\n    }\n\n    var aliasEmoji = _aliases2.default[alias];\n\n    return aliasEmoji || fullMatch;\n  }\n\n  // We need to execute several times `string.replace` for cases for such as \":):)\"\n  // As we are forced to match \":):\" to check if it's a normal alias, the second colon is consumed and cannot match again\n  function replaceAllAsciiAliases(textWithAsciiAliases) {\n    var previousTextWithoutAsciiAliases = null;\n    var textWithoutAsciiAliases = textWithAsciiAliases;\n\n    while (previousTextWithoutAsciiAliases !== textWithoutAsciiAliases) {\n      previousTextWithoutAsciiAliases = textWithoutAsciiAliases;\n      textWithoutAsciiAliases = textWithoutAsciiAliases.replace(asciiAliasesRegex, replaceAsciiAliases);\n    }\n\n    return textWithoutAsciiAliases;\n  }\n\n  var replacedText = text;\n  replacedText = replacedText.replace(aliasesRegex, replaceAliases);\n  replacedText = replaceAllAsciiAliases(replacedText);\n  replacedText = replacedText.replace(aliasesRegex, replaceAliases);\n  return (0, _stringReplaceToArray2.default)(replacedText, unicodeEmojiRegex, replaceUnicodeEmoji);\n}\n\nfunction Emoji(_ref) {\n  var text = _ref.text,\n      onlyEmojiClassName = _ref.onlyEmojiClassName,\n      _ref$options = _ref.options,\n      options = _ref$options === undefined ? {} : _ref$options,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"text\", \"onlyEmojiClassName\", \"options\", \"className\"]);\n\n  function isOnlyEmoji(output) {\n    if (output.length > 3) return false;\n\n    for (var i = 0; i < output.length; i++) {\n      if (typeof output[i] === \"string\") return false;\n    }\n\n    return true;\n  }\n\n  var output = toArray(text, options);\n  var classes = (0, _classnames3.default)(className, _defineProperty({}, onlyEmojiClassName, isOnlyEmoji(output)));\n\n  return _react2.default.createElement(\n    \"span\",\n    _extends({}, rest, { className: classes }),\n    output\n  );\n}\n\nEmoji.propTypes = {\n  text: _propTypes2.default.string,\n  props: _propTypes2.default.object,\n  onlyEmojiClassName: _propTypes2.default.string,\n  options: _propTypes2.default.shape({\n    baseUrl: _propTypes2.default.string,\n    size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n    ext: _propTypes2.default.string,\n    className: _propTypes2.default.string\n  })\n};"]},"metadata":{},"sourceType":"script"}