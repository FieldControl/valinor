{"ast":null,"code":"var _jsxFileName = \"/Users/mie/Desktop/Web development /valinor/src/components/SearchController.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ResultView from \"./ResultView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchController() {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [page, setPage] = useState(1);\n  const [apiData, setApiData] = useState([]);\n  const apiUrl = `https://api.github.com/search/repositories?q=${search}&per_page=10&page=${page}`;\n\n  function getResults(event) {\n    event.preventDefault();\n    console.log(\"search = \" + search);\n    console.log(\"search is bool = \" + !search);\n\n    if (!search) {\n      console.log();\n      return;\n    } else {\n      fetch(apiUrl).then(res => res.json()).then(data => setApiData(data.items)); // console.log(\"getResults = \" + apiUrl)\n    }\n  }\n\n  function selectPage(event, value) {\n    event.preventDefault();\n    setPage(value);\n    console.log(\"select page using \" + value);\n    const apiUrl2 = `https://api.github.com/search/repositories?q=${search}&per_page=10&page=${value}`;\n\n    if (!search) {\n      return;\n    } else {\n      fetch(apiUrl2).then(res => res.json()).then(data => setApiData(data.items));\n      console.log(\"selectpage = \" + apiUrl2);\n    }\n  }\n\n  function newSearch(event) {\n    setSearch(event.target.value);\n    setPage(1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResultView, {\n    search: search,\n    newSearch: newSearch,\n    apiData: apiData,\n    getResults: getResults,\n    selectPage: selectPage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SearchController, \"4AxvMvVGLir1sp3bcOHTcjV58uY=\");\n\n_c = SearchController;\nexport default SearchController;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchController\");","map":{"version":3,"sources":["/Users/mie/Desktop/Web development /valinor/src/components/SearchController.jsx"],"names":["React","useState","ResultView","SearchController","search","setSearch","page","setPage","apiData","setApiData","apiUrl","getResults","event","preventDefault","console","log","fetch","then","res","json","data","items","selectPage","value","apiUrl2","newSearch","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAGA,OAAOC,UAAP,MAAuB,cAAvB;;;AAGA,SAASC,gBAAT,GAA4B;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMS,MAAM,GAAG,gDAA+CN,MAAO,qBAAoBE,IAAK,EAA9F;;AAGA,WAASK,UAAT,CAAoBC,KAApB,EAA2B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAYX,MAAxB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAqB,CAACX,MAAlC;;AAEA,QAAI,CAACA,MAAL,EAAa;AACXU,MAAAA,OAAO,CAACC,GAAR;AACA;AACD,KAHD,MAGO;AACLC,MAAAA,KAAK,CAACN,MAAD,CAAL,CACCO,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAEEF,IAFF,CAEQG,IAAD,IAAUX,UAAU,CAACW,IAAI,CAACC,KAAN,CAF3B,EADK,CAKJ;AACF;AACD;;AAED,WAASC,UAAT,CAAoBV,KAApB,EAA2BW,KAA3B,EAAkC;AACjCX,IAAAA,KAAK,CAACC,cAAN;AACCN,IAAAA,OAAO,CAACgB,KAAD,CAAP;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBQ,KAAnC;AAEA,UAAMC,OAAO,GAAG,gDAA+CpB,MAAO,qBAAoBmB,KAAM,EAAhG;;AAGA,QAAI,CAACnB,MAAL,EAAa;AACT;AACH,KAFD,MAEO;AACPY,MAAAA,KAAK,CAACQ,OAAD,CAAL,CACOP,IADP,CACaC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADrB,EAEQF,IAFR,CAEcG,IAAD,IAAUX,UAAU,CAACW,IAAI,CAACC,KAAN,CAFjC;AAGGP,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBS,OAA9B;AACJ;AACD;;AAEA,WAASC,SAAT,CAAmBb,KAAnB,EAA0B;AACxBP,IAAAA,SAAS,CAACO,KAAK,CAACc,MAAN,CAAaH,KAAd,CAAT;AACAhB,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD;;AAGF,sBAEE,QAAC,UAAD;AACE,IAAA,MAAM,EAAEH,MADV;AAEE,IAAA,SAAS,EAAEqB,SAFb;AAGE,IAAA,OAAO,EAAEjB,OAHX;AAIE,IAAA,UAAU,EAAEG,UAJd;AAKE,IAAA,UAAU,EAAEW;AALd;AAAA;AAAA;AAAA;AAAA,UAFF;AAWC;;GA3DQnB,gB;;KAAAA,gB;AA6DT,eAAeA,gBAAf","sourcesContent":["import React, {useState} from \"react\";\n\n\nimport ResultView from \"./ResultView\";\n\n\nfunction SearchController() {\nconst [search, setSearch] = useState('');\nconst [page, setPage] = useState(1);\nconst [apiData, setApiData] = useState([]);\nconst apiUrl =`https://api.github.com/search/repositories?q=${search}&per_page=10&page=${page}`\n\n\nfunction getResults(event) {\n  event.preventDefault();\n  console.log(\"search = \"+search)\n  console.log(\"search is bool = \"+(!search))\n\n  if (!search) {\n    console.log()\n    return \n  } else {\n    fetch(apiUrl)\n    .then((res) => res.json())\n     .then((data) => setApiData(data.items))\n     \n     // console.log(\"getResults = \" + apiUrl)\n  }   \n }\n\n function selectPage(event, value) {\n  event.preventDefault();\n   setPage(value)\n   console.log(\"select page using \" + value)\n\n   const apiUrl2 =`https://api.github.com/search/repositories?q=${search}&per_page=10&page=${value}`\n\n\n   if (!search) {\n       return\n   } else {\n   fetch(apiUrl2)\n         .then((res) => res.json())\n          .then((data) => setApiData(data.items))\n      console.log(\"selectpage = \" + apiUrl2)\n }\n}\n\n function newSearch(event) {\n   setSearch(event.target.value)\n   setPage(1)\n }\n\n\nreturn (\n\n  <ResultView\n    search={search}\n    newSearch={newSearch}\n    apiData={apiData}\n    getResults={getResults}\n    selectPage={selectPage}\n    \n    />\n);\n}\n\nexport default SearchController;"]},"metadata":{},"sourceType":"module"}