	/// Breakpoints.
	/// @var {list}
	$breakpoints: () !global;



	/// Sets breakpoints.
	/// @param {map} $x Breakpoints.
	@mixin breakpoints($x: ()) {
		$breakpoints: $x !global;
	}

	/// Wraps @content in a @media block targeting a specific orientation.
	/// @param {string} $orientation Orientation.
	@mixin orientation($orientation) {
		@media screen and (orientation: #{$orientation}) {
			@content;
		}
	}

	/// Wraps @content in a @media block using a given query.
	/// @param {string} $query Query.
	@mixin breakpoint($query: null) {

		$breakpoint: null;
		$op: null;
		$media: null;

		
		
				@if (str-slice($query, 0, 2) == '>=') {

					$op: 'gte';
					$breakpoint: str-slice($query, 3);

				}

		
				@elseif (str-slice($query, 0, 2) == '<=') {

					$op: 'lte';
					$breakpoint: str-slice($query, 3);

				}

			
				@elseif (str-slice($query, 0, 1) == '>') {

					$op: 'gt';
					$breakpoint: str-slice($query, 2);

				}

			
				@elseif (str-slice($query, 0, 1) == '<') {

					$op: 'lt';
					$breakpoint: str-slice($query, 2);

				}

		
				@elseif (str-slice($query, 0, 1) == '!') {

					$op: 'not';
					$breakpoint: str-slice($query, 2);

				}


				@else {

					$op: 'eq';
					$breakpoint: $query;

				}

			@if ($breakpoint and map-has-key($breakpoints, $breakpoint)) {

				$a: map-get($breakpoints, $breakpoint);

					@if (type-of($a) == 'list') {

						$x: nth($a, 1);
						$y: nth($a, 2);

							@if ($x == null) {

									@if ($op == 'gte') {
										$media: 'screen';
									}

									@elseif ($op == 'lte') {
										$media: 'screen and (max-width: ' + $y + ')';
									}

								
									@elseif ($op == 'gt') {
										$media: 'screen and (min-width: ' + ($y + 1) + ')';
									}

								
									@elseif ($op == 'lt') {
										$media: 'screen and (max-width: -1px)';
									}

									@elseif ($op == 'not') {
										$media: 'screen and (min-width: ' + ($y + 1) + ')';
									}

						
									@else {
										$media: 'screen and (max-width: ' + $y + ')';
									}

							}

				
							@else if ($y == null) {

									@if ($op == 'gte') {
										$media: 'screen and (min-width: ' + $x + ')';
									}

					
									@elseif ($op == 'lte') {
										$media: 'screen';
									}

				
									@elseif ($op == 'gt') {
										$media: 'screen and (max-width: -1px)';
									}

									@elseif ($op == 'lt') {
										$media: 'screen and (max-width: ' + ($x - 1) + ')';
									}

									@elseif ($op == 'not') {
										$media: 'screen and (max-width: ' + ($x - 1) + ')';
									}

									@else {
										$media: 'screen and (min-width: ' + $x + ')';
									}

							}

					
							@else {

									@if ($op == 'gte') {
										$media: 'screen and (min-width: ' + $x + ')';
									}

								
									@elseif ($op == 'lte') {
										$media: 'screen and (max-width: ' + $y + ')';
									}

									@elseif ($op == 'gt') {
										$media: 'screen and (min-width: ' + ($y + 1) + ')';
									}

								
									@elseif ($op == 'lt') {
										$media: 'screen and (max-width: ' + ($x - 1) + ')';
									}

					
									@elseif ($op == 'not') {
										$media: 'screen and (max-width: ' + ($x - 1) + '), screen and (min-width: ' + ($y + 1) + ')';
									}

							
									@else {
										$media: 'screen and (min-width: ' + $x + ') and (max-width: ' + $y + ')';
									}

							}

					}

				
					@else {

							@if (str-slice($a, 0, 1) == '(') {
								$media: 'screen and ' + $a;
							}

						
							@else {
								$media: $a;
							}

					}

			}

	        @media #{$media} {
				@content;
			}

	}