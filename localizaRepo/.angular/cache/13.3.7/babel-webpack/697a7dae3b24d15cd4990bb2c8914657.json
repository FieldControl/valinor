{"ast":null,"code":"import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function timeInterval(scheduler = asyncScheduler) {\n  return operate((source, subscriber) => {\n    let last = scheduler.now();\n    source.subscribe(createOperatorSubscriber(subscriber, value => {\n      const now = scheduler.now();\n      const interval = now - last;\n      last = now;\n      subscriber.next(new TimeInterval(value, interval));\n    }));\n  });\n}\nexport class TimeInterval {\n  constructor(value, interval) {\n    this.value = value;\n    this.interval = interval;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/alexc/Onedrive/Documentos/Codar/localizaRepo/node_modules/rxjs/dist/esm/internal/operators/timeInterval.js"],"names":["asyncScheduler","operate","createOperatorSubscriber","timeInterval","scheduler","source","subscriber","last","now","subscribe","value","interval","next","TimeInterval","constructor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,oBAA/B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,OAAO,SAASC,YAAT,CAAsBC,SAAS,GAAGJ,cAAlC,EAAkD;AACrD,SAAOC,OAAO,CAAC,CAACI,MAAD,EAASC,UAAT,KAAwB;AACnC,QAAIC,IAAI,GAAGH,SAAS,CAACI,GAAV,EAAX;AACAH,IAAAA,MAAM,CAACI,SAAP,CAAiBP,wBAAwB,CAACI,UAAD,EAAcI,KAAD,IAAW;AAC7D,YAAMF,GAAG,GAAGJ,SAAS,CAACI,GAAV,EAAZ;AACA,YAAMG,QAAQ,GAAGH,GAAG,GAAGD,IAAvB;AACAA,MAAAA,IAAI,GAAGC,GAAP;AACAF,MAAAA,UAAU,CAACM,IAAX,CAAgB,IAAIC,YAAJ,CAAiBH,KAAjB,EAAwBC,QAAxB,CAAhB;AACH,KALwC,CAAzC;AAMH,GARa,CAAd;AASH;AACD,OAAO,MAAME,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACJ,KAAD,EAAQC,QAAR,EAAkB;AACzB,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AAJqB","sourcesContent":["import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function timeInterval(scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let last = scheduler.now();\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const now = scheduler.now();\n            const interval = now - last;\n            last = now;\n            subscriber.next(new TimeInterval(value, interval));\n        }));\n    });\n}\nexport class TimeInterval {\n    constructor(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}