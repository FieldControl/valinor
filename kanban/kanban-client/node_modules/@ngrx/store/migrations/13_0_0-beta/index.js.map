{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../modules/store/migrations/13_0_0-beta/index.ts"],"names":[],"mappings":";;AAAA,+BAAiC;AACjC,yDAA+D;AAC/D,yDAI+B;AAE/B,SAAS,mCAAmC;IAC1C,OAAO,UAAC,IAAU;QAChB,IAAA,oCAAkB,EAAC,IAAI,EAAE,UAAC,UAAU;YAClC,IAAM,YAAY,GAAG,UAAU,CAAC,UAAU;iBACvC,MAAM,CAAC,EAAE,CAAC,mBAAmB,CAAC;iBAC9B,MAAM,CACL,UAAC,iBAAiB;gBAChB,OAAA,iBAAiB,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;oBACnD,eAAe;oBACjB,iBAAiB,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;wBACnD,eAAe;YAHjB,CAGiB,CACpB;iBACA,IAAI,CAAC,UAAC,iBAAiB;;gBACtB,OAAO,MAAA,MAAA,iBAAiB,CAAC,YAAY,0CAAE,aAAa,0CAChD,OAAO,CAAC,UAAU,EACnB,QAAQ,CAAC,uBAAuB,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;YAEL,IAAI,CAAC,YAAY;gBAAE,OAAO;YAE1B,IAAM,OAAO,GAAmB,EAAE,CAAC;YACnC,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACnC,OAAO,IAAA,+BAAa,EAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAEzD,SAAS,KAAK,CAAC,IAAa;;gBAC1B,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBAE7B,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC;oBAAE,OAAO;gBACvC,IAAI,CAAA,MAAA,IAAI,CAAC,aAAa,0CAAE,MAAM,MAAK,CAAC;oBAAE,OAAO;gBAC7C,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;oBAAE,OAAO;gBAC9C,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,uBAAuB;oBAAE,OAAO;gBAE7D,OAAO,CAAC,IAAI,CACV,IAAI,8BAAY,CACd,UAAU,CAAC,QAAQ,EACnB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,EACzB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,CAC1B,CACF,CAAC;YACJ,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAED;IACE,OAAO,IAAA,kBAAK,EAAC,CAAC,mCAAmC,EAAE,CAAC,CAAC,CAAC;AACxD,CAAC;AAFD,4BAEC","sourcesContent":["import * as ts from 'typescript';\nimport { Rule, chain, Tree } from '@angular-devkit/schematics';\nimport {\n  visitTSSourceFiles,\n  RemoveChange,\n  commitChanges,\n} from '../../schematics-core';\n\nfunction updateCreateFeatureSelectorGenerics(): Rule {\n  return (tree: Tree) => {\n    visitTSSourceFiles(tree, (sourceFile) => {\n      const runMigration = sourceFile.statements\n        .filter(ts.isImportDeclaration)\n        .filter(\n          (importDeclaration) =>\n            importDeclaration.moduleSpecifier.getText(sourceFile) ===\n              \"'@ngrx/store'\" ||\n            importDeclaration.moduleSpecifier.getText(sourceFile) ===\n              '\"@ngrx/store\"'\n        )\n        .some((importDeclaration) => {\n          return importDeclaration.importClause?.namedBindings\n            ?.getText(sourceFile)\n            .includes('createFeatureSelector');\n        });\n\n      if (!runMigration) return;\n\n      const changes: RemoveChange[] = [];\n      ts.forEachChild(sourceFile, crawl);\n      return commitChanges(tree, sourceFile.fileName, changes);\n\n      function crawl(node: ts.Node) {\n        ts.forEachChild(node, crawl);\n\n        if (!ts.isCallExpression(node)) return;\n        if (node.typeArguments?.length !== 2) return;\n        if (!ts.isIdentifier(node.expression)) return;\n        if (node.expression.text !== 'createFeatureSelector') return;\n\n        changes.push(\n          new RemoveChange(\n            sourceFile.fileName,\n            node.typeArguments[0].pos,\n            node.typeArguments[1].pos\n          )\n        );\n      }\n    });\n  };\n}\n\nexport default function (): Rule {\n  return chain([updateCreateFeatureSelectorGenerics()]);\n}\n"]}