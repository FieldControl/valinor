{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../modules/store/migrations/15_2_0/index.ts"],"names":[],"mappings":";;AAAA,+BAAiC;AACjC,yDAA+D;AAC/D,yDAK+B;AAE/B,SAAS,mBAAmB;IAC1B,OAAO,UAAC,IAAU;QAChB,IAAA,oCAAkB,EAAC,IAAI,EAAE,UAAC,UAAU;YAClC,IAAM,YAAY,GAAG,UAAU,CAAC,UAAU;iBACvC,MAAM,CAAC,EAAE,CAAC,mBAAmB,CAAC;iBAC9B,MAAM,CACL,UAAC,iBAAiB;gBAChB,OAAA,iBAAiB,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;oBACnD,eAAe;oBACjB,iBAAiB,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC;wBACnD,eAAe;YAHjB,CAGiB,CACpB;iBACA,IAAI,CAAC,UAAC,iBAAiB;;gBACtB,OAAO,MAAA,MAAA,iBAAiB,CAAC,YAAY,0CAAE,aAAa,0CAChD,OAAO,CAAC,UAAU,EACnB,QAAQ,CAAC,eAAe,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;YAEL,IAAI,CAAC,YAAY;gBAAE,OAAO;YAE1B,IAAM,OAAO,GAAoC,EAAE,CAAC;YACpD,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACnC,OAAO,IAAA,+BAAa,EAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAEzD,SAAS,KAAK,CAAC,IAAa;gBAC1B,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBAE7B,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC;oBAAE,OAAO;gBAE/B,IAAA,aAAa,GAAK,IAAI,cAAT,CAAU;gBAE/B,IAAI,CAAC,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,CAAA;oBAAE,OAAO;gBAEnC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;oBAAE,OAAO;gBAC9C,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,eAAe;oBAAE,OAAO;gBAErD,OAAO,CAAC,IAAI,CACV,IAAI,8BAAY,CACd,UAAU,CAAC,QAAQ;gBACnB,eAAe;gBACf,aAAa,CAAC,GAAG,GAAG,CAAC;gBACrB,eAAe;gBACf,aAAa,CAAC,GAAG,GAAG,CAAC,CACtB,CACF,CAAC;YACJ,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAED;IACE,OAAO,IAAA,kBAAK,EAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;AACtC,CAAC;AAFD,4BAEC","sourcesContent":["import * as ts from 'typescript';\nimport { Rule, chain, Tree } from '@angular-devkit/schematics';\nimport {\n  visitTSSourceFiles,\n  RemoveChange,\n  commitChanges,\n  InsertChange,\n} from '../../schematics-core';\n\nfunction updatecreateFeature(): Rule {\n  return (tree: Tree) => {\n    visitTSSourceFiles(tree, (sourceFile) => {\n      const runMigration = sourceFile.statements\n        .filter(ts.isImportDeclaration)\n        .filter(\n          (importDeclaration) =>\n            importDeclaration.moduleSpecifier.getText(sourceFile) ===\n              \"'@ngrx/store'\" ||\n            importDeclaration.moduleSpecifier.getText(sourceFile) ===\n              '\"@ngrx/store\"'\n        )\n        .some((importDeclaration) => {\n          return importDeclaration.importClause?.namedBindings\n            ?.getText(sourceFile)\n            .includes('createFeature');\n        });\n\n      if (!runMigration) return;\n\n      const changes: (RemoveChange | InsertChange)[] = [];\n      ts.forEachChild(sourceFile, crawl);\n      return commitChanges(tree, sourceFile.fileName, changes);\n\n      function crawl(node: ts.Node) {\n        ts.forEachChild(node, crawl);\n\n        if (!ts.isCallExpression(node)) return;\n\n        const { typeArguments } = node;\n\n        if (!typeArguments?.length) return;\n\n        if (!ts.isIdentifier(node.expression)) return;\n        if (node.expression.text !== 'createFeature') return;\n\n        changes.push(\n          new RemoveChange(\n            sourceFile.fileName,\n            // to include <\n            typeArguments.pos - 1,\n            // to include >\n            typeArguments.end + 1\n          )\n        );\n      }\n    });\n  };\n}\n\nexport default function (): Rule {\n  return chain([updatecreateFeature]);\n}\n"]}