{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../modules/store/schematics/ng-add/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as ts from 'typescript';\nimport {\n  Rule,\n  SchematicContext,\n  SchematicsException,\n  Tree,\n  apply,\n  applyTemplates,\n  branchAndMerge,\n  chain,\n  mergeWith,\n  url,\n  noop,\n  move,\n  filter,\n} from '@angular-devkit/schematics';\nimport {\n  NodePackageInstallTask,\n  RunSchematicTask,\n} from '@angular-devkit/schematics/tasks';\nimport {\n  InsertChange,\n  addImportToModule,\n  buildRelativePath,\n  findModuleFromOptions,\n  getProjectPath,\n  insertImport,\n  stringUtils,\n  addPackageToPackageJson,\n  platformVersion,\n  parseName,\n} from '../../schematics-core';\nimport { Schema as RootStoreOptions } from './schema';\nimport { getProjectMainFile } from '../../schematics-core/utility/project';\nimport {\n  addFunctionalProvidersToStandaloneBootstrap,\n  callsProvidersFunction,\n} from '../../schematics-core/utility/standalone';\nimport { isStandaloneApp } from '@schematics/angular/utility/ng-ast-utils';\n\nfunction addImportToNgModule(options: RootStoreOptions): Rule {\n  return (host: Tree) => {\n    const modulePath = options.module;\n\n    if (!modulePath) {\n      return host;\n    }\n\n    if (!host.exists(modulePath)) {\n      throw new Error('Specified module does not exist');\n    }\n\n    const text = host.read(modulePath);\n    if (text === null) {\n      throw new SchematicsException(`File ${modulePath} does not exist.`);\n    }\n    const sourceText = text.toString('utf-8');\n\n    const source = ts.createSourceFile(\n      modulePath,\n      sourceText,\n      ts.ScriptTarget.Latest,\n      true\n    );\n\n    const storeModuleReducers = options.minimal ? `{}` : `reducers`;\n\n    const storeModuleConfig = options.minimal\n      ? `{}`\n      : `{\n      metaReducers\n    }`;\n    const storeModuleSetup = `StoreModule.forRoot(${storeModuleReducers}, ${storeModuleConfig})`;\n\n    const statePath = `/${options.path}/${options.statePath}`;\n    const relativePath = buildRelativePath(modulePath, statePath);\n    const [storeNgModuleImport] = addImportToModule(\n      source,\n      modulePath,\n      storeModuleSetup,\n      relativePath\n    );\n\n    let changes = [\n      insertImport(source, modulePath, 'StoreModule', '@ngrx/store'),\n      storeNgModuleImport,\n    ];\n\n    if (!options.minimal) {\n      changes = changes.concat([\n        insertImport(\n          source,\n          modulePath,\n          'reducers, metaReducers',\n          relativePath\n        ),\n      ]);\n    }\n\n    const recorder = host.beginUpdate(modulePath);\n\n    for (const change of changes) {\n      if (change instanceof InsertChange) {\n        recorder.insertLeft(change.pos, change.toAdd);\n      }\n    }\n    host.commitUpdate(recorder);\n\n    return host;\n  };\n}\n\nfunction addNgRxStoreToPackageJson() {\n  return (host: Tree, context: SchematicContext) => {\n    addPackageToPackageJson(\n      host,\n      'dependencies',\n      '@ngrx/store',\n      platformVersion\n    );\n    context.addTask(new NodePackageInstallTask());\n    return host;\n  };\n}\n\nfunction addNgRxESLintPlugin() {\n  return (host: Tree, context: SchematicContext) => {\n    const eslint = host.read('.eslintrc.json')?.toString('utf-8');\n    if (eslint) {\n      addPackageToPackageJson(\n        host,\n        'devDependencies',\n        '@ngrx/eslint-plugin',\n        platformVersion\n      );\n\n      const installTaskId = context.addTask(new NodePackageInstallTask());\n      context.addTask(\n        new RunSchematicTask('@ngrx/eslint-plugin', 'ng-add', {}),\n        [installTaskId]\n      );\n    }\n    return host;\n  };\n}\n\nfunction addStandaloneConfig(options: RootStoreOptions): Rule {\n  return (host: Tree) => {\n    const mainFile = getProjectMainFile(host, options);\n\n    if (host.exists(mainFile)) {\n      const storeProviderFn = 'provideStore';\n\n      if (callsProvidersFunction(host, mainFile, storeProviderFn)) {\n        // exit because the store config is already provided\n        return host;\n      }\n      const storeProviderOptions = options.minimal\n        ? []\n        : [\n            ts.factory.createIdentifier('reducers'),\n            ts.factory.createIdentifier('{ metaReducers }'),\n          ];\n      const patchedConfigFile = addFunctionalProvidersToStandaloneBootstrap(\n        host,\n        mainFile,\n        storeProviderFn,\n        '@ngrx/store',\n        storeProviderOptions\n      );\n\n      if (options.minimal) {\n        // no need to add imports if it is minimal\n        return host;\n      }\n\n      // insert reducers import into the patched file\n      const configFileContent = host.read(patchedConfigFile);\n      const source = ts.createSourceFile(\n        patchedConfigFile,\n        configFileContent?.toString('utf-8') || '',\n        ts.ScriptTarget.Latest,\n        true\n      );\n      const statePath = `/${options.path}/${options.statePath}`;\n      const relativePath = buildRelativePath(\n        `/${patchedConfigFile}`,\n        statePath\n      );\n\n      const recorder = host.beginUpdate(patchedConfigFile);\n\n      const change = insertImport(\n        source,\n        patchedConfigFile,\n        'reducers, metaReducers',\n        relativePath\n      );\n\n      if (change instanceof InsertChange) {\n        recorder.insertLeft(change.pos, change.toAdd);\n      }\n\n      host.commitUpdate(recorder);\n\n      return host;\n    }\n    throw new SchematicsException(\n      `Main file not found for a project ${options.project}`\n    );\n  };\n}\n\nexport default function (options: RootStoreOptions): Rule {\n  return (host: Tree, context: SchematicContext) => {\n    const mainFile = getProjectMainFile(host, options);\n    const isStandalone = isStandaloneApp(host, mainFile);\n\n    options.path = getProjectPath(host, options);\n\n    const parsedPath = parseName(options.path, '');\n    options.path = parsedPath.path;\n\n    if (options.module && !isStandalone) {\n      options.module = findModuleFromOptions(host, {\n        name: '',\n        module: options.module,\n        path: options.path,\n      });\n    }\n\n    if (options.stateInterface && options.stateInterface !== 'State') {\n      options.stateInterface = stringUtils.classify(options.stateInterface);\n    }\n\n    const templateSource = apply(url('./files'), [\n      filter(() => (options.minimal ? false : true)),\n      applyTemplates({\n        ...stringUtils,\n        ...options,\n      }),\n      move(parsedPath.path),\n    ]);\n\n    const configOrModuleUpdate = isStandalone\n      ? addStandaloneConfig(options)\n      : addImportToNgModule(options);\n\n    return chain([\n      branchAndMerge(chain([configOrModuleUpdate, mergeWith(templateSource)])),\n      options && options.skipPackageJson ? noop() : addNgRxStoreToPackageJson(),\n      options && options.skipESLintPlugin ? noop() : addNgRxESLintPlugin(),\n    ])(host, context);\n  };\n}\n"]}