import { of, } from 'rxjs';
import { concatMap, withLatestFrom } from 'rxjs/operators';
/**
 * `concatLatestFrom` combines the source value
 * and the last available value from a lazily evaluated Observable
 * in a new array
 *
 * @usageNotes
 *
 * Select the active customer from the NgRx Store
 *
 * ```ts
 * import { concatLatestFrom } from '@ngrx/effects';
 * import * as fromCustomers from '../customers';
 *
 * this.actions$.pipe(
 *  concatLatestFrom(() => this.store.select(fromCustomers.selectActiveCustomer))
 * )
 * ```
 *
 * Select a customer from the NgRx Store by its id that is available on the action
 *
 * ```ts
 * import { concatLatestFrom } from '@ngrx/effects';
 * import * fromCustomers from '../customers';
 *
 * this.actions$.pipe(
 *  concatLatestFrom((action) => this.store.select(fromCustomers.selectCustomer(action.customerId)))
 * )
 * ```
 */
export function concatLatestFrom(observablesFactory) {
    return concatMap((value) => {
        const observables = observablesFactory(value);
        const observablesAsArray = Array.isArray(observables)
            ? observables
            : [observables];
        return of(value).pipe(withLatestFrom(...observablesAsArray));
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uY2F0X2xhdGVzdF9mcm9tLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9vcGVyYXRvcnMvc3JjL2NvbmNhdF9sYXRlc3RfZnJvbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBR0wsRUFBRSxHQUdILE1BQU0sTUFBTSxDQUFDO0FBQ2QsT0FBTyxFQUFFLFNBQVMsRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQVMzRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTRCRztBQUNILE1BQU0sVUFBVSxnQkFBZ0IsQ0FTOUIsa0JBQW1DO0lBQ25DLE9BQU8sU0FBUyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7UUFDekIsTUFBTSxXQUFXLEdBQUcsa0JBQWtCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUMsTUFBTSxrQkFBa0IsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQztZQUNuRCxDQUFDLENBQUMsV0FBVztZQUNiLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FDbkIsY0FBYyxDQUFDLEdBQUcsa0JBQWtCLENBQUMsQ0FDVixDQUFDO0lBQ2hDLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIE9ic2VydmFibGUsXG4gIE9ic2VydmFibGVJbnB1dCxcbiAgb2YsXG4gIE9ic2VydmVkVmFsdWVPZixcbiAgT3BlcmF0b3JGdW5jdGlvbixcbn0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBjb25jYXRNYXAsIHdpdGhMYXRlc3RGcm9tIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG4vLyBUaGUgYXJyYXkgb3ZlcmxvYWQgaXMgbmVlZGVkIGZpcnN0IGJlY2F1c2Ugd2Ugd2FudCB0byBtYWludGFpbiB0aGUgcHJvcGVyIG9yZGVyIGluIHRoZSByZXN1bHRpbmcgdHVwbGVcbmV4cG9ydCBmdW5jdGlvbiBjb25jYXRMYXRlc3RGcm9tPFQgZXh0ZW5kcyBPYnNlcnZhYmxlPHVua25vd24+W10sIFY+KFxuICBvYnNlcnZhYmxlc0ZhY3Rvcnk6ICh2YWx1ZTogVikgPT4gWy4uLlRdXG4pOiBPcGVyYXRvckZ1bmN0aW9uPFYsIFtWLCAuLi57IFtpIGluIGtleW9mIFRdOiBPYnNlcnZlZFZhbHVlT2Y8VFtpXT4gfV0+O1xuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdExhdGVzdEZyb208VCBleHRlbmRzIE9ic2VydmFibGU8dW5rbm93bj4sIFY+KFxuICBvYnNlcnZhYmxlRmFjdG9yeTogKHZhbHVlOiBWKSA9PiBUXG4pOiBPcGVyYXRvckZ1bmN0aW9uPFYsIFtWLCBPYnNlcnZlZFZhbHVlT2Y8VD5dPjtcbi8qKlxuICogYGNvbmNhdExhdGVzdEZyb21gIGNvbWJpbmVzIHRoZSBzb3VyY2UgdmFsdWVcbiAqIGFuZCB0aGUgbGFzdCBhdmFpbGFibGUgdmFsdWUgZnJvbSBhIGxhemlseSBldmFsdWF0ZWQgT2JzZXJ2YWJsZVxuICogaW4gYSBuZXcgYXJyYXlcbiAqXG4gKiBAdXNhZ2VOb3Rlc1xuICpcbiAqIFNlbGVjdCB0aGUgYWN0aXZlIGN1c3RvbWVyIGZyb20gdGhlIE5nUnggU3RvcmVcbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgY29uY2F0TGF0ZXN0RnJvbSB9IGZyb20gJ0BuZ3J4L2VmZmVjdHMnO1xuICogaW1wb3J0ICogYXMgZnJvbUN1c3RvbWVycyBmcm9tICcuLi9jdXN0b21lcnMnO1xuICpcbiAqIHRoaXMuYWN0aW9ucyQucGlwZShcbiAqICBjb25jYXRMYXRlc3RGcm9tKCgpID0+IHRoaXMuc3RvcmUuc2VsZWN0KGZyb21DdXN0b21lcnMuc2VsZWN0QWN0aXZlQ3VzdG9tZXIpKVxuICogKVxuICogYGBgXG4gKlxuICogU2VsZWN0IGEgY3VzdG9tZXIgZnJvbSB0aGUgTmdSeCBTdG9yZSBieSBpdHMgaWQgdGhhdCBpcyBhdmFpbGFibGUgb24gdGhlIGFjdGlvblxuICpcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBjb25jYXRMYXRlc3RGcm9tIH0gZnJvbSAnQG5ncngvZWZmZWN0cyc7XG4gKiBpbXBvcnQgKiBmcm9tQ3VzdG9tZXJzIGZyb20gJy4uL2N1c3RvbWVycyc7XG4gKlxuICogdGhpcy5hY3Rpb25zJC5waXBlKFxuICogIGNvbmNhdExhdGVzdEZyb20oKGFjdGlvbikgPT4gdGhpcy5zdG9yZS5zZWxlY3QoZnJvbUN1c3RvbWVycy5zZWxlY3RDdXN0b21lcihhY3Rpb24uY3VzdG9tZXJJZCkpKVxuICogKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb25jYXRMYXRlc3RGcm9tPFxuICBUIGV4dGVuZHMgT2JzZXJ2YWJsZUlucHV0PHVua25vd24+W10gfCBPYnNlcnZhYmxlSW5wdXQ8dW5rbm93bj4sXG4gIFYsXG4gIFIgPSBbXG4gICAgVixcbiAgICAuLi4oVCBleHRlbmRzIE9ic2VydmFibGVJbnB1dDx1bmtub3duPltdXG4gICAgICA/IHsgW2kgaW4ga2V5b2YgVF06IE9ic2VydmVkVmFsdWVPZjxUW2ldPiB9XG4gICAgICA6IFtPYnNlcnZlZFZhbHVlT2Y8VD5dKVxuICBdXG4+KG9ic2VydmFibGVzRmFjdG9yeTogKHZhbHVlOiBWKSA9PiBUKTogT3BlcmF0b3JGdW5jdGlvbjxWLCBSPiB7XG4gIHJldHVybiBjb25jYXRNYXAoKHZhbHVlKSA9PiB7XG4gICAgY29uc3Qgb2JzZXJ2YWJsZXMgPSBvYnNlcnZhYmxlc0ZhY3RvcnkodmFsdWUpO1xuICAgIGNvbnN0IG9ic2VydmFibGVzQXNBcnJheSA9IEFycmF5LmlzQXJyYXkob2JzZXJ2YWJsZXMpXG4gICAgICA/IG9ic2VydmFibGVzXG4gICAgICA6IFtvYnNlcnZhYmxlc107XG4gICAgcmV0dXJuIG9mKHZhbHVlKS5waXBlKFxuICAgICAgd2l0aExhdGVzdEZyb20oLi4ub2JzZXJ2YWJsZXNBc0FycmF5KVxuICAgICkgYXMgdW5rbm93biBhcyBPYnNlcnZhYmxlPFI+O1xuICB9KTtcbn1cbiJdfQ==