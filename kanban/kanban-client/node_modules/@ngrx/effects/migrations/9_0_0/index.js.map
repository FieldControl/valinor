{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../modules/effects/migrations/9_0_0/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as ts from 'typescript';\nimport {\n  chain,\n  Rule,\n  SchematicContext,\n  Tree,\n} from '@angular-devkit/schematics';\nimport {\n  commitChanges,\n  visitTSSourceFiles,\n  createReplaceChange,\n  ReplaceChange,\n} from '../../schematics-core';\n\nfunction renameErrorHandlerConfig(): Rule {\n  return (tree: Tree, ctx: SchematicContext) => {\n    visitTSSourceFiles(tree, (sourceFile) => {\n      const changes: ReplaceChange[] = replaceEffectConfigKeys(\n        sourceFile,\n        'resubscribeOnError',\n        'useEffectsErrorHandler'\n      );\n\n      commitChanges(tree, sourceFile.fileName, changes);\n\n      if (changes.length) {\n        ctx.logger.info(\n          `[@ngrx/effects] Updated Effects configuration, see the migration guide (https://ngrx.io/guide/migration/v9#effects) for more info`\n        );\n      }\n    });\n  };\n}\n\nfunction replaceEffectConfigKeys(\n  sourceFile: ts.SourceFile,\n  oldText: string,\n  newText: string\n): ReplaceChange[] {\n  const changes: ReplaceChange[] = [];\n\n  ts.forEachChild(sourceFile, (node) => {\n    visitCreateEffectFunctionCreator(node, (createEffectNode) => {\n      const [effectDeclaration, configNode] = createEffectNode.arguments;\n      if (configNode) {\n        findAndReplaceText(configNode);\n      }\n    });\n\n    visitEffectDecorator(node, (effectDecoratorNode) => {\n      findAndReplaceText(effectDecoratorNode);\n    });\n  });\n\n  return changes;\n\n  function findAndReplaceText(node: ts.Node): void {\n    visitIdentifierWithText(node, oldText, (match) => {\n      changes.push(createReplaceChange(sourceFile, match, oldText, newText));\n    });\n  }\n}\n\nfunction visitIdentifierWithText(\n  node: ts.Node,\n  text: string,\n  visitor: (node: ts.Node) => void\n) {\n  if (ts.isIdentifier(node) && node.text === text) {\n    visitor(node);\n  }\n\n  ts.forEachChild(node, (childNode) =>\n    visitIdentifierWithText(childNode, text, visitor)\n  );\n}\n\nfunction visitEffectDecorator(node: ts.Node, visitor: (node: ts.Node) => void) {\n  if (\n    ts.isDecorator(node) &&\n    ts.isCallExpression(node.expression) &&\n    ts.isIdentifier(node.expression.expression) &&\n    node.expression.expression.text === 'Effect'\n  ) {\n    visitor(node);\n  }\n\n  ts.forEachChild(node, (childNode) =>\n    visitEffectDecorator(childNode, visitor)\n  );\n}\n\nfunction visitCreateEffectFunctionCreator(\n  node: ts.Node,\n  visitor: (node: ts.CallExpression) => void\n) {\n  if (\n    ts.isCallExpression(node) &&\n    ts.isIdentifier(node.expression) &&\n    node.expression.text === 'createEffect'\n  ) {\n    visitor(node);\n  }\n\n  ts.forEachChild(node, (childNode) =>\n    visitCreateEffectFunctionCreator(childNode, visitor)\n  );\n}\n\nexport default function (): Rule {\n  return chain([renameErrorHandlerConfig()]);\n}\n"]}