import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./apollo";
export class Subscription {
    apollo;
    client = 'default';
    constructor(apollo) {
        this.apollo = apollo;
    }
    subscribe(variables, options, extra) {
        return this.apollo.use(this.client).subscribe({
            ...options,
            variables,
            query: this.document,
        }, extra);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: Subscription, deps: [{ token: i1.Apollo }], target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: Subscription });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: Subscription, decorators: [{
            type: Injectable
        }], ctorParameters: () => [{ type: i1.Apollo }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Vic2NyaXB0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3N1YnNjcmlwdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFXM0MsTUFBTSxPQUFnQixZQUFZO0lBSUQ7SUFGeEIsTUFBTSxHQUFHLFNBQVMsQ0FBQztJQUUxQixZQUErQixNQUFjO1FBQWQsV0FBTSxHQUFOLE1BQU0sQ0FBUTtJQUFHLENBQUM7SUFFMUMsU0FBUyxDQUNkLFNBQWEsRUFDYixPQUF3QyxFQUN4QyxLQUFnQztRQUVoQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLENBQzNDO1lBQ0UsR0FBRyxPQUFPO1lBQ1YsU0FBUztZQUNULEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUTtTQUNyQixFQUNELEtBQUssQ0FDTixDQUFDO0lBQ0osQ0FBQzt1R0FuQm1CLFlBQVk7MkdBQVosWUFBWTs7MkZBQVosWUFBWTtrQkFEakMsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgRG9jdW1lbnROb2RlIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgdHlwZSB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB0eXBlIHsgT3BlcmF0aW9uVmFyaWFibGVzLCBUeXBlZERvY3VtZW50Tm9kZSB9IGZyb20gJ0BhcG9sbG8vY2xpZW50L2NvcmUnO1xuaW1wb3J0IHsgQXBvbGxvIH0gZnJvbSAnLi9hcG9sbG8nO1xuaW1wb3J0IHtcbiAgRW1wdHlPYmplY3QsXG4gIEV4dHJhU3Vic2NyaXB0aW9uT3B0aW9ucyxcbiAgU3Vic2NyaXB0aW9uT3B0aW9uc0Fsb25lLFxuICBTdWJzY3JpcHRpb25SZXN1bHQsXG59IGZyb20gJy4vdHlwZXMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgU3Vic2NyaXB0aW9uPFQgPSBhbnksIFYgZXh0ZW5kcyBPcGVyYXRpb25WYXJpYWJsZXMgPSBFbXB0eU9iamVjdD4ge1xuICBwdWJsaWMgYWJzdHJhY3QgcmVhZG9ubHkgZG9jdW1lbnQ6IERvY3VtZW50Tm9kZSB8IFR5cGVkRG9jdW1lbnROb2RlPFQsIFY+O1xuICBwdWJsaWMgY2xpZW50ID0gJ2RlZmF1bHQnO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCByZWFkb25seSBhcG9sbG86IEFwb2xsbykge31cblxuICBwdWJsaWMgc3Vic2NyaWJlKFxuICAgIHZhcmlhYmxlcz86IFYsXG4gICAgb3B0aW9ucz86IFN1YnNjcmlwdGlvbk9wdGlvbnNBbG9uZTxWLCBUPixcbiAgICBleHRyYT86IEV4dHJhU3Vic2NyaXB0aW9uT3B0aW9ucyxcbiAgKTogT2JzZXJ2YWJsZTxTdWJzY3JpcHRpb25SZXN1bHQ8VD4+IHtcbiAgICByZXR1cm4gdGhpcy5hcG9sbG8udXNlKHRoaXMuY2xpZW50KS5zdWJzY3JpYmU8VCwgVj4oXG4gICAgICB7XG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIHZhcmlhYmxlcyxcbiAgICAgICAgcXVlcnk6IHRoaXMuZG9jdW1lbnQsXG4gICAgICB9LFxuICAgICAgZXh0cmEsXG4gICAgKTtcbiAgfVxufVxuIl19