import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./apollo";
export class Query {
    apollo;
    client = 'default';
    constructor(apollo) {
        this.apollo = apollo;
    }
    watch(variables, options) {
        return this.apollo.use(this.client).watchQuery({
            ...options,
            variables,
            query: this.document,
        });
    }
    fetch(variables, options) {
        return this.apollo.use(this.client).query({
            ...options,
            variables,
            query: this.document,
        });
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: Query, deps: [{ token: i1.Apollo }], target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: Query });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: Query, decorators: [{
            type: Injectable
        }], ctorParameters: () => [{ type: i1.Apollo }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcXVlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBTzNDLE1BQU0sT0FBZ0IsS0FBSztJQUlNO0lBRnhCLE1BQU0sR0FBRyxTQUFTLENBQUM7SUFFMUIsWUFBK0IsTUFBYztRQUFkLFdBQU0sR0FBTixNQUFNLENBQVE7SUFBRyxDQUFDO0lBRTFDLEtBQUssQ0FBQyxTQUFhLEVBQUUsT0FBc0M7UUFDaEUsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsVUFBVSxDQUFPO1lBQ25ELEdBQUcsT0FBTztZQUNWLFNBQVM7WUFDVCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVE7U0FDckIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLEtBQUssQ0FBQyxTQUFhLEVBQUUsT0FBaUM7UUFDM0QsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBSyxDQUFPO1lBQzlDLEdBQUcsT0FBTztZQUNWLFNBQVM7WUFDVCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVE7U0FDckIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzt1R0FwQm1CLEtBQUs7MkdBQUwsS0FBSzs7MkZBQUwsS0FBSztrQkFEMUIsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgRG9jdW1lbnROb2RlIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgdHlwZSB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB0eXBlIHsgQXBvbGxvUXVlcnlSZXN1bHQsIE9wZXJhdGlvblZhcmlhYmxlcywgVHlwZWREb2N1bWVudE5vZGUgfSBmcm9tICdAYXBvbGxvL2NsaWVudC9jb3JlJztcbmltcG9ydCB7IEFwb2xsbyB9IGZyb20gJy4vYXBvbGxvJztcbmltcG9ydCB7IFF1ZXJ5UmVmIH0gZnJvbSAnLi9xdWVyeS1yZWYnO1xuaW1wb3J0IHsgRW1wdHlPYmplY3QsIFF1ZXJ5T3B0aW9uc0Fsb25lLCBXYXRjaFF1ZXJ5T3B0aW9uc0Fsb25lIH0gZnJvbSAnLi90eXBlcyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBRdWVyeTxUID0ge30sIFYgZXh0ZW5kcyBPcGVyYXRpb25WYXJpYWJsZXMgPSBFbXB0eU9iamVjdD4ge1xuICBwdWJsaWMgYWJzdHJhY3QgcmVhZG9ubHkgZG9jdW1lbnQ6IERvY3VtZW50Tm9kZSB8IFR5cGVkRG9jdW1lbnROb2RlPFQsIFY+O1xuICBwdWJsaWMgY2xpZW50ID0gJ2RlZmF1bHQnO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCByZWFkb25seSBhcG9sbG86IEFwb2xsbykge31cblxuICBwdWJsaWMgd2F0Y2godmFyaWFibGVzPzogViwgb3B0aW9ucz86IFdhdGNoUXVlcnlPcHRpb25zQWxvbmU8ViwgVD4pOiBRdWVyeVJlZjxULCBWPiB7XG4gICAgcmV0dXJuIHRoaXMuYXBvbGxvLnVzZSh0aGlzLmNsaWVudCkud2F0Y2hRdWVyeTxULCBWPih7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdmFyaWFibGVzLFxuICAgICAgcXVlcnk6IHRoaXMuZG9jdW1lbnQsXG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgZmV0Y2godmFyaWFibGVzPzogViwgb3B0aW9ucz86IFF1ZXJ5T3B0aW9uc0Fsb25lPFYsIFQ+KTogT2JzZXJ2YWJsZTxBcG9sbG9RdWVyeVJlc3VsdDxUPj4ge1xuICAgIHJldHVybiB0aGlzLmFwb2xsby51c2UodGhpcy5jbGllbnQpLnF1ZXJ5PFQsIFY+KHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICB2YXJpYWJsZXMsXG4gICAgICBxdWVyeTogdGhpcy5kb2N1bWVudCxcbiAgICB9KTtcbiAgfVxufVxuIl19