{"version":3,"file":"test.js","sourceRoot":"","sources":["../../../schematics/utils/test.ts"],"names":[],"mappings":";;;AAAA,+BAA4B;AAC5B,gEAAuF;AAEvF,MAAM,cAAc,GAAG,IAAA,WAAI,EAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;AAE7D,KAAK,UAAU,aAAa,CAAC,UAAU,GAAG,EAAE;IAC1C,MAAM,MAAM,GAAG,IAAI,6BAAmB,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;IAEzE,MAAM,aAAa,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC,qBAAqB,EAAE,WAAW,EAAE;QAC1F,IAAI,EAAE,WAAW;QACjB,OAAO,EAAE,QAAQ;QACjB,cAAc,EAAE,UAAU;KAC3B,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC,oBAAoB,CAChC,qBAAqB,EACrB,aAAa,EACb;QACE,GAAG,UAAU;QACb,IAAI,EAAE,QAAQ;KACf,EACD,aAAa,CACd,CAAC;AACJ,CAAC;AAEM,KAAK,UAAU,QAAQ,CAAC,UAAmB;IAChD,MAAM,WAAW,GAAG,QAAQ,CAAC;IAC7B,MAAM,OAAO,GAAG,MAAM,aAAa,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;IAEnF,MAAM,MAAM,GAAG,IAAI,6BAAmB,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;IAEzE,OAAO,MAAM,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,OAAO,CAAC,CAAC;AAChF,CAAC;AAPD,4BAOC","sourcesContent":["import { join } from 'path';\nimport { SchematicTestRunner, UnitTestTree } from '@angular-devkit/schematics/testing';\n\nconst collectionPath = join(__dirname, '../collection.json');\n\nasync function createTestApp(appOptions = {}): Promise<UnitTestTree> {\n  const runner = new SchematicTestRunner('apollo-angular', collectionPath);\n\n  const workspaceTree = await runner.runExternalSchematic('@schematics/angular', 'workspace', {\n    name: 'workspace',\n    version: '11.0.0',\n    newProjectRoot: 'projects',\n  });\n\n  return runner.runExternalSchematic(\n    '@schematics/angular',\n    'application',\n    {\n      ...appOptions,\n      name: 'apollo',\n    },\n    workspaceTree,\n  );\n}\n\nexport async function runNgAdd(standalone: boolean): Promise<UnitTestTree> {\n  const projectName = 'apollo';\n  const appTree = await createTestApp({ standalone: standalone, name: projectName });\n\n  const runner = new SchematicTestRunner('apollo-angular', collectionPath);\n\n  return await runner.runSchematic('ng-add', { project: projectName }, appTree);\n}\n"]}