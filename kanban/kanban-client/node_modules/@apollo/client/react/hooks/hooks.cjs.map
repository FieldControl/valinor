{"version":3,"file":"hooks.cjs","sources":["useApolloClient.js","useSyncExternalStore.js","internal/useDeepMemo.js","internal/useRenderGuard.js","internal/useLazyRef.js","internal/__use.js","internal/wrapHook.js","useQuery.js","useLazyQuery.js","useMutation.js","useSubscription.js","useReactiveVar.js","useFragment.js","constants.js","useSuspenseQuery.js","useBackgroundQuery.js","useLoadableQuery.js","useQueryRefHandlers.js","useReadQuery.js"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"rehackt\";\nimport { getApolloContext } from \"../context/index.js\";\n/**\n * @example\n * ```jsx\n * import { useApolloClient } from '@apollo/client';\n *\n * function SomeComponent() {\n *   const client = useApolloClient();\n *   // `client` is now set to the `ApolloClient` instance being used by the\n *   // application (that was configured using something like `ApolloProvider`)\n * }\n * ```\n *\n * @since 3.0.0\n * @returns The `ApolloClient` instance being used by the application.\n */\nexport function useApolloClient(override) {\n    var context = React.useContext(getApolloContext());\n    var client = override || context.client;\n    invariant(!!client, 49);\n    return client;\n}\n//# sourceMappingURL=useApolloClient.js.map","import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"rehackt\";\nimport { canUseLayoutEffect } from \"../../utilities/index.js\";\nvar didWarnUncachedGetSnapshot = false;\n// Prevent webpack from complaining about our feature detection of the\n// useSyncExternalStore property of the React namespace, which is expected not\n// to exist when using React 17 and earlier, and that's fine.\nvar uSESKey = \"useSyncExternalStore\";\nvar realHook = React[uSESKey];\n// Adapted from https://www.npmjs.com/package/use-sync-external-store, with\n// Apollo Client deviations called out by \"// DEVIATION ...\" comments.\n// When/if React.useSyncExternalStore is defined, delegate fully to it.\nexport var useSyncExternalStore = realHook ||\n    (function (subscribe, getSnapshot, getServerSnapshot) {\n        // Read the current snapshot from the store on every render. Again, this\n        // breaks the rules of React, and only works here because of specific\n        // implementation details, most importantly that updates are\n        // always synchronous.\n        var value = getSnapshot();\n        if (\n        // DEVIATION: Using __DEV__\n        globalThis.__DEV__ !== false &&\n            !didWarnUncachedGetSnapshot &&\n            // DEVIATION: Not using Object.is because we know our snapshots will never\n            // be exotic primitive values like NaN, which is !== itself.\n            value !== getSnapshot()) {\n            didWarnUncachedGetSnapshot = true;\n            // DEVIATION: Using invariant.error instead of console.error directly.\n            globalThis.__DEV__ !== false && invariant.error(58);\n        }\n        // Because updates are synchronous, we don't queue them. Instead we force a\n        // re-render whenever the subscribed state changes by updating an some\n        // arbitrary useState hook. Then, during render, we call getSnapshot to read\n        // the current value.\n        //\n        // Because we don't actually use the state returned by the useState hook, we\n        // can save a bit of memory by storing other stuff in that slot.\n        //\n        // To implement the early bailout, we need to track some things on a mutable\n        // object. Usually, we would put that in a useRef hook, but we can stash it in\n        // our useState hook instead.\n        //\n        // To force a re-render, we call forceUpdate({inst}). That works because the\n        // new object always fails an equality check.\n        var _a = React.useState({\n            inst: { value: value, getSnapshot: getSnapshot },\n        }), inst = _a[0].inst, forceUpdate = _a[1];\n        // Track the latest getSnapshot function with a ref. This needs to be updated\n        // in the layout phase so we can access it during the tearing check that\n        // happens on subscribe.\n        if (canUseLayoutEffect) {\n            // DEVIATION: We avoid calling useLayoutEffect when !canUseLayoutEffect,\n            // which may seem like a conditional hook, but this code ends up behaving\n            // unconditionally (one way or the other) because canUseLayoutEffect is\n            // constant.\n            React.useLayoutEffect(function () {\n                Object.assign(inst, { value: value, getSnapshot: getSnapshot });\n                // Whenever getSnapshot or subscribe changes, we need to check in the\n                // commit phase if there was an interleaved mutation. In concurrent mode\n                // this can happen all the time, but even in synchronous mode, an earlier\n                // effect may have mutated the store.\n                if (checkIfSnapshotChanged(inst)) {\n                    // Force a re-render.\n                    forceUpdate({ inst: inst });\n                }\n            }, [subscribe, value, getSnapshot]);\n        }\n        else {\n            Object.assign(inst, { value: value, getSnapshot: getSnapshot });\n        }\n        React.useEffect(function () {\n            // Check for changes right before subscribing. Subsequent changes will be\n            // detected in the subscription handler.\n            if (checkIfSnapshotChanged(inst)) {\n                // Force a re-render.\n                forceUpdate({ inst: inst });\n            }\n            // Subscribe to the store and return a clean-up function.\n            return subscribe(function handleStoreChange() {\n                // TODO: Because there is no cross-renderer API for batching updates, it's\n                // up to the consumer of this library to wrap their subscription event\n                // with unstable_batchedUpdates. Should we try to detect when this isn't\n                // the case and print a warning in development?\n                // The store changed. Check if the snapshot changed since the last time we\n                // read from the store.\n                if (checkIfSnapshotChanged(inst)) {\n                    // Force a re-render.\n                    forceUpdate({ inst: inst });\n                }\n            });\n        }, [subscribe]);\n        return value;\n    });\nfunction checkIfSnapshotChanged(_a) {\n    var value = _a.value, getSnapshot = _a.getSnapshot;\n    try {\n        return value !== getSnapshot();\n    }\n    catch (_b) {\n        return true;\n    }\n}\n//# sourceMappingURL=useSyncExternalStore.js.map","import * as React from \"rehackt\";\nimport { equal } from \"@wry/equality\";\nexport function useDeepMemo(memoFn, deps) {\n    var ref = React.useRef();\n    if (!ref.current || !equal(ref.current.deps, deps)) {\n        ref.current = { value: memoFn(), deps: deps };\n    }\n    return ref.current.value;\n}\n//# sourceMappingURL=useDeepMemo.js.map","import * as React from \"rehackt\";\nfunction getRenderDispatcher() {\n    var _a, _b;\n    return (_b = (_a = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _a === void 0 ? void 0 : _a.ReactCurrentDispatcher) === null || _b === void 0 ? void 0 : _b.current;\n}\nvar RenderDispatcher = null;\n/*\nRelay does this too, so we hope this is safe.\nhttps://github.com/facebook/relay/blob/8651fbca19adbfbb79af7a3bc40834d105fd7747/packages/react-relay/relay-hooks/loadQuery.js#L90-L98\n*/\nexport function useRenderGuard() {\n    RenderDispatcher = getRenderDispatcher();\n    return React.useCallback(function () {\n        return (RenderDispatcher != null && RenderDispatcher === getRenderDispatcher());\n    }, []);\n}\n//# sourceMappingURL=useRenderGuard.js.map","import * as React from \"rehackt\";\nvar INIT = {};\nexport function useLazyRef(getInitialValue) {\n    var ref = React.useRef(INIT);\n    if (ref.current === INIT) {\n        ref.current = getInitialValue();\n    }\n    return ref;\n}\n//# sourceMappingURL=useLazyRef.js.map","import { wrapPromiseWithState } from \"../../../utilities/index.js\";\nimport * as React from \"rehackt\";\n// Prevent webpack from complaining about our feature detection of the\n// use property of the React namespace, which is expected not\n// to exist when using current stable versions, and that's fine.\nvar useKey = \"use\";\nvar realHook = React[useKey];\n// This is named with two underscores to allow this hook to evade typical rules of\n// hooks (i.e. it can be used conditionally)\nexport var __use = realHook ||\n    function __use(promise) {\n        var statefulPromise = wrapPromiseWithState(promise);\n        switch (statefulPromise.status) {\n            case \"pending\":\n                throw statefulPromise;\n            case \"rejected\":\n                throw statefulPromise.reason;\n            case \"fulfilled\":\n                return statefulPromise.value;\n        }\n    };\n//# sourceMappingURL=__use.js.map","var wrapperSymbol = Symbol.for(\"apollo.hook.wrappers\");\n/**\n * @internal\n *\n * Makes an Apollo Client hook \"wrappable\".\n * That means that the Apollo Client instance can expose a \"wrapper\" that will be\n * used to wrap the original hook implementation with additional logic.\n * @example\n * ```tsx\n * // this is already done in `@apollo/client` for all wrappable hooks (see `WrappableHooks`)\n * // following this pattern\n * function useQuery() {\n *   return wrapHook('useQuery', _useQuery, options.client)(query, options);\n * }\n * function _useQuery(query, options) {\n *   // original implementation\n * }\n *\n * // this is what a library like `@apollo/client-react-streaming` would do\n * class ApolloClientWithStreaming extends ApolloClient {\n *   constructor(options) {\n *     super(options);\n *     this.queryManager[Symbol.for(\"apollo.hook.wrappers\")] = {\n *       useQuery: (original) => (query, options) => {\n *         console.log(\"useQuery was called with options\", options);\n *         return original(query, options);\n *       }\n *     }\n *   }\n * }\n *\n * // this will now log the options and then call the original `useQuery`\n * const client = new ApolloClientWithStreaming({ ... });\n * useQuery(query, { client });\n * ```\n */\nexport function wrapHook(hookName, useHook, clientOrObsQuery) {\n    var queryManager = clientOrObsQuery[\"queryManager\"];\n    var wrappers = queryManager && queryManager[wrapperSymbol];\n    var wrapper = wrappers && wrappers[hookName];\n    return wrapper ? wrapper(useHook) : useHook;\n}\n//# sourceMappingURL=wrapHook.js.map","import { __assign, __rest } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"rehackt\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { equal } from \"@wry/equality\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { NetworkStatus } from \"../../core/index.js\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { canUseWeakMap, compact, isNonEmptyArray, maybeDeepFreeze, } from \"../../utilities/index.js\";\nimport { wrapHook } from \"./internal/index.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * A hook for executing queries in an Apollo application.\n *\n * To run a query within a React component, call `useQuery` and pass it a GraphQL query document.\n *\n * When your component renders, `useQuery` returns an object from Apollo Client that contains `loading`, `error`, and `data` properties you can use to render your UI.\n *\n * > Refer to the [Queries](https://www.apollographql.com/docs/react/data/queries) section for a more in-depth overview of `useQuery`.\n *\n * @example\n * ```jsx\n * import { gql, useQuery } from '@apollo/client';\n *\n * const GET_GREETING = gql`\n *   query GetGreeting($language: String!) {\n *     greeting(language: $language) {\n *       message\n *     }\n *   }\n * `;\n *\n * function Hello() {\n *   const { loading, error, data } = useQuery(GET_GREETING, {\n *     variables: { language: 'english' },\n *   });\n *   if (loading) return <p>Loading ...</p>;\n *   return <h1>Hello {data.greeting.message}!</h1>;\n * }\n * ```\n * @since 3.0.0\n * @param query - A GraphQL query document parsed into an AST by `gql`.\n * @param options - Options to control how the query is executed.\n * @returns Query result object\n */\nexport function useQuery(query, options) {\n    if (options === void 0) { options = Object.create(null); }\n    return wrapHook(\"useQuery\", _useQuery, useApolloClient(options && options.client))(query, options);\n}\nfunction _useQuery(query, options) {\n    return useInternalState(useApolloClient(options.client), query).useQuery(options);\n}\nexport function useInternalState(client, query) {\n    var stateRef = React.useRef();\n    if (!stateRef.current ||\n        client !== stateRef.current.client ||\n        query !== stateRef.current.query) {\n        stateRef.current = new InternalState(client, query, stateRef.current);\n    }\n    var state = stateRef.current;\n    // By default, InternalState.prototype.forceUpdate is an empty function, but\n    // we replace it here (before anyone has had a chance to see this state yet)\n    // with a function that unconditionally forces an update, using the latest\n    // setTick function. Updating this state by calling state.forceUpdate is the\n    // only way we trigger React component updates (no other useState calls within\n    // the InternalState class).\n    state.forceUpdateState = React.useReducer(function (tick) { return tick + 1; }, 0)[1];\n    return state;\n}\nvar InternalState = /** @class */ (function () {\n    function InternalState(client, query, previous) {\n        var _this = this;\n        this.client = client;\n        this.query = query;\n        /**\n         * Will be overwritten by the `useSyncExternalStore` \"force update\" method\n         * whenever it is available and reset to `forceUpdateState` when it isn't.\n         */\n        this.forceUpdate = function () { return _this.forceUpdateState(); };\n        this.ssrDisabledResult = maybeDeepFreeze({\n            loading: true,\n            data: void 0,\n            error: void 0,\n            networkStatus: NetworkStatus.loading,\n        });\n        this.skipStandbyResult = maybeDeepFreeze({\n            loading: false,\n            data: void 0,\n            error: void 0,\n            networkStatus: NetworkStatus.ready,\n        });\n        // This cache allows the referential stability of this.result (as returned by\n        // getCurrentResult) to translate into referential stability of the resulting\n        // QueryResult object returned by toQueryResult.\n        this.toQueryResultCache = new (canUseWeakMap ? WeakMap : Map)();\n        verifyDocumentType(query, DocumentType.Query);\n        // Reuse previousData from previous InternalState (if any) to provide\n        // continuity of previousData even if/when the query or client changes.\n        var previousResult = previous && previous.result;\n        var previousData = previousResult && previousResult.data;\n        if (previousData) {\n            this.previousData = previousData;\n        }\n    }\n    /**\n     * Forces an update using local component state.\n     * As this is not batched with `useSyncExternalStore` updates,\n     * this is only used as a fallback if the `useSyncExternalStore` \"force update\"\n     * method is not registered at the moment.\n     * See https://github.com/facebook/react/issues/25191\n     *  */\n    InternalState.prototype.forceUpdateState = function () {\n        // Replaced (in useInternalState) with a method that triggers an update.\n        globalThis.__DEV__ !== false && invariant.warn(51);\n    };\n    InternalState.prototype.executeQuery = function (options) {\n        var _this = this;\n        var _a;\n        if (options.query) {\n            Object.assign(this, { query: options.query });\n        }\n        this.watchQueryOptions = this.createWatchQueryOptions((this.queryHookOptions = options));\n        var concast = this.observable.reobserveAsConcast(this.getObsQueryOptions());\n        // Make sure getCurrentResult returns a fresh ApolloQueryResult<TData>,\n        // but save the current data as this.previousData, just like setResult\n        // usually does.\n        this.previousData = ((_a = this.result) === null || _a === void 0 ? void 0 : _a.data) || this.previousData;\n        this.result = void 0;\n        this.forceUpdate();\n        return new Promise(function (resolve) {\n            var result;\n            // Subscribe to the concast independently of the ObservableQuery in case\n            // the component gets unmounted before the promise resolves. This prevents\n            // the concast from terminating early and resolving with `undefined` when\n            // there are no more subscribers for the concast.\n            concast.subscribe({\n                next: function (value) {\n                    result = value;\n                },\n                error: function () {\n                    resolve(_this.toQueryResult(_this.observable.getCurrentResult()));\n                },\n                complete: function () {\n                    resolve(_this.toQueryResult(result));\n                },\n            });\n        });\n    };\n    // Methods beginning with use- should be called according to the standard\n    // rules of React hooks: only at the top level of the calling function, and\n    // without any dynamic conditional logic.\n    InternalState.prototype.useQuery = function (options) {\n        var _this = this;\n        // The renderPromises field gets initialized here in the useQuery method, at\n        // the beginning of everything (for a given component rendering, at least),\n        // so we can safely use this.renderPromises in other/later InternalState\n        // methods without worrying it might be uninitialized. Even after\n        // initialization, this.renderPromises is usually undefined (unless SSR is\n        // happening), but that's fine as long as it has been initialized that way,\n        // rather than left uninitialized.\n        this.renderPromises = React.useContext(getApolloContext()).renderPromises;\n        this.useOptions(options);\n        var obsQuery = this.useObservableQuery();\n        var result = useSyncExternalStore(React.useCallback(function (handleStoreChange) {\n            if (_this.renderPromises) {\n                return function () { };\n            }\n            _this.forceUpdate = handleStoreChange;\n            var onNext = function () {\n                var previousResult = _this.result;\n                // We use `getCurrentResult()` instead of the onNext argument because\n                // the values differ slightly. Specifically, loading results will have\n                // an empty object for data instead of `undefined` for some reason.\n                var result = obsQuery.getCurrentResult();\n                // Make sure we're not attempting to re-render similar results\n                if (previousResult &&\n                    previousResult.loading === result.loading &&\n                    previousResult.networkStatus === result.networkStatus &&\n                    equal(previousResult.data, result.data)) {\n                    return;\n                }\n                _this.setResult(result);\n            };\n            var onError = function (error) {\n                subscription.unsubscribe();\n                subscription = obsQuery.resubscribeAfterError(onNext, onError);\n                if (!hasOwnProperty.call(error, \"graphQLErrors\")) {\n                    // The error is not a GraphQL error\n                    throw error;\n                }\n                var previousResult = _this.result;\n                if (!previousResult ||\n                    (previousResult && previousResult.loading) ||\n                    !equal(error, previousResult.error)) {\n                    _this.setResult({\n                        data: (previousResult && previousResult.data),\n                        error: error,\n                        loading: false,\n                        networkStatus: NetworkStatus.error,\n                    });\n                }\n            };\n            var subscription = obsQuery.subscribe(onNext, onError);\n            // Do the \"unsubscribe\" with a short delay.\n            // This way, an existing subscription can be reused without an additional\n            // request if \"unsubscribe\"  and \"resubscribe\" to the same ObservableQuery\n            // happen in very fast succession.\n            return function () {\n                setTimeout(function () { return subscription.unsubscribe(); });\n                _this.forceUpdate = function () { return _this.forceUpdateState(); };\n            };\n        }, [\n            // We memoize the subscribe function using useCallback and the following\n            // dependency keys, because the subscribe function reference is all that\n            // useSyncExternalStore uses internally as a dependency key for the\n            // useEffect ultimately responsible for the subscription, so we are\n            // effectively passing this dependency array to that useEffect buried\n            // inside useSyncExternalStore, as desired.\n            obsQuery,\n            this.renderPromises,\n            this.client.disableNetworkFetches,\n        ]), function () { return _this.getCurrentResult(); }, function () { return _this.getCurrentResult(); });\n        // TODO Remove this method when we remove support for options.partialRefetch.\n        this.unsafeHandlePartialRefetch(result);\n        return this.toQueryResult(result);\n    };\n    InternalState.prototype.useOptions = function (options) {\n        var _a;\n        var watchQueryOptions = this.createWatchQueryOptions((this.queryHookOptions = options));\n        // Update this.watchQueryOptions, but only when they have changed, which\n        // allows us to depend on the referential stability of\n        // this.watchQueryOptions elsewhere.\n        var currentWatchQueryOptions = this.watchQueryOptions;\n        if (!equal(watchQueryOptions, currentWatchQueryOptions)) {\n            this.watchQueryOptions = watchQueryOptions;\n            if (currentWatchQueryOptions && this.observable) {\n                // Though it might be tempting to postpone this reobserve call to the\n                // useEffect block, we need getCurrentResult to return an appropriate\n                // loading:true result synchronously (later within the same call to\n                // useQuery). Since we already have this.observable here (not true for\n                // the very first call to useQuery), we are not initiating any new\n                // subscriptions, though it does feel less than ideal that reobserve\n                // (potentially) kicks off a network request (for example, when the\n                // variables have changed), which is technically a side-effect.\n                this.observable.reobserve(this.getObsQueryOptions());\n                // Make sure getCurrentResult returns a fresh ApolloQueryResult<TData>,\n                // but save the current data as this.previousData, just like setResult\n                // usually does.\n                this.previousData = ((_a = this.result) === null || _a === void 0 ? void 0 : _a.data) || this.previousData;\n                this.result = void 0;\n            }\n        }\n        // Make sure state.onCompleted and state.onError always reflect the latest\n        // options.onCompleted and options.onError callbacks provided to useQuery,\n        // since those functions are often recreated every time useQuery is called.\n        // Like the forceUpdate method, the versions of these methods inherited from\n        // InternalState.prototype are empty no-ops, but we can override them on the\n        // base state object (without modifying the prototype).\n        this.onCompleted =\n            options.onCompleted || InternalState.prototype.onCompleted;\n        this.onError = options.onError || InternalState.prototype.onError;\n        if ((this.renderPromises || this.client.disableNetworkFetches) &&\n            this.queryHookOptions.ssr === false &&\n            !this.queryHookOptions.skip) {\n            // If SSR has been explicitly disabled, and this function has been called\n            // on the server side, return the default loading state.\n            this.result = this.ssrDisabledResult;\n        }\n        else if (this.queryHookOptions.skip ||\n            this.watchQueryOptions.fetchPolicy === \"standby\") {\n            // When skipping a query (ie. we're not querying for data but still want to\n            // render children), make sure the `data` is cleared out and `loading` is\n            // set to `false` (since we aren't loading anything).\n            //\n            // NOTE: We no longer think this is the correct behavior. Skipping should\n            // not automatically set `data` to `undefined`, but instead leave the\n            // previous data in place. In other words, skipping should not mandate that\n            // previously received data is all of a sudden removed. Unfortunately,\n            // changing this is breaking, so we'll have to wait until Apollo Client 4.0\n            // to address this.\n            this.result = this.skipStandbyResult;\n        }\n        else if (this.result === this.ssrDisabledResult ||\n            this.result === this.skipStandbyResult) {\n            this.result = void 0;\n        }\n    };\n    InternalState.prototype.getObsQueryOptions = function () {\n        var toMerge = [];\n        var globalDefaults = this.client.defaultOptions.watchQuery;\n        if (globalDefaults)\n            toMerge.push(globalDefaults);\n        if (this.queryHookOptions.defaultOptions) {\n            toMerge.push(this.queryHookOptions.defaultOptions);\n        }\n        // We use compact rather than mergeOptions for this part of the merge,\n        // because we want watchQueryOptions.variables (if defined) to replace\n        // this.observable.options.variables whole. This replacement allows\n        // removing variables by removing them from the variables input to\n        // useQuery. If the variables were always merged together (rather than\n        // replaced), there would be no way to remove existing variables.\n        // However, the variables from options.defaultOptions and globalDefaults\n        // (if provided) should be merged, to ensure individual defaulted\n        // variables always have values, if not otherwise defined in\n        // observable.options or watchQueryOptions.\n        toMerge.push(compact(this.observable && this.observable.options, this.watchQueryOptions));\n        return toMerge.reduce(mergeOptions);\n    };\n    // A function to massage options before passing them to ObservableQuery.\n    InternalState.prototype.createWatchQueryOptions = function (_a) {\n        var _b;\n        if (_a === void 0) { _a = {}; }\n        var skip = _a.skip, ssr = _a.ssr, onCompleted = _a.onCompleted, onError = _a.onError, defaultOptions = _a.defaultOptions, \n        // The above options are useQuery-specific, so this ...otherOptions spread\n        // makes otherOptions almost a WatchQueryOptions object, except for the\n        // query property that we add below.\n        otherOptions = __rest(_a, [\"skip\", \"ssr\", \"onCompleted\", \"onError\", \"defaultOptions\"]);\n        // This Object.assign is safe because otherOptions is a fresh ...rest object\n        // that did not exist until just now, so modifications are still allowed.\n        var watchQueryOptions = Object.assign(otherOptions, { query: this.query });\n        if (this.renderPromises &&\n            (watchQueryOptions.fetchPolicy === \"network-only\" ||\n                watchQueryOptions.fetchPolicy === \"cache-and-network\")) {\n            // this behavior was added to react-apollo without explanation in this PR\n            // https://github.com/apollographql/react-apollo/pull/1579\n            watchQueryOptions.fetchPolicy = \"cache-first\";\n        }\n        if (!watchQueryOptions.variables) {\n            watchQueryOptions.variables = {};\n        }\n        if (skip) {\n            var _c = watchQueryOptions.fetchPolicy, fetchPolicy = _c === void 0 ? this.getDefaultFetchPolicy() : _c, _d = watchQueryOptions.initialFetchPolicy, initialFetchPolicy = _d === void 0 ? fetchPolicy : _d;\n            // When skipping, we set watchQueryOptions.fetchPolicy initially to\n            // \"standby\", but we also need/want to preserve the initial non-standby\n            // fetchPolicy that would have been used if not skipping.\n            Object.assign(watchQueryOptions, {\n                initialFetchPolicy: initialFetchPolicy,\n                fetchPolicy: \"standby\",\n            });\n        }\n        else if (!watchQueryOptions.fetchPolicy) {\n            watchQueryOptions.fetchPolicy =\n                ((_b = this.observable) === null || _b === void 0 ? void 0 : _b.options.initialFetchPolicy) ||\n                    this.getDefaultFetchPolicy();\n        }\n        return watchQueryOptions;\n    };\n    InternalState.prototype.getDefaultFetchPolicy = function () {\n        var _a, _b;\n        return (((_a = this.queryHookOptions.defaultOptions) === null || _a === void 0 ? void 0 : _a.fetchPolicy) ||\n            ((_b = this.client.defaultOptions.watchQuery) === null || _b === void 0 ? void 0 : _b.fetchPolicy) ||\n            \"cache-first\");\n    };\n    // Defining these methods as no-ops on the prototype allows us to call\n    // state.onCompleted and/or state.onError without worrying about whether a\n    // callback was provided.\n    InternalState.prototype.onCompleted = function (data) { };\n    InternalState.prototype.onError = function (error) { };\n    InternalState.prototype.useObservableQuery = function () {\n        // See if there is an existing observable that was used to fetch the same\n        // data and if so, use it instead since it will contain the proper queryId\n        // to fetch the result set. This is used during SSR.\n        var obsQuery = (this.observable =\n            (this.renderPromises &&\n                this.renderPromises.getSSRObservable(this.watchQueryOptions)) ||\n                this.observable || // Reuse this.observable if possible (and not SSR)\n                this.client.watchQuery(this.getObsQueryOptions()));\n        this.obsQueryFields = React.useMemo(function () { return ({\n            refetch: obsQuery.refetch.bind(obsQuery),\n            reobserve: obsQuery.reobserve.bind(obsQuery),\n            fetchMore: obsQuery.fetchMore.bind(obsQuery),\n            updateQuery: obsQuery.updateQuery.bind(obsQuery),\n            startPolling: obsQuery.startPolling.bind(obsQuery),\n            stopPolling: obsQuery.stopPolling.bind(obsQuery),\n            subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery),\n        }); }, [obsQuery]);\n        var ssrAllowed = !(this.queryHookOptions.ssr === false || this.queryHookOptions.skip);\n        if (this.renderPromises && ssrAllowed) {\n            this.renderPromises.registerSSRObservable(obsQuery);\n            if (obsQuery.getCurrentResult().loading) {\n                // TODO: This is a legacy API which could probably be cleaned up\n                this.renderPromises.addObservableQueryPromise(obsQuery);\n            }\n        }\n        return obsQuery;\n    };\n    InternalState.prototype.setResult = function (nextResult) {\n        var previousResult = this.result;\n        if (previousResult && previousResult.data) {\n            this.previousData = previousResult.data;\n        }\n        this.result = nextResult;\n        // Calling state.setResult always triggers an update, though some call sites\n        // perform additional equality checks before committing to an update.\n        this.forceUpdate();\n        this.handleErrorOrCompleted(nextResult, previousResult);\n    };\n    InternalState.prototype.handleErrorOrCompleted = function (result, previousResult) {\n        var _this = this;\n        if (!result.loading) {\n            var error_1 = this.toApolloError(result);\n            // wait a tick in case we are in the middle of rendering a component\n            Promise.resolve()\n                .then(function () {\n                if (error_1) {\n                    _this.onError(error_1);\n                }\n                else if (result.data &&\n                    (previousResult === null || previousResult === void 0 ? void 0 : previousResult.networkStatus) !== result.networkStatus &&\n                    result.networkStatus === NetworkStatus.ready) {\n                    _this.onCompleted(result.data);\n                }\n            })\n                .catch(function (error) {\n                globalThis.__DEV__ !== false && invariant.warn(error);\n            });\n        }\n    };\n    InternalState.prototype.toApolloError = function (result) {\n        return isNonEmptyArray(result.errors) ?\n            new ApolloError({ graphQLErrors: result.errors })\n            : result.error;\n    };\n    InternalState.prototype.getCurrentResult = function () {\n        // Using this.result as a cache ensures getCurrentResult continues returning\n        // the same (===) result object, unless state.setResult has been called, or\n        // we're doing server rendering and therefore override the result below.\n        if (!this.result) {\n            this.handleErrorOrCompleted((this.result = this.observable.getCurrentResult()));\n        }\n        return this.result;\n    };\n    InternalState.prototype.toQueryResult = function (result) {\n        var queryResult = this.toQueryResultCache.get(result);\n        if (queryResult)\n            return queryResult;\n        var data = result.data, partial = result.partial, resultWithoutPartial = __rest(result, [\"data\", \"partial\"]);\n        this.toQueryResultCache.set(result, (queryResult = __assign(__assign(__assign({ data: data }, resultWithoutPartial), this.obsQueryFields), { client: this.client, observable: this.observable, variables: this.observable.variables, called: !this.queryHookOptions.skip, previousData: this.previousData })));\n        if (!queryResult.error && isNonEmptyArray(result.errors)) {\n            // Until a set naming convention for networkError and graphQLErrors is\n            // decided upon, we map errors (graphQLErrors) to the error options.\n            // TODO: Is it possible for both result.error and result.errors to be\n            // defined here?\n            queryResult.error = new ApolloError({ graphQLErrors: result.errors });\n        }\n        return queryResult;\n    };\n    InternalState.prototype.unsafeHandlePartialRefetch = function (result) {\n        // WARNING: SIDE-EFFECTS IN THE RENDER FUNCTION\n        //\n        // TODO: This code should be removed when the partialRefetch option is\n        // removed. I was unable to get this hook to behave reasonably in certain\n        // edge cases when this block was put in an effect.\n        if (result.partial &&\n            this.queryHookOptions.partialRefetch &&\n            !result.loading &&\n            (!result.data || Object.keys(result.data).length === 0) &&\n            this.observable.options.fetchPolicy !== \"cache-only\") {\n            Object.assign(result, {\n                loading: true,\n                networkStatus: NetworkStatus.refetch,\n            });\n            this.observable.refetch();\n        }\n    };\n    return InternalState;\n}());\n//# sourceMappingURL=useQuery.js.map","import { __assign } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { useInternalState } from \"./useQuery.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\n// The following methods, when called will execute the query, regardless of\n// whether the useLazyQuery execute function was called before.\nvar EAGER_METHODS = [\n    \"refetch\",\n    \"reobserve\",\n    \"fetchMore\",\n    \"updateQuery\",\n    \"startPolling\",\n    \"subscribeToMore\",\n];\n/**\n * A hook for imperatively executing queries in an Apollo application, e.g. in response to user interaction.\n *\n * > Refer to the [Queries - Manual execution with useLazyQuery](https://www.apollographql.com/docs/react/data/queries#manual-execution-with-uselazyquery) section for a more in-depth overview of `useLazyQuery`.\n *\n * @example\n * ```jsx\n * import { gql, useLazyQuery } from \"@apollo/client\";\n *\n * const GET_GREETING = gql`\n *   query GetGreeting($language: String!) {\n *     greeting(language: $language) {\n *       message\n *     }\n *   }\n * `;\n *\n * function Hello() {\n *   const [loadGreeting, { called, loading, data }] = useLazyQuery(\n *     GET_GREETING,\n *     { variables: { language: \"english\" } }\n *   );\n *   if (called && loading) return <p>Loading ...</p>\n *   if (!called) {\n *     return <button onClick={() => loadGreeting()}>Load greeting</button>\n *   }\n *   return <h1>Hello {data.greeting.message}!</h1>;\n * }\n * ```\n * @since 3.0.0\n *\n * @param query - A GraphQL query document parsed into an AST by `gql`.\n * @param options - Default options to control how the query is executed.\n * @returns A tuple in the form of `[execute, result]`\n */\nexport function useLazyQuery(query, options) {\n    var _a;\n    var execOptionsRef = React.useRef();\n    var optionsRef = React.useRef();\n    var queryRef = React.useRef();\n    var merged = mergeOptions(options, execOptionsRef.current || {});\n    var document = (_a = merged === null || merged === void 0 ? void 0 : merged.query) !== null && _a !== void 0 ? _a : query;\n    // Use refs to track options and the used query to ensure the `execute`\n    // function remains referentially stable between renders.\n    optionsRef.current = options;\n    queryRef.current = document;\n    var internalState = useInternalState(useApolloClient(options && options.client), document);\n    var useQueryResult = internalState.useQuery(__assign(__assign({}, merged), { skip: !execOptionsRef.current }));\n    var initialFetchPolicy = useQueryResult.observable.options.initialFetchPolicy ||\n        internalState.getDefaultFetchPolicy();\n    var result = Object.assign(useQueryResult, {\n        called: !!execOptionsRef.current,\n    });\n    // We use useMemo here to make sure the eager methods have a stable identity.\n    var eagerMethods = React.useMemo(function () {\n        var eagerMethods = {};\n        var _loop_1 = function (key) {\n            var method = result[key];\n            eagerMethods[key] = function () {\n                if (!execOptionsRef.current) {\n                    execOptionsRef.current = Object.create(null);\n                    // Only the first time populating execOptionsRef.current matters here.\n                    internalState.forceUpdateState();\n                }\n                // @ts-expect-error this is just too generic to type\n                return method.apply(this, arguments);\n            };\n        };\n        for (var _i = 0, EAGER_METHODS_1 = EAGER_METHODS; _i < EAGER_METHODS_1.length; _i++) {\n            var key = EAGER_METHODS_1[_i];\n            _loop_1(key);\n        }\n        return eagerMethods;\n    }, []);\n    Object.assign(result, eagerMethods);\n    var execute = React.useCallback(function (executeOptions) {\n        execOptionsRef.current =\n            executeOptions ? __assign(__assign({}, executeOptions), { fetchPolicy: executeOptions.fetchPolicy || initialFetchPolicy }) : {\n                fetchPolicy: initialFetchPolicy,\n            };\n        var options = mergeOptions(optionsRef.current, __assign({ query: queryRef.current }, execOptionsRef.current));\n        var promise = internalState\n            .executeQuery(__assign(__assign({}, options), { skip: false }))\n            .then(function (queryResult) { return Object.assign(queryResult, eagerMethods); });\n        // Because the return value of `useLazyQuery` is usually floated, we need\n        // to catch the promise to prevent unhandled rejections.\n        promise.catch(function () { });\n        return promise;\n    }, []);\n    return [execute, result];\n}\n//# sourceMappingURL=useLazyQuery.js.map","import { __assign } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\n/**\n *\n *\n * > Refer to the [Mutations](https://www.apollographql.com/docs/react/data/mutations/) section for a more in-depth overview of `useMutation`.\n *\n * @example\n * ```jsx\n * import { gql, useMutation } from '@apollo/client';\n *\n * const ADD_TODO = gql`\n *   mutation AddTodo($type: String!) {\n *     addTodo(type: $type) {\n *       id\n *       type\n *     }\n *   }\n * `;\n *\n * function AddTodo() {\n *   let input;\n *   const [addTodo, { data }] = useMutation(ADD_TODO);\n *\n *   return (\n *     <div>\n *       <form\n *         onSubmit={e => {\n *           e.preventDefault();\n *           addTodo({ variables: { type: input.value } });\n *           input.value = '';\n *         }}\n *       >\n *         <input\n *           ref={node => {\n *             input = node;\n *           }}\n *         />\n *         <button type=\"submit\">Add Todo</button>\n *       </form>\n *     </div>\n *   );\n * }\n * ```\n * @since 3.0.0\n * @param mutation - A GraphQL mutation document parsed into an AST by `gql`.\n * @param options - Options to control how the mutation is executed.\n * @returns A tuple in the form of `[mutate, result]`\n */\nexport function useMutation(mutation, options) {\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n    verifyDocumentType(mutation, DocumentType.Mutation);\n    var _a = React.useState({\n        called: false,\n        loading: false,\n        client: client,\n    }), result = _a[0], setResult = _a[1];\n    var ref = React.useRef({\n        result: result,\n        mutationId: 0,\n        isMounted: true,\n        client: client,\n        mutation: mutation,\n        options: options,\n    });\n    // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n    // higher-order components.\n    {\n        Object.assign(ref.current, { client: client, options: options, mutation: mutation });\n    }\n    var execute = React.useCallback(function (executeOptions) {\n        if (executeOptions === void 0) { executeOptions = {}; }\n        var _a = ref.current, options = _a.options, mutation = _a.mutation;\n        var baseOptions = __assign(__assign({}, options), { mutation: mutation });\n        var client = executeOptions.client || ref.current.client;\n        if (!ref.current.result.loading &&\n            !baseOptions.ignoreResults &&\n            ref.current.isMounted) {\n            setResult((ref.current.result = {\n                loading: true,\n                error: void 0,\n                data: void 0,\n                called: true,\n                client: client,\n            }));\n        }\n        var mutationId = ++ref.current.mutationId;\n        var clientOptions = mergeOptions(baseOptions, executeOptions);\n        return client\n            .mutate(clientOptions)\n            .then(function (response) {\n            var _a, _b;\n            var data = response.data, errors = response.errors;\n            var error = errors && errors.length > 0 ?\n                new ApolloError({ graphQLErrors: errors })\n                : void 0;\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n            if (error && onError) {\n                onError(error, clientOptions);\n            }\n            if (mutationId === ref.current.mutationId &&\n                !clientOptions.ignoreResults) {\n                var result_1 = {\n                    called: true,\n                    loading: false,\n                    data: data,\n                    error: error,\n                    client: client,\n                };\n                if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n                    setResult((ref.current.result = result_1));\n                }\n            }\n            var onCompleted = executeOptions.onCompleted || ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onCompleted);\n            if (!error) {\n                onCompleted === null || onCompleted === void 0 ? void 0 : onCompleted(response.data, clientOptions);\n            }\n            return response;\n        })\n            .catch(function (error) {\n            var _a;\n            if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n                var result_2 = {\n                    loading: false,\n                    error: error,\n                    data: void 0,\n                    called: true,\n                    client: client,\n                };\n                if (!equal(ref.current.result, result_2)) {\n                    setResult((ref.current.result = result_2));\n                }\n            }\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n            if (onError) {\n                onError(error, clientOptions);\n                // TODO(brian): why are we returning this here???\n                return { data: void 0, errors: error };\n            }\n            throw error;\n        });\n    }, []);\n    var reset = React.useCallback(function () {\n        if (ref.current.isMounted) {\n            var result_3 = { called: false, loading: false, client: client };\n            Object.assign(ref.current, { mutationId: 0, result: result_3 });\n            setResult(result_3);\n        }\n    }, []);\n    React.useEffect(function () {\n        ref.current.isMounted = true;\n        return function () {\n            ref.current.isMounted = false;\n        };\n    }, []);\n    return [execute, __assign({ reset: reset }, result)];\n}\n//# sourceMappingURL=useMutation.js.map","import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"rehackt\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\n/**\n * > Refer to the [Subscriptions](https://www.apollographql.com/docs/react/data/subscriptions/) section for a more in-depth overview of `useSubscription`.\n *\n * @example\n * ```jsx\n * const COMMENTS_SUBSCRIPTION = gql`\n *   subscription OnCommentAdded($repoFullName: String!) {\n *     commentAdded(repoFullName: $repoFullName) {\n *       id\n *       content\n *     }\n *   }\n * `;\n *\n * function DontReadTheComments({ repoFullName }) {\n *   const {\n *     data: { commentAdded },\n *     loading,\n *   } = useSubscription(COMMENTS_SUBSCRIPTION, { variables: { repoFullName } });\n *   return <h4>New comment: {!loading && commentAdded.content}</h4>;\n * }\n * ```\n * @remarks\n * #### Subscriptions and React 18 Automatic Batching\n *\n * With React 18's [automatic batching](https://react.dev/blog/2022/03/29/react-v18#new-feature-automatic-batching), multiple state updates may be grouped into a single re-render for better performance.\n *\n * If your subscription API sends multiple messages at the same time or in very fast succession (within fractions of a millisecond), it is likely that only the last message received in that narrow time frame will result in a re-render.\n *\n * Consider the following component:\n *\n * ```jsx\n * export function Subscriptions() {\n *   const { data, error, loading } = useSubscription(query);\n *   const [accumulatedData, setAccumulatedData] = useState([]);\n *\n *   useEffect(() => {\n *     setAccumulatedData((prev) => [...prev, data]);\n *   }, [data]);\n *\n *   return (\n *     <>\n *       {loading && <p>Loading...</p>}\n *       {JSON.stringify(accumulatedData, undefined, 2)}\n *     </>\n *   );\n * }\n * ```\n *\n * If your subscription back-end emits two messages with the same timestamp, only the last message received by Apollo Client will be rendered. This is because React 18 will batch these two state updates into a single re-render.\n *\n * Since the component above is using `useEffect` to push `data` into a piece of local state on each `Subscriptions` re-render, the first message will never be added to the `accumulatedData` array since its render was skipped.\n *\n * Instead of using `useEffect` here, we can re-write this component to use the `onData` callback function accepted in `useSubscription`'s `options` object:\n *\n * ```jsx\n * export function Subscriptions() {\n *   const [accumulatedData, setAccumulatedData] = useState([]);\n *   const { data, error, loading } = useSubscription(\n *     query,\n *     {\n *       onData({ data }) {\n *         setAccumulatedData((prev) => [...prev, data])\n *       }\n *     }\n *   );\n *\n *   return (\n *     <>\n *       {loading && <p>Loading...</p>}\n *       {JSON.stringify(accumulatedData, undefined, 2)}\n *     </>\n *   );\n * }\n * ```\n *\n * > ⚠️ **Note:** The `useSubscription` option `onData` is available in Apollo Client >= 3.7. In previous versions, the equivalent option is named `onSubscriptionData`.\n *\n * Now, the first message will be added to the `accumulatedData` array since `onData` is called _before_ the component re-renders. React 18 automatic batching is still in effect and results in a single re-render, but with `onData` we can guarantee each message received after the component mounts is added to `accumulatedData`.\n *\n * @since 3.0.0\n * @param subscription - A GraphQL subscription document parsed into an AST by `gql`.\n * @param options - Options to control how the subscription is executed.\n * @returns Query result object\n */\nexport function useSubscription(subscription, options) {\n    var hasIssuedDeprecationWarningRef = React.useRef(false);\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n    verifyDocumentType(subscription, DocumentType.Subscription);\n    var _a = React.useState({\n        loading: !(options === null || options === void 0 ? void 0 : options.skip),\n        error: void 0,\n        data: void 0,\n        variables: options === null || options === void 0 ? void 0 : options.variables,\n    }), result = _a[0], setResult = _a[1];\n    if (!hasIssuedDeprecationWarningRef.current) {\n        hasIssuedDeprecationWarningRef.current = true;\n        if (options === null || options === void 0 ? void 0 : options.onSubscriptionData) {\n            globalThis.__DEV__ !== false && invariant.warn(options.onData ? 52 : 53);\n        }\n        if (options === null || options === void 0 ? void 0 : options.onSubscriptionComplete) {\n            globalThis.__DEV__ !== false && invariant.warn(options.onComplete ? 54 : 55);\n        }\n    }\n    var _b = React.useState(function () {\n        if (options === null || options === void 0 ? void 0 : options.skip) {\n            return null;\n        }\n        return client.subscribe({\n            query: subscription,\n            variables: options === null || options === void 0 ? void 0 : options.variables,\n            fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n            context: options === null || options === void 0 ? void 0 : options.context,\n        });\n    }), observable = _b[0], setObservable = _b[1];\n    var canResetObservableRef = React.useRef(false);\n    React.useEffect(function () {\n        return function () {\n            canResetObservableRef.current = true;\n        };\n    }, []);\n    var ref = React.useRef({ client: client, subscription: subscription, options: options });\n    React.useEffect(function () {\n        var _a, _b, _c, _d;\n        var shouldResubscribe = options === null || options === void 0 ? void 0 : options.shouldResubscribe;\n        if (typeof shouldResubscribe === \"function\") {\n            shouldResubscribe = !!shouldResubscribe(options);\n        }\n        if (options === null || options === void 0 ? void 0 : options.skip) {\n            if (!(options === null || options === void 0 ? void 0 : options.skip) !== !((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.skip) ||\n                canResetObservableRef.current) {\n                setResult({\n                    loading: false,\n                    data: void 0,\n                    error: void 0,\n                    variables: options === null || options === void 0 ? void 0 : options.variables,\n                });\n                setObservable(null);\n                canResetObservableRef.current = false;\n            }\n        }\n        else if ((shouldResubscribe !== false &&\n            (client !== ref.current.client ||\n                subscription !== ref.current.subscription ||\n                (options === null || options === void 0 ? void 0 : options.fetchPolicy) !== ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.fetchPolicy) ||\n                !(options === null || options === void 0 ? void 0 : options.skip) !== !((_c = ref.current.options) === null || _c === void 0 ? void 0 : _c.skip) ||\n                !equal(options === null || options === void 0 ? void 0 : options.variables, (_d = ref.current.options) === null || _d === void 0 ? void 0 : _d.variables))) ||\n            canResetObservableRef.current) {\n            setResult({\n                loading: true,\n                data: void 0,\n                error: void 0,\n                variables: options === null || options === void 0 ? void 0 : options.variables,\n            });\n            setObservable(client.subscribe({\n                query: subscription,\n                variables: options === null || options === void 0 ? void 0 : options.variables,\n                fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n                context: options === null || options === void 0 ? void 0 : options.context,\n            }));\n            canResetObservableRef.current = false;\n        }\n        Object.assign(ref.current, { client: client, subscription: subscription, options: options });\n    }, [client, subscription, options, canResetObservableRef.current]);\n    React.useEffect(function () {\n        if (!observable) {\n            return;\n        }\n        var subscriptionStopped = false;\n        var subscription = observable.subscribe({\n            next: function (fetchResult) {\n                var _a, _b;\n                if (subscriptionStopped) {\n                    return;\n                }\n                var result = {\n                    loading: false,\n                    // TODO: fetchResult.data can be null but SubscriptionResult.data\n                    // expects TData | undefined only\n                    data: fetchResult.data,\n                    error: void 0,\n                    variables: options === null || options === void 0 ? void 0 : options.variables,\n                };\n                setResult(result);\n                if ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onData) {\n                    ref.current.options.onData({\n                        client: client,\n                        data: result,\n                    });\n                }\n                else if ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onSubscriptionData) {\n                    ref.current.options.onSubscriptionData({\n                        client: client,\n                        subscriptionData: result,\n                    });\n                }\n            },\n            error: function (error) {\n                var _a, _b;\n                if (!subscriptionStopped) {\n                    setResult({\n                        loading: false,\n                        data: void 0,\n                        error: error,\n                        variables: options === null || options === void 0 ? void 0 : options.variables,\n                    });\n                    (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError) === null || _b === void 0 ? void 0 : _b.call(_a, error);\n                }\n            },\n            complete: function () {\n                var _a, _b;\n                if (!subscriptionStopped) {\n                    if ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onComplete) {\n                        ref.current.options.onComplete();\n                    }\n                    else if ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onSubscriptionComplete) {\n                        ref.current.options.onSubscriptionComplete();\n                    }\n                }\n            },\n        });\n        return function () {\n            // immediately stop receiving subscription values, but do not unsubscribe\n            // until after a short delay in case another useSubscription hook is\n            // reusing the same underlying observable and is about to subscribe\n            subscriptionStopped = true;\n            setTimeout(function () {\n                subscription.unsubscribe();\n            });\n        };\n    }, [observable]);\n    return result;\n}\n//# sourceMappingURL=useSubscription.js.map","import * as React from \"rehackt\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\n/**\n * Reads the value of a [reactive variable](https://www.apollographql.com/docs/react/local-state/reactive-variables/) and re-renders the containing component whenever that variable's value changes. This enables a reactive variable to trigger changes _without_ relying on the `useQuery` hook.\n *\n * @example\n * ```jsx\n * import { makeVar, useReactiveVar } from \"@apollo/client\";\n * export const cartItemsVar = makeVar([]);\n *\n * export function Cart() {\n *   const cartItems = useReactiveVar(cartItemsVar);\n *   // ...\n * }\n * ```\n * @since 3.2.0\n * @param rv - A reactive variable.\n * @returns The current value of the reactive variable.\n */\nexport function useReactiveVar(rv) {\n    return useSyncExternalStore(React.useCallback(function (update) {\n        // By reusing the same onNext function in the nested call to\n        // rv.onNextChange(onNext), we can keep using the initial clean-up function\n        // returned by rv.onNextChange(function onNext(v){...}), without having to\n        // register the new clean-up function (returned by the nested\n        // rv.onNextChange(onNext)) with yet another callback.\n        return rv.onNextChange(function onNext() {\n            update();\n            rv.onNextChange(onNext);\n        });\n    }, [rv]), rv, rv);\n}\n//# sourceMappingURL=useReactiveVar.js.map","import { __assign, __rest } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { mergeDeepArray } from \"../../utilities/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { useDeepMemo, useLazyRef, wrapHook } from \"./internal/index.js\";\nimport equal from \"@wry/equality\";\nexport function useFragment(options) {\n    return wrapHook(\"useFragment\", _useFragment, useApolloClient(options.client))(options);\n}\nfunction _useFragment(options) {\n    var cache = useApolloClient(options.client).cache;\n    var diffOptions = useDeepMemo(function () {\n        var fragment = options.fragment, fragmentName = options.fragmentName, from = options.from, _a = options.optimistic, optimistic = _a === void 0 ? true : _a, rest = __rest(options, [\"fragment\", \"fragmentName\", \"from\", \"optimistic\"]);\n        return __assign(__assign({}, rest), { returnPartialData: true, id: typeof from === \"string\" ? from : cache.identify(from), query: cache[\"getFragmentDoc\"](fragment, fragmentName), optimistic: optimistic });\n    }, [options]);\n    var resultRef = useLazyRef(function () {\n        return diffToResult(cache.diff(diffOptions));\n    });\n    var stableOptions = useDeepMemo(function () { return options; }, [options]);\n    // Since .next is async, we need to make sure that we\n    // get the correct diff on the next render given new diffOptions\n    React.useMemo(function () {\n        resultRef.current = diffToResult(cache.diff(diffOptions));\n    }, [diffOptions, cache]);\n    // Used for both getSnapshot and getServerSnapshot\n    var getSnapshot = React.useCallback(function () { return resultRef.current; }, []);\n    return useSyncExternalStore(React.useCallback(function (forceUpdate) {\n        var lastTimeout = 0;\n        var subscription = cache.watchFragment(stableOptions).subscribe({\n            next: function (result) {\n                if (equal(result, resultRef.current))\n                    return;\n                resultRef.current = result;\n                // If we get another update before we've re-rendered, bail out of\n                // the update and try again. This ensures that the relative timing\n                // between useQuery and useFragment stays roughly the same as\n                // fixed in https://github.com/apollographql/apollo-client/pull/11083\n                clearTimeout(lastTimeout);\n                lastTimeout = setTimeout(forceUpdate);\n            },\n        });\n        return function () {\n            subscription.unsubscribe();\n            clearTimeout(lastTimeout);\n        };\n    }, [cache, stableOptions]), getSnapshot, getSnapshot);\n}\nfunction diffToResult(diff) {\n    var result = {\n        data: diff.result,\n        complete: !!diff.complete,\n    };\n    if (diff.missing) {\n        result.missing = mergeDeepArray(diff.missing.map(function (error) { return error.missing; }));\n    }\n    return result;\n}\n//# sourceMappingURL=useFragment.js.map","export var skipToken = Symbol.for(\"apollo.skipToken\");\n//# sourceMappingURL=constants.js.map","import { __assign, __spreadArray } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport { ApolloError, NetworkStatus } from \"../../core/index.js\";\nimport { isNonEmptyArray } from \"../../utilities/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { __use, useDeepMemo, wrapHook } from \"./internal/index.js\";\nimport { getSuspenseCache } from \"../internal/index.js\";\nimport { canonicalStringify } from \"../../cache/index.js\";\nimport { skipToken } from \"./constants.js\";\nexport function useSuspenseQuery(query, options) {\n    if (options === void 0) { options = Object.create(null); }\n    return wrapHook(\"useSuspenseQuery\", _useSuspenseQuery, useApolloClient(typeof options === \"object\" ? options.client : undefined))(query, options);\n}\nfunction _useSuspenseQuery(query, options) {\n    var client = useApolloClient(options.client);\n    var suspenseCache = getSuspenseCache(client);\n    var watchQueryOptions = useWatchQueryOptions({\n        client: client,\n        query: query,\n        options: options,\n    });\n    var fetchPolicy = watchQueryOptions.fetchPolicy, variables = watchQueryOptions.variables;\n    var _a = options.queryKey, queryKey = _a === void 0 ? [] : _a;\n    var cacheKey = __spreadArray([\n        query,\n        canonicalStringify(variables)\n    ], [].concat(queryKey), true);\n    var queryRef = suspenseCache.getQueryRef(cacheKey, function () {\n        return client.watchQuery(watchQueryOptions);\n    });\n    var _b = React.useState([queryRef.key, queryRef.promise]), current = _b[0], setPromise = _b[1];\n    // This saves us a re-execution of the render function when a variable changed.\n    if (current[0] !== queryRef.key) {\n        current[0] = queryRef.key;\n        current[1] = queryRef.promise;\n    }\n    var promise = current[1];\n    if (queryRef.didChangeOptions(watchQueryOptions)) {\n        current[1] = promise = queryRef.applyOptions(watchQueryOptions);\n    }\n    React.useEffect(function () {\n        var dispose = queryRef.retain();\n        var removeListener = queryRef.listen(function (promise) {\n            setPromise([queryRef.key, promise]);\n        });\n        return function () {\n            removeListener();\n            dispose();\n        };\n    }, [queryRef]);\n    var skipResult = React.useMemo(function () {\n        var error = toApolloError(queryRef.result);\n        return {\n            loading: false,\n            data: queryRef.result.data,\n            networkStatus: error ? NetworkStatus.error : NetworkStatus.ready,\n            error: error,\n        };\n    }, [queryRef.result]);\n    var result = fetchPolicy === \"standby\" ? skipResult : __use(promise);\n    var fetchMore = React.useCallback((function (options) {\n        var promise = queryRef.fetchMore(options);\n        setPromise([queryRef.key, queryRef.promise]);\n        return promise;\n    }), [queryRef]);\n    var refetch = React.useCallback(function (variables) {\n        var promise = queryRef.refetch(variables);\n        setPromise([queryRef.key, queryRef.promise]);\n        return promise;\n    }, [queryRef]);\n    var subscribeToMore = React.useCallback(function (options) { return queryRef.observable.subscribeToMore(options); }, [queryRef]);\n    return React.useMemo(function () {\n        return {\n            client: client,\n            data: result.data,\n            error: toApolloError(result),\n            networkStatus: result.networkStatus,\n            fetchMore: fetchMore,\n            refetch: refetch,\n            subscribeToMore: subscribeToMore,\n        };\n    }, [client, fetchMore, refetch, result, subscribeToMore]);\n}\nfunction validateOptions(options) {\n    var query = options.query, fetchPolicy = options.fetchPolicy, returnPartialData = options.returnPartialData;\n    verifyDocumentType(query, DocumentType.Query);\n    validateFetchPolicy(fetchPolicy);\n    validatePartialDataReturn(fetchPolicy, returnPartialData);\n}\nfunction validateFetchPolicy(fetchPolicy) {\n    if (fetchPolicy === void 0) { fetchPolicy = \"cache-first\"; }\n    var supportedFetchPolicies = [\n        \"cache-first\",\n        \"network-only\",\n        \"no-cache\",\n        \"cache-and-network\",\n    ];\n    invariant(supportedFetchPolicies.includes(fetchPolicy), 56, fetchPolicy);\n}\nfunction validatePartialDataReturn(fetchPolicy, returnPartialData) {\n    if (fetchPolicy === \"no-cache\" && returnPartialData) {\n        globalThis.__DEV__ !== false && invariant.warn(57);\n    }\n}\nexport function toApolloError(result) {\n    return isNonEmptyArray(result.errors) ?\n        new ApolloError({ graphQLErrors: result.errors })\n        : result.error;\n}\nexport function useWatchQueryOptions(_a) {\n    var client = _a.client, query = _a.query, options = _a.options;\n    return useDeepMemo(function () {\n        var _a;\n        if (options === skipToken) {\n            return { query: query, fetchPolicy: \"standby\" };\n        }\n        var fetchPolicy = options.fetchPolicy ||\n            ((_a = client.defaultOptions.watchQuery) === null || _a === void 0 ? void 0 : _a.fetchPolicy) ||\n            \"cache-first\";\n        var watchQueryOptions = __assign(__assign({}, options), { fetchPolicy: fetchPolicy, query: query, notifyOnNetworkStatusChange: false, nextFetchPolicy: void 0 });\n        if (globalThis.__DEV__ !== false) {\n            validateOptions(watchQueryOptions);\n        }\n        // Assign the updated fetch policy after our validation since `standby` is\n        // not a supported fetch policy on its own without the use of `skip`.\n        if (options.skip) {\n            watchQueryOptions.fetchPolicy = \"standby\";\n        }\n        return watchQueryOptions;\n    }, [client, options, query]);\n}\n//# sourceMappingURL=useSuspenseQuery.js.map","import { __spreadArray } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { getSuspenseCache, unwrapQueryRef, updateWrappedQueryRef, wrapQueryRef, } from \"../internal/index.js\";\nimport { wrapHook } from \"./internal/index.js\";\nimport { useWatchQueryOptions } from \"./useSuspenseQuery.js\";\nimport { canonicalStringify } from \"../../cache/index.js\";\nexport function useBackgroundQuery(query, options) {\n    if (options === void 0) { options = Object.create(null); }\n    return wrapHook(\"useBackgroundQuery\", _useBackgroundQuery, useApolloClient(typeof options === \"object\" ? options.client : undefined))(query, options);\n}\nfunction _useBackgroundQuery(query, options) {\n    var client = useApolloClient(options.client);\n    var suspenseCache = getSuspenseCache(client);\n    var watchQueryOptions = useWatchQueryOptions({ client: client, query: query, options: options });\n    var fetchPolicy = watchQueryOptions.fetchPolicy, variables = watchQueryOptions.variables;\n    var _a = options.queryKey, queryKey = _a === void 0 ? [] : _a;\n    // This ref tracks the first time query execution is enabled to determine\n    // whether to return a query ref or `undefined`. When initialized\n    // in a skipped state (either via `skip: true` or `skipToken`) we return\n    // `undefined` for the `queryRef` until the query has been enabled. Once\n    // enabled, a query ref is always returned regardless of whether the query is\n    // skipped again later.\n    var didFetchResult = React.useRef(fetchPolicy !== \"standby\");\n    didFetchResult.current || (didFetchResult.current = fetchPolicy !== \"standby\");\n    var cacheKey = __spreadArray([\n        query,\n        canonicalStringify(variables)\n    ], [].concat(queryKey), true);\n    var queryRef = suspenseCache.getQueryRef(cacheKey, function () {\n        return client.watchQuery(watchQueryOptions);\n    });\n    var _b = React.useState(wrapQueryRef(queryRef)), wrappedQueryRef = _b[0], setWrappedQueryRef = _b[1];\n    if (unwrapQueryRef(wrappedQueryRef) !== queryRef) {\n        setWrappedQueryRef(wrapQueryRef(queryRef));\n    }\n    if (queryRef.didChangeOptions(watchQueryOptions)) {\n        var promise = queryRef.applyOptions(watchQueryOptions);\n        updateWrappedQueryRef(wrappedQueryRef, promise);\n    }\n    // This prevents issues where rerendering useBackgroundQuery after the\n    // queryRef has been disposed would cause the hook to return a new queryRef\n    // instance since disposal also removes it from the suspense cache. We add\n    // the queryRef back in the suspense cache so that the next render will reuse\n    // this queryRef rather than initializing a new instance.\n    React.useEffect(function () {\n        // Since the queryRef is disposed async via `setTimeout`, we have to wait a\n        // tick before checking it and adding back to the suspense cache.\n        var id = setTimeout(function () {\n            if (queryRef.disposed) {\n                suspenseCache.add(cacheKey, queryRef);\n            }\n        });\n        return function () { return clearTimeout(id); };\n        // Omitting the deps is intentional. This avoids stale closures and the\n        // conditional ensures we aren't running the logic on each render.\n    });\n    var fetchMore = React.useCallback(function (options) {\n        var promise = queryRef.fetchMore(options);\n        setWrappedQueryRef(wrapQueryRef(queryRef));\n        return promise;\n    }, [queryRef]);\n    var refetch = React.useCallback(function (variables) {\n        var promise = queryRef.refetch(variables);\n        setWrappedQueryRef(wrapQueryRef(queryRef));\n        return promise;\n    }, [queryRef]);\n    React.useEffect(function () { return queryRef.softRetain(); }, [queryRef]);\n    return [\n        didFetchResult.current ? wrappedQueryRef : void 0,\n        { fetchMore: fetchMore, refetch: refetch },\n    ];\n}\n//# sourceMappingURL=useBackgroundQuery.js.map","import { __assign, __spreadArray } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { assertWrappedQueryRef, getSuspenseCache, unwrapQueryRef, updateWrappedQueryRef, wrapQueryRef, } from \"../internal/index.js\";\nimport { useRenderGuard } from \"./internal/index.js\";\nimport { useWatchQueryOptions } from \"./useSuspenseQuery.js\";\nimport { canonicalStringify } from \"../../cache/index.js\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nexport function useLoadableQuery(query, options) {\n    if (options === void 0) { options = Object.create(null); }\n    var client = useApolloClient(options.client);\n    var suspenseCache = getSuspenseCache(client);\n    var watchQueryOptions = useWatchQueryOptions({ client: client, query: query, options: options });\n    var _a = options.queryKey, queryKey = _a === void 0 ? [] : _a;\n    var _b = React.useState(null), queryRef = _b[0], setQueryRef = _b[1];\n    assertWrappedQueryRef(queryRef);\n    var internalQueryRef = queryRef && unwrapQueryRef(queryRef);\n    if (queryRef && (internalQueryRef === null || internalQueryRef === void 0 ? void 0 : internalQueryRef.didChangeOptions(watchQueryOptions))) {\n        var promise = internalQueryRef.applyOptions(watchQueryOptions);\n        updateWrappedQueryRef(queryRef, promise);\n    }\n    var calledDuringRender = useRenderGuard();\n    var fetchMore = React.useCallback(function (options) {\n        if (!internalQueryRef) {\n            throw new Error(\"The query has not been loaded. Please load the query.\");\n        }\n        var promise = internalQueryRef.fetchMore(options);\n        setQueryRef(wrapQueryRef(internalQueryRef));\n        return promise;\n    }, [internalQueryRef]);\n    var refetch = React.useCallback(function (options) {\n        if (!internalQueryRef) {\n            throw new Error(\"The query has not been loaded. Please load the query.\");\n        }\n        var promise = internalQueryRef.refetch(options);\n        setQueryRef(wrapQueryRef(internalQueryRef));\n        return promise;\n    }, [internalQueryRef]);\n    var loadQuery = React.useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        invariant(!calledDuringRender(), 50);\n        var variables = args[0];\n        var cacheKey = __spreadArray([\n            query,\n            canonicalStringify(variables)\n        ], [].concat(queryKey), true);\n        var queryRef = suspenseCache.getQueryRef(cacheKey, function () {\n            return client.watchQuery(__assign(__assign({}, watchQueryOptions), { variables: variables }));\n        });\n        setQueryRef(wrapQueryRef(queryRef));\n    }, [query, queryKey, suspenseCache, watchQueryOptions, calledDuringRender]);\n    var reset = React.useCallback(function () {\n        setQueryRef(null);\n    }, [queryRef]);\n    return [loadQuery, queryRef, { fetchMore: fetchMore, refetch: refetch, reset: reset }];\n}\n//# sourceMappingURL=useLoadableQuery.js.map","import * as React from \"rehackt\";\nimport { assertWrappedQueryRef, getWrappedPromise, unwrapQueryRef, updateWrappedQueryRef, wrapQueryRef, } from \"../internal/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { wrapHook } from \"./internal/index.js\";\n/**\n * A React hook that returns a `refetch` and `fetchMore` function for a given\n * `queryRef`.\n *\n * This is useful to get access to handlers for a `queryRef` that was created by\n * `createQueryPreloader` or when the handlers for a `queryRef` produced in\n * a different component are inaccessible.\n *\n * @example\n * ```tsx\n * const MyComponent({ queryRef }) {\n *   const { refetch, fetchMore } = useQueryRefHandlers(queryRef);\n *\n *   // ...\n * }\n * ```\n * @since 3.9.0\n * @param queryRef - A `QueryRef` returned from `useBackgroundQuery`, `useLoadableQuery`, or `createQueryPreloader`.\n */\nexport function useQueryRefHandlers(queryRef) {\n    var unwrapped = unwrapQueryRef(queryRef);\n    return wrapHook(\"useQueryRefHandlers\", _useQueryRefHandlers, unwrapped ?\n        unwrapped[\"observable\"]\n        // in the case of a \"transported\" queryRef object, we need to use the\n        // client that's available to us at the current position in the React tree\n        // that ApolloClient will then have the job to recreate a real queryRef from\n        // the transported object\n        : useApolloClient())(queryRef);\n}\nfunction _useQueryRefHandlers(queryRef) {\n    assertWrappedQueryRef(queryRef);\n    var _a = React.useState(queryRef), previousQueryRef = _a[0], setPreviousQueryRef = _a[1];\n    var _b = React.useState(queryRef), wrappedQueryRef = _b[0], setWrappedQueryRef = _b[1];\n    var internalQueryRef = unwrapQueryRef(queryRef);\n    // To ensure we can support React transitions, this hook needs to manage the\n    // queryRef state and apply React's state value immediately to the existing\n    // queryRef since this hook doesn't return the queryRef directly\n    if (previousQueryRef !== queryRef) {\n        setPreviousQueryRef(queryRef);\n        setWrappedQueryRef(queryRef);\n    }\n    else {\n        updateWrappedQueryRef(queryRef, getWrappedPromise(wrappedQueryRef));\n    }\n    var refetch = React.useCallback(function (variables) {\n        var promise = internalQueryRef.refetch(variables);\n        setWrappedQueryRef(wrapQueryRef(internalQueryRef));\n        return promise;\n    }, [internalQueryRef]);\n    var fetchMore = React.useCallback(function (options) {\n        var promise = internalQueryRef.fetchMore(options);\n        setWrappedQueryRef(wrapQueryRef(internalQueryRef));\n        return promise;\n    }, [internalQueryRef]);\n    return { refetch: refetch, fetchMore: fetchMore };\n}\n//# sourceMappingURL=useQueryRefHandlers.js.map","import * as React from \"rehackt\";\nimport { assertWrappedQueryRef, getWrappedPromise, unwrapQueryRef, updateWrappedQueryRef, } from \"../internal/index.js\";\nimport { __use, wrapHook } from \"./internal/index.js\";\nimport { toApolloError } from \"./useSuspenseQuery.js\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useReadQuery(queryRef) {\n    var unwrapped = unwrapQueryRef(queryRef);\n    return wrapHook(\"useReadQuery\", _useReadQuery, unwrapped ?\n        unwrapped[\"observable\"]\n        // in the case of a \"transported\" queryRef object, we need to use the\n        // client that's available to us at the current position in the React tree\n        // that ApolloClient will then have the job to recreate a real queryRef from\n        // the transported object\n        : useApolloClient())(queryRef);\n}\nfunction _useReadQuery(queryRef) {\n    assertWrappedQueryRef(queryRef);\n    var internalQueryRef = React.useMemo(function () { return unwrapQueryRef(queryRef); }, [queryRef]);\n    var getPromise = React.useCallback(function () { return getWrappedPromise(queryRef); }, [queryRef]);\n    if (internalQueryRef.disposed) {\n        internalQueryRef.reinitialize();\n        updateWrappedQueryRef(queryRef, internalQueryRef.promise);\n    }\n    React.useEffect(function () { return internalQueryRef.retain(); }, [internalQueryRef]);\n    var promise = useSyncExternalStore(React.useCallback(function (forceUpdate) {\n        return internalQueryRef.listen(function (promise) {\n            updateWrappedQueryRef(queryRef, promise);\n            forceUpdate();\n        });\n    }, [internalQueryRef]), getPromise, getPromise);\n    var result = __use(promise);\n    return React.useMemo(function () {\n        return {\n            data: result.data,\n            networkStatus: result.networkStatus,\n            error: toApolloError(result),\n        };\n    }, [result]);\n}\n//# sourceMappingURL=useReadQuery.js.map"],"names":["context","React","getApolloContext","invariant","realHook","canUseLayoutEffect","equal","wrapPromiseWithState","maybeDeepFreeze","NetworkStatus","canUseWeakMap","verifyDocumentType","DocumentType","compact","mergeOptions","__rest","isNonEmptyArray","ApolloError","__assign","errors","mergeDeepArray","getSuspenseCache","__spreadArray","canonicalStringify","wrapQueryRef","unwrapQueryRef","updateWrappedQueryRef","assertWrappedQueryRef","getWrappedPromise"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBO,SAAS,eAAe,CAAC,QAAQ,EAAE;AAC1C,IAAI,IAAIA,SAAO,GAAGC,gBAAK,CAAC,UAAU,CAACC,wBAAgB,EAAE,CAAC,CAAC;AACvD,IAAI,IAAI,MAAM,GAAG,QAAQ,IAAIF,SAAO,CAAC,MAAM,CAAC;AAC5C,IAAIG,iBAAS,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAC5B,IAAI,OAAO,MAAM,CAAC;AAClB;;ACpBA,IAAI,0BAA0B,GAAG,KAAK,CAAC;AAIvC,IAAI,OAAO,GAAG,sBAAsB,CAAC;AACrC,IAAIC,UAAQ,GAAGH,gBAAK,CAAC,OAAO,CAAC,CAAC;AAIvB,IAAI,oBAAoB,GAAGG,UAAQ;AAC1C,KAAK,UAAU,SAAS,EAAE,WAAW,EAAE,iBAAiB,EAAE;AAK1D,QAAQ,IAAI,KAAK,GAAG,WAAW,EAAE,CAAC;AAClC,QAAQ;AAER,QAAQ,UAAU,CAAC,OAAO,KAAK,KAAK;AACpC,YAAY,CAAC,0BAA0B;AAGvC,YAAY,KAAK,KAAK,WAAW,EAAE,EAAE;AACrC,YAAY,0BAA0B,GAAG,IAAI,CAAC;AAE9C,YAAY,UAAU,CAAC,OAAO,KAAK,KAAK,IAAID,iBAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAChE,SAAS;AAeT,QAAQ,IAAI,EAAE,GAAGF,gBAAK,CAAC,QAAQ,CAAC;AAChC,YAAY,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE;AAC5D,SAAS,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAInD,QAAQ,IAAII,4BAAkB,EAAE;AAKhC,YAAYJ,gBAAK,CAAC,eAAe,CAAC,YAAY;AAC9C,gBAAgB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;AAKhF,gBAAgB,IAAI,sBAAsB,CAAC,IAAI,CAAC,EAAE;AAElD,oBAAoB,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AAChD,iBAAiB;AACjB,aAAa,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC;AAChD,SAAS;AACT,aAAa;AACb,YAAY,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;AAC5E,SAAS;AACT,QAAQA,gBAAK,CAAC,SAAS,CAAC,YAAY;AAGpC,YAAY,IAAI,sBAAsB,CAAC,IAAI,CAAC,EAAE;AAE9C,gBAAgB,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AAC5C,aAAa;AAEb,YAAY,OAAO,SAAS,CAAC,SAAS,iBAAiB,GAAG;AAO1D,gBAAgB,IAAI,sBAAsB,CAAC,IAAI,CAAC,EAAE;AAElD,oBAAoB,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AAChD,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AACxB,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK,CAAC,CAAC;AACP,SAAS,sBAAsB,CAAC,EAAE,EAAE;AACpC,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC;AACvD,IAAI,IAAI;AACR,QAAQ,OAAO,KAAK,KAAK,WAAW,EAAE,CAAC;AACvC,KAAK;AACL,IAAI,OAAO,EAAE,EAAE;AACf,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;;ACnGO,SAAS,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE;AAC1C,IAAI,IAAI,GAAG,GAAGA,gBAAK,CAAC,MAAM,EAAE,CAAC;AAC7B,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,CAACK,WAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;AACxD,QAAQ,GAAG,CAAC,OAAO,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AACtD,KAAK;AACL,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;AAC7B;;ACPA,SAAS,mBAAmB,GAAG;AAC/B,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC;AACf,IAAI,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE,GAAGL,gBAAK,CAAC,kDAAkD,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,sBAAsB,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC;AACjM,CAAC;AACD,IAAI,gBAAgB,GAAG,IAAI,CAAC;AAKrB,SAAS,cAAc,GAAG;AACjC,IAAI,gBAAgB,GAAG,mBAAmB,EAAE,CAAC;AAC7C,IAAI,OAAOA,gBAAK,CAAC,WAAW,CAAC,YAAY;AACzC,QAAQ,QAAQ,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,KAAK,mBAAmB,EAAE,EAAE;AACxF,KAAK,EAAE,EAAE,CAAC,CAAC;AACX;;ACdA,IAAI,IAAI,GAAG,EAAE,CAAC;AACP,SAAS,UAAU,CAAC,eAAe,EAAE;AAC5C,IAAI,IAAI,GAAG,GAAGA,gBAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjC,IAAI,IAAI,GAAG,CAAC,OAAO,KAAK,IAAI,EAAE;AAC9B,QAAQ,GAAG,CAAC,OAAO,GAAG,eAAe,EAAE,CAAC;AACxC,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf;;ACHA,IAAI,MAAM,GAAG,KAAK,CAAC;AACnB,IAAI,QAAQ,GAAGA,gBAAK,CAAC,MAAM,CAAC,CAAC;AAGtB,IAAI,KAAK,GAAG,QAAQ;AAC3B,IAAI,SAAS,KAAK,CAAC,OAAO,EAAE;AAC5B,QAAQ,IAAI,eAAe,GAAGM,8BAAoB,CAAC,OAAO,CAAC,CAAC;AAC5D,QAAQ,QAAQ,eAAe,CAAC,MAAM;AACtC,YAAY,KAAK,SAAS;AAC1B,gBAAgB,MAAM,eAAe,CAAC;AACtC,YAAY,KAAK,UAAU;AAC3B,gBAAgB,MAAM,eAAe,CAAC,MAAM,CAAC;AAC7C,YAAY,KAAK,WAAW;AAC5B,gBAAgB,OAAO,eAAe,CAAC,KAAK,CAAC;AAC7C,SAAS;AACT,KAAK;;ACpBL,IAAI,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AAoChD,SAAS,QAAQ,CAAC,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE;AAC9D,IAAI,IAAI,YAAY,GAAG,gBAAgB,CAAC,cAAc,CAAC,CAAC;AACxD,IAAI,IAAI,QAAQ,GAAG,YAAY,IAAI,YAAY,CAAC,aAAa,CAAC,CAAC;AAC/D,IAAI,IAAI,OAAO,GAAG,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACjD,IAAI,OAAO,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;AAChD;;AC5BA,IAAI,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;AAmC9C,SAAS,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE;AACzC,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,EAAE,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;AAC9D,IAAI,OAAO,QAAQ,CAAC,UAAU,EAAE,SAAS,EAAE,eAAe,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACvG,CAAC;AACD,SAAS,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE;AACnC,IAAI,OAAO,gBAAgB,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACtF,CAAC;AACM,SAAS,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE;AAChD,IAAI,IAAI,QAAQ,GAAGN,gBAAK,CAAC,MAAM,EAAE,CAAC;AAClC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO;AACzB,QAAQ,MAAM,KAAK,QAAQ,CAAC,OAAO,CAAC,MAAM;AAC1C,QAAQ,KAAK,KAAK,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE;AAC1C,QAAQ,QAAQ,CAAC,OAAO,GAAG,IAAI,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC9E,KAAK;AACL,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;AAOjC,IAAI,KAAK,CAAC,gBAAgB,GAAGA,gBAAK,CAAC,UAAU,CAAC,UAAU,IAAI,EAAE,EAAE,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1F,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACD,IAAI,aAAa,KAAkB,YAAY;AAC/C,IAAI,SAAS,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE;AACpD,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAK3B,QAAQ,IAAI,CAAC,WAAW,GAAG,YAAY,EAAE,OAAO,KAAK,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC;AAC5E,QAAQ,IAAI,CAAC,iBAAiB,GAAGO,yBAAe,CAAC;AACjD,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,IAAI,EAAE,KAAK,CAAC;AACxB,YAAY,KAAK,EAAE,KAAK,CAAC;AACzB,YAAY,aAAa,EAAEC,kBAAa,CAAC,OAAO;AAChD,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,CAAC,iBAAiB,GAAGD,yBAAe,CAAC;AACjD,YAAY,OAAO,EAAE,KAAK;AAC1B,YAAY,IAAI,EAAE,KAAK,CAAC;AACxB,YAAY,KAAK,EAAE,KAAK,CAAC;AACzB,YAAY,aAAa,EAAEC,kBAAa,CAAC,KAAK;AAC9C,SAAS,CAAC,CAAC;AAIX,QAAQ,IAAI,CAAC,kBAAkB,GAAG,KAAKC,uBAAa,GAAG,OAAO,GAAG,GAAG,GAAG,CAAC;AACxE,QAAQC,yBAAkB,CAAC,KAAK,EAAEC,mBAAY,CAAC,KAAK,CAAC,CAAC;AAGtD,QAAQ,IAAI,cAAc,GAAG,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC;AACzD,QAAQ,IAAI,YAAY,GAAG,cAAc,IAAI,cAAc,CAAC,IAAI,CAAC;AACjE,QAAQ,IAAI,YAAY,EAAE;AAC1B,YAAY,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AAC7C,SAAS;AACT,KAAK;AAQL,IAAI,aAAa,CAAC,SAAS,CAAC,gBAAgB,GAAG,YAAY;AAE3D,QAAQ,UAAU,CAAC,OAAO,KAAK,KAAK,IAAIT,iBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3D,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,OAAO,EAAE;AAC9D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,IAAI,OAAO,CAAC,KAAK,EAAE;AAC3B,YAAY,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1D,SAAS;AACT,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,GAAG,OAAO,EAAE,CAAC;AACjG,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAIpF,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,YAAY,CAAC;AACnH,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;AAC7B,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;AAC3B,QAAQ,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE;AAC9C,YAAY,IAAI,MAAM,CAAC;AAKvB,YAAY,OAAO,CAAC,SAAS,CAAC;AAC9B,gBAAgB,IAAI,EAAE,UAAU,KAAK,EAAE;AACvC,oBAAoB,MAAM,GAAG,KAAK,CAAC;AACnC,iBAAiB;AACjB,gBAAgB,KAAK,EAAE,YAAY;AACnC,oBAAoB,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;AACtF,iBAAiB;AACjB,gBAAgB,QAAQ,EAAE,YAAY;AACtC,oBAAoB,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;AACzD,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS,CAAC,CAAC;AACX,KAAK,CAAC;AAIN,IAAI,aAAa,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,OAAO,EAAE;AAC1D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AAQzB,QAAQ,IAAI,CAAC,cAAc,GAAGF,gBAAK,CAAC,UAAU,CAACC,wBAAgB,EAAE,CAAC,CAAC,cAAc,CAAC;AAClF,QAAQ,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACjC,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;AACjD,QAAQ,IAAI,MAAM,GAAG,oBAAoB,CAACD,gBAAK,CAAC,WAAW,CAAC,UAAU,iBAAiB,EAAE;AACzF,YAAY,IAAI,KAAK,CAAC,cAAc,EAAE;AACtC,gBAAgB,OAAO,YAAY,GAAG,CAAC;AACvC,aAAa;AACb,YAAY,KAAK,CAAC,WAAW,GAAG,iBAAiB,CAAC;AAClD,YAAY,IAAI,MAAM,GAAG,YAAY;AACrC,gBAAgB,IAAI,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC;AAIlD,gBAAgB,IAAI,MAAM,GAAG,QAAQ,CAAC,gBAAgB,EAAE,CAAC;AAEzD,gBAAgB,IAAI,cAAc;AAClC,oBAAoB,cAAc,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO;AAC7D,oBAAoB,cAAc,CAAC,aAAa,KAAK,MAAM,CAAC,aAAa;AACzE,oBAAoBK,WAAK,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE;AAC7D,oBAAoB,OAAO;AAC3B,iBAAiB;AACjB,gBAAgB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACxC,aAAa,CAAC;AACd,YAAY,IAAI,OAAO,GAAG,UAAU,KAAK,EAAE;AAC3C,gBAAgB,YAAY,CAAC,WAAW,EAAE,CAAC;AAC3C,gBAAgB,YAAY,GAAG,QAAQ,CAAC,qBAAqB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC/E,gBAAgB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,eAAe,CAAC,EAAE;AAElE,oBAAoB,MAAM,KAAK,CAAC;AAChC,iBAAiB;AACjB,gBAAgB,IAAI,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC;AAClD,gBAAgB,IAAI,CAAC,cAAc;AACnC,qBAAqB,cAAc,IAAI,cAAc,CAAC,OAAO,CAAC;AAC9D,oBAAoB,CAACA,WAAK,CAAC,KAAK,EAAE,cAAc,CAAC,KAAK,CAAC,EAAE;AACzD,oBAAoB,KAAK,CAAC,SAAS,CAAC;AACpC,wBAAwB,IAAI,GAAG,cAAc,IAAI,cAAc,CAAC,IAAI,CAAC;AACrE,wBAAwB,KAAK,EAAE,KAAK;AACpC,wBAAwB,OAAO,EAAE,KAAK;AACtC,wBAAwB,aAAa,EAAEG,kBAAa,CAAC,KAAK;AAC1D,qBAAqB,CAAC,CAAC;AACvB,iBAAiB;AACjB,aAAa,CAAC;AACd,YAAY,IAAI,YAAY,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAKnE,YAAY,OAAO,YAAY;AAC/B,gBAAgB,UAAU,CAAC,YAAY,EAAE,OAAO,YAAY,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;AAC/E,gBAAgB,KAAK,CAAC,WAAW,GAAG,YAAY,EAAE,OAAO,KAAK,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC;AACrF,aAAa,CAAC;AACd,SAAS,EAAE;AAOX,YAAY,QAAQ;AACpB,YAAY,IAAI,CAAC,cAAc;AAC/B,YAAY,IAAI,CAAC,MAAM,CAAC,qBAAqB;AAC7C,SAAS,CAAC,EAAE,YAAY,EAAE,OAAO,KAAK,CAAC,gBAAgB,EAAE,CAAC,EAAE,EAAE,YAAY,EAAE,OAAO,KAAK,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC,CAAC;AAEhH,QAAQ,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;AAChD,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC1C,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,OAAO,EAAE;AAC5D,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,IAAI,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,GAAG,OAAO,EAAE,CAAC;AAIhG,QAAQ,IAAI,wBAAwB,GAAG,IAAI,CAAC,iBAAiB,CAAC;AAC9D,QAAQ,IAAI,CAACH,WAAK,CAAC,iBAAiB,EAAE,wBAAwB,CAAC,EAAE;AACjE,YAAY,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AACvD,YAAY,IAAI,wBAAwB,IAAI,IAAI,CAAC,UAAU,EAAE;AAS7D,gBAAgB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAIrE,gBAAgB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,YAAY,CAAC;AAC3H,gBAAgB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;AACrC,aAAa;AACb,SAAS;AAOT,QAAQ,IAAI,CAAC,WAAW;AACxB,YAAY,OAAO,CAAC,WAAW,IAAI,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC;AACvE,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC;AAC1E,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,qBAAqB;AACrE,YAAY,IAAI,CAAC,gBAAgB,CAAC,GAAG,KAAK,KAAK;AAC/C,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;AAGzC,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC;AACjD,SAAS;AACT,aAAa,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI;AAC3C,YAAY,IAAI,CAAC,iBAAiB,CAAC,WAAW,KAAK,SAAS,EAAE;AAW9D,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC;AACjD,SAAS;AACT,aAAa,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,iBAAiB;AACvD,YAAY,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,iBAAiB,EAAE;AACpD,YAAY,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;AACjC,SAAS;AACT,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,kBAAkB,GAAG,YAAY;AAC7D,QAAQ,IAAI,OAAO,GAAG,EAAE,CAAC;AACzB,QAAQ,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC;AACnE,QAAQ,IAAI,cAAc;AAC1B,YAAY,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACzC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE;AAClD,YAAY,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AAC/D,SAAS;AAWT,QAAQ,OAAO,CAAC,IAAI,CAACO,iBAAO,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAClG,QAAQ,OAAO,OAAO,CAAC,MAAM,CAACC,sBAAY,CAAC,CAAC;AAC5C,KAAK,CAAC;AAEN,IAAI,aAAa,CAAC,SAAS,CAAC,uBAAuB,GAAG,UAAU,EAAE,EAAE;AACpE,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;AACvC,QAAW,IAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAO,EAAE,CAAC,GAAG,CAAC,CAAe,EAAE,CAAC,WAAW,CAAC,CAAW,EAAE,CAAC,OAAO,CAAC,CAAkB,EAAE,CAAC,cAAc,CAAC;AAIjI,YAAQ,YAAY,GAAGC,YAAM,CAAC,EAAE,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,gBAAgB,CAAC,EAAE;AAG/F,QAAQ,IAAI,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AACnF,QAAQ,IAAI,IAAI,CAAC,cAAc;AAC/B,aAAa,iBAAiB,CAAC,WAAW,KAAK,cAAc;AAC7D,gBAAgB,iBAAiB,CAAC,WAAW,KAAK,mBAAmB,CAAC,EAAE;AAGxE,YAAY,iBAAiB,CAAC,WAAW,GAAG,aAAa,CAAC;AAC1D,SAAS;AACT,QAAQ,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE;AAC1C,YAAY,iBAAiB,CAAC,SAAS,GAAG,EAAE,CAAC;AAC7C,SAAS;AACT,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,IAAI,EAAE,GAAG,iBAAiB,CAAC,WAAW,EAAE,WAAW,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,iBAAiB,CAAC,kBAAkB,EAAE,kBAAkB,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,WAAW,GAAG,EAAE,CAAC;AAItN,YAAY,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE;AAC7C,gBAAgB,kBAAkB,EAAE,kBAAkB;AACtD,gBAAgB,WAAW,EAAE,SAAS;AACtC,aAAa,CAAC,CAAC;AACf,SAAS;AACT,aAAa,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE;AACjD,YAAY,iBAAiB,CAAC,WAAW;AACzC,gBAAgB,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,kBAAkB;AAC1G,oBAAoB,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACjD,SAAS;AACT,QAAQ,OAAO,iBAAiB,CAAC;AACjC,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,qBAAqB,GAAG,YAAY;AAChE,QAAQ,IAAI,EAAE,EAAE,EAAE,CAAC;AACnB,QAAQ,QAAQ,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW;AAChH,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC;AAC9G,YAAY,aAAa,EAAE;AAC3B,KAAK,CAAC;AAIN,IAAI,aAAa,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,IAAI,EAAE,GAAG,CAAC;AAC9D,IAAI,aAAa,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,KAAK,EAAE,GAAG,CAAC;AAC3D,IAAI,aAAa,CAAC,SAAS,CAAC,kBAAkB,GAAG,YAAY;AAI7D,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,UAAU;AACvC,YAAY,CAAC,IAAI,CAAC,cAAc;AAChC,gBAAgB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC;AAC5E,gBAAgB,IAAI,CAAC,UAAU;AAC/B,gBAAgB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;AACnE,QAAQ,IAAI,CAAC,cAAc,GAAGd,gBAAK,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ;AAClE,YAAY,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;AACpD,YAAY,SAAS,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;AACxD,YAAY,SAAS,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;AACxD,YAAY,WAAW,EAAE,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC5D,YAAY,YAAY,EAAE,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC9D,YAAY,WAAW,EAAE,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC5D,YAAY,eAAe,EAAE,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC;AACpE,SAAS,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC3B,QAAQ,IAAI,UAAU,GAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG,KAAK,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC9F,QAAQ,IAAI,IAAI,CAAC,cAAc,IAAI,UAAU,EAAE;AAC/C,YAAY,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AAChE,YAAY,IAAI,QAAQ,CAAC,gBAAgB,EAAE,CAAC,OAAO,EAAE;AAErD,gBAAgB,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;AACxE,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,QAAQ,CAAC;AACxB,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,UAAU,EAAE;AAC9D,QAAQ,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;AACzC,QAAQ,IAAI,cAAc,IAAI,cAAc,CAAC,IAAI,EAAE;AACnD,YAAY,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC;AACpD,SAAS;AACT,QAAQ,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;AAGjC,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;AAC3B,QAAQ,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;AAChE,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,sBAAsB,GAAG,UAAU,MAAM,EAAE,cAAc,EAAE;AACvF,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;AAC7B,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAErD,YAAY,OAAO,CAAC,OAAO,EAAE;AAC7B,iBAAiB,IAAI,CAAC,YAAY;AAClC,gBAAgB,IAAI,OAAO,EAAE;AAC7B,oBAAoB,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC3C,iBAAiB;AACjB,qBAAqB,IAAI,MAAM,CAAC,IAAI;AACpC,oBAAoB,CAAC,cAAc,KAAK,IAAI,IAAI,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,MAAM,MAAM,CAAC,aAAa;AAC3I,oBAAoB,MAAM,CAAC,aAAa,KAAKQ,kBAAa,CAAC,KAAK,EAAE;AAClE,oBAAoB,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnD,iBAAiB;AACjB,aAAa,CAAC;AACd,iBAAiB,KAAK,CAAC,UAAU,KAAK,EAAE;AACxC,gBAAgB,UAAU,CAAC,OAAO,KAAK,KAAK,IAAIN,iBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtE,aAAa,CAAC,CAAC;AACf,SAAS;AACT,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,MAAM,EAAE;AAC9D,QAAQ,OAAOa,yBAAe,CAAC,MAAM,CAAC,MAAM,CAAC;AAC7C,YAAY,IAAIC,kBAAW,CAAC,EAAE,aAAa,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC;AAC7D,cAAc,MAAM,CAAC,KAAK,CAAC;AAC3B,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,gBAAgB,GAAG,YAAY;AAI3D,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAY,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,EAAE,CAAC;AAC5F,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,MAAM,EAAE;AAC9D,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC9D,QAAQ,IAAI,WAAW;AACvB,YAAY,OAAO,WAAW,CAAC;AAC/B,QAAW,IAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAW,MAAM,CAAC,OAAO,CAAC,KAAC,oBAAoB,GAAGF,YAAM,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE;AACrH,QAAQ,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,GAAG,WAAW,GAAGG,cAAQ,CAACA,cAAQ,CAACA,cAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,oBAAoB,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,MAAM,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC;AACvT,QAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,IAAIF,yBAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AAKlE,YAAY,WAAW,CAAC,KAAK,GAAG,IAAIC,kBAAW,CAAC,EAAE,aAAa,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;AAClF,SAAS;AACT,QAAQ,OAAO,WAAW,CAAC;AAC3B,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,0BAA0B,GAAG,UAAU,MAAM,EAAE;AAM3E,QAAQ,IAAI,MAAM,CAAC,OAAO;AAC1B,YAAY,IAAI,CAAC,gBAAgB,CAAC,cAAc;AAChD,YAAY,CAAC,MAAM,CAAC,OAAO;AAC3B,aAAa,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;AACnE,YAAY,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,KAAK,YAAY,EAAE;AAClE,YAAY,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;AAClC,gBAAgB,OAAO,EAAE,IAAI;AAC7B,gBAAgB,aAAa,EAAER,kBAAa,CAAC,OAAO;AACpD,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;AACtC,SAAS;AACT,KAAK,CAAC;AACN,IAAI,OAAO,aAAa,CAAC;AACzB,CAAC,EAAE,CAAC;;AC9cJ,IAAI,aAAa,GAAG;AACpB,IAAI,SAAS;AACb,IAAI,WAAW;AACf,IAAI,WAAW;AACf,IAAI,aAAa;AACjB,IAAI,cAAc;AAClB,IAAI,iBAAiB;AACrB,CAAC,CAAC;AAoCK,SAAS,YAAY,CAAC,KAAK,EAAE,OAAO,EAAE;AAC7C,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,IAAI,cAAc,GAAGR,gBAAK,CAAC,MAAM,EAAE,CAAC;AACxC,IAAI,IAAI,UAAU,GAAGA,gBAAK,CAAC,MAAM,EAAE,CAAC;AACpC,IAAI,IAAI,QAAQ,GAAGA,gBAAK,CAAC,MAAM,EAAE,CAAC;AAClC,IAAI,IAAI,MAAM,GAAGa,sBAAY,CAAC,OAAO,EAAE,cAAc,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AACrE,IAAI,IAAI,QAAQ,GAAG,CAAC,EAAE,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;AAG9H,IAAI,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;AACjC,IAAI,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC;AAChC,IAAI,IAAI,aAAa,GAAG,gBAAgB,CAAC,eAAe,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC/F,IAAI,IAAI,cAAc,GAAG,aAAa,CAAC,QAAQ,CAACI,cAAQ,CAACA,cAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AACnH,IAAI,IAAI,kBAAkB,GAAG,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,kBAAkB;AACjF,QAAQ,aAAa,CAAC,qBAAqB,EAAE,CAAC;AAC9C,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;AAC/C,QAAQ,MAAM,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO;AACxC,KAAK,CAAC,CAAC;AAEP,IAAI,IAAI,YAAY,GAAGjB,gBAAK,CAAC,OAAO,CAAC,YAAY;AACjD,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;AAC9B,QAAQ,IAAI,OAAO,GAAG,UAAU,GAAG,EAAE;AACrC,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACrC,YAAY,YAAY,CAAC,GAAG,CAAC,GAAG,YAAY;AAC5C,gBAAgB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;AAC7C,oBAAoB,cAAc,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAEjE,oBAAoB,aAAa,CAAC,gBAAgB,EAAE,CAAC;AACrD,iBAAiB;AAEjB,gBAAgB,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACrD,aAAa,CAAC;AACd,SAAS,CAAC;AACV,QAAQ,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,eAAe,GAAG,aAAa,EAAE,EAAE,GAAG,eAAe,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AAC7F,YAAY,IAAI,GAAG,GAAG,eAAe,CAAC,EAAE,CAAC,CAAC;AAC1C,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC;AACzB,SAAS;AACT,QAAQ,OAAO,YAAY,CAAC;AAC5B,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;AACxC,IAAI,IAAI,OAAO,GAAGA,gBAAK,CAAC,WAAW,CAAC,UAAU,cAAc,EAAE;AAC9D,QAAQ,cAAc,CAAC,OAAO;AAC9B,YAAY,cAAc,GAAGiB,cAAQ,CAACA,cAAQ,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,EAAE,WAAW,EAAE,cAAc,CAAC,WAAW,IAAI,kBAAkB,EAAE,CAAC,GAAG;AACzI,gBAAgB,WAAW,EAAE,kBAAkB;AAC/C,aAAa,CAAC;AACd,QAAQ,IAAI,OAAO,GAAGJ,sBAAY,CAAC,UAAU,CAAC,OAAO,EAAEI,cAAQ,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,OAAO,EAAE,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;AACtH,QAAQ,IAAI,OAAO,GAAG,aAAa;AACnC,aAAa,YAAY,CAACA,cAAQ,CAACA,cAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;AAC3E,aAAa,IAAI,CAAC,UAAU,WAAW,EAAE,EAAE,OAAO,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;AAG/F,QAAQ,OAAO,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC;AACvC,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC7B;;ACnDO,SAAS,WAAW,CAAC,QAAQ,EAAE,OAAO,EAAE;AAC/C,IAAI,IAAI,MAAM,GAAG,eAAe,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AACnG,IAAIP,yBAAkB,CAAC,QAAQ,EAAEC,mBAAY,CAAC,QAAQ,CAAC,CAAC;AACxD,IAAI,IAAI,EAAE,GAAGX,gBAAK,CAAC,QAAQ,CAAC;AAC5B,QAAQ,MAAM,EAAE,KAAK;AACrB,QAAQ,OAAO,EAAE,KAAK;AACtB,QAAQ,MAAM,EAAE,MAAM;AACtB,KAAK,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1C,IAAI,IAAI,GAAG,GAAGA,gBAAK,CAAC,MAAM,CAAC;AAC3B,QAAQ,MAAM,EAAE,MAAM;AACtB,QAAQ,UAAU,EAAE,CAAC;AACrB,QAAQ,SAAS,EAAE,IAAI;AACvB,QAAQ,MAAM,EAAE,MAAM;AACtB,QAAQ,QAAQ,EAAE,QAAQ;AAC1B,QAAQ,OAAO,EAAE,OAAO;AACxB,KAAK,CAAC,CAAC;AAGP,IAAI;AACJ,QAAQ,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC7F,KAAK;AACL,IAAI,IAAI,OAAO,GAAGA,gBAAK,CAAC,WAAW,CAAC,UAAU,cAAc,EAAE;AAC9D,QAAQ,IAAI,cAAc,KAAK,KAAK,CAAC,EAAE,EAAE,cAAc,GAAG,EAAE,CAAC,EAAE;AAC/D,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,EAAE,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;AAC3E,QAAQ,IAAI,WAAW,GAAGiB,cAAQ,CAACA,cAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;AAClF,QAAQ,IAAI,MAAM,GAAG,cAAc,CAAC,MAAM,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;AACjE,QAAQ,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO;AACvC,YAAY,CAAC,WAAW,CAAC,aAAa;AACtC,YAAY,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE;AACnC,YAAY,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG;AAC5C,gBAAgB,OAAO,EAAE,IAAI;AAC7B,gBAAgB,KAAK,EAAE,KAAK,CAAC;AAC7B,gBAAgB,IAAI,EAAE,KAAK,CAAC;AAC5B,gBAAgB,MAAM,EAAE,IAAI;AAC5B,gBAAgB,MAAM,EAAE,MAAM;AAC9B,aAAa,EAAE,CAAC;AAChB,SAAS;AACT,QAAQ,IAAI,UAAU,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC;AAClD,QAAQ,IAAI,aAAa,GAAGJ,sBAAY,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AACtE,QAAQ,OAAO,MAAM;AACrB,aAAa,MAAM,CAAC,aAAa,CAAC;AAClC,aAAa,IAAI,CAAC,UAAU,QAAQ,EAAE;AACtC,YAAY,IAAI,EAAE,EAAE,EAAE,CAAC;AACvB,YAAY,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAEK,QAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;AAC/D,YAAY,IAAI,KAAK,GAAGA,QAAM,IAAIA,QAAM,CAAC,MAAM,GAAG,CAAC;AACnD,gBAAgB,IAAIF,kBAAW,CAAC,EAAE,aAAa,EAAEE,QAAM,EAAE,CAAC;AAC1D,kBAAkB,KAAK,CAAC,CAAC;AACzB,YAAY,IAAI,OAAO,GAAG,cAAc,CAAC,OAAO,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;AACjI,YAAY,IAAI,KAAK,IAAI,OAAO,EAAE;AAClC,gBAAgB,OAAO,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;AAC9C,aAAa;AACb,YAAY,IAAI,UAAU,KAAK,GAAG,CAAC,OAAO,CAAC,UAAU;AACrD,gBAAgB,CAAC,aAAa,CAAC,aAAa,EAAE;AAC9C,gBAAgB,IAAI,QAAQ,GAAG;AAC/B,oBAAoB,MAAM,EAAE,IAAI;AAChC,oBAAoB,OAAO,EAAE,KAAK;AAClC,oBAAoB,IAAI,EAAE,IAAI;AAC9B,oBAAoB,KAAK,EAAE,KAAK;AAChC,oBAAoB,MAAM,EAAE,MAAM;AAClC,iBAAiB,CAAC;AAClB,gBAAgB,IAAI,GAAG,CAAC,OAAO,CAAC,SAAS,IAAI,CAACb,WAAK,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE;AACnF,oBAAoB,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,QAAQ,EAAE,CAAC;AAC/D,iBAAiB;AACjB,aAAa;AACb,YAAY,IAAI,WAAW,GAAG,cAAc,CAAC,WAAW,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;AAC7I,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB,gBAAgB,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;AACpH,aAAa;AACb,YAAY,OAAO,QAAQ,CAAC;AAC5B,SAAS,CAAC;AACV,aAAa,KAAK,CAAC,UAAU,KAAK,EAAE;AACpC,YAAY,IAAI,EAAE,CAAC;AACnB,YAAY,IAAI,UAAU,KAAK,GAAG,CAAC,OAAO,CAAC,UAAU,IAAI,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE;AAChF,gBAAgB,IAAI,QAAQ,GAAG;AAC/B,oBAAoB,OAAO,EAAE,KAAK;AAClC,oBAAoB,KAAK,EAAE,KAAK;AAChC,oBAAoB,IAAI,EAAE,KAAK,CAAC;AAChC,oBAAoB,MAAM,EAAE,IAAI;AAChC,oBAAoB,MAAM,EAAE,MAAM;AAClC,iBAAiB,CAAC;AAClB,gBAAgB,IAAI,CAACA,WAAK,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE;AAC1D,oBAAoB,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,QAAQ,EAAE,CAAC;AAC/D,iBAAiB;AACjB,aAAa;AACb,YAAY,IAAI,OAAO,GAAG,cAAc,CAAC,OAAO,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;AACjI,YAAY,IAAI,OAAO,EAAE;AACzB,gBAAgB,OAAO,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;AAE9C,gBAAgB,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;AACvD,aAAa;AACb,YAAY,MAAM,KAAK,CAAC;AACxB,SAAS,CAAC,CAAC;AACX,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,IAAI,KAAK,GAAGL,gBAAK,CAAC,WAAW,CAAC,YAAY;AAC9C,QAAQ,IAAI,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE;AACnC,YAAY,IAAI,QAAQ,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;AAC7E,YAAY,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC5E,YAAY,SAAS,CAAC,QAAQ,CAAC,CAAC;AAChC,SAAS;AACT,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAIA,gBAAK,CAAC,SAAS,CAAC,YAAY;AAChC,QAAQ,GAAG,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;AACrC,QAAQ,OAAO,YAAY;AAC3B,YAAY,GAAG,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;AAC1C,SAAS,CAAC;AACV,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,OAAO,CAAC,OAAO,EAAEiB,cAAQ,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;AACzD;;ACvEO,SAAS,eAAe,CAAC,YAAY,EAAE,OAAO,EAAE;AACvD,IAAI,IAAI,8BAA8B,GAAGjB,gBAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC7D,IAAI,IAAI,MAAM,GAAG,eAAe,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AACnG,IAAIU,yBAAkB,CAAC,YAAY,EAAEC,mBAAY,CAAC,YAAY,CAAC,CAAC;AAChE,IAAI,IAAI,EAAE,GAAGX,gBAAK,CAAC,QAAQ,CAAC;AAC5B,QAAQ,OAAO,EAAE,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;AAClF,QAAQ,KAAK,EAAE,KAAK,CAAC;AACrB,QAAQ,IAAI,EAAE,KAAK,CAAC;AACpB,QAAQ,SAAS,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,SAAS;AACtF,KAAK,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1C,IAAI,IAAI,CAAC,8BAA8B,CAAC,OAAO,EAAE;AACjD,QAAQ,8BAA8B,CAAC,OAAO,GAAG,IAAI,CAAC;AACtD,QAAQ,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,kBAAkB,EAAE;AAC1F,YAAY,UAAU,CAAC,OAAO,KAAK,KAAK,IAAIE,iBAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACrF,SAAS;AACT,QAAQ,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,sBAAsB,EAAE;AAC9F,YAAY,UAAU,CAAC,OAAO,KAAK,KAAK,IAAIA,iBAAS,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACzF,SAAS;AACT,KAAK;AACL,IAAI,IAAI,EAAE,GAAGF,gBAAK,CAAC,QAAQ,CAAC,YAAY;AACxC,QAAQ,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE;AAC5E,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,QAAQ,OAAO,MAAM,CAAC,SAAS,CAAC;AAChC,YAAY,KAAK,EAAE,YAAY;AAC/B,YAAY,SAAS,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,SAAS;AAC1F,YAAY,WAAW,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,WAAW;AAC9F,YAAY,OAAO,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,OAAO;AACtF,SAAS,CAAC,CAAC;AACX,KAAK,CAAC,EAAE,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,aAAa,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAClD,IAAI,IAAI,qBAAqB,GAAGA,gBAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACpD,IAAIA,gBAAK,CAAC,SAAS,CAAC,YAAY;AAChC,QAAQ,OAAO,YAAY;AAC3B,YAAY,qBAAqB,CAAC,OAAO,GAAG,IAAI,CAAC;AACjD,SAAS,CAAC;AACV,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,IAAI,IAAI,GAAG,GAAGA,gBAAK,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;AAC7F,IAAIA,gBAAK,CAAC,SAAS,CAAC,YAAY;AAChC,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAC3B,QAAQ,IAAI,iBAAiB,GAAG,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,iBAAiB,CAAC;AAC5G,QAAQ,IAAI,OAAO,iBAAiB,KAAK,UAAU,EAAE;AACrD,YAAY,iBAAiB,GAAG,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC7D,SAAS;AACT,QAAQ,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE;AAC5E,YAAY,IAAI,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;AAChK,gBAAgB,qBAAqB,CAAC,OAAO,EAAE;AAC/C,gBAAgB,SAAS,CAAC;AAC1B,oBAAoB,OAAO,EAAE,KAAK;AAClC,oBAAoB,IAAI,EAAE,KAAK,CAAC;AAChC,oBAAoB,KAAK,EAAE,KAAK,CAAC;AACjC,oBAAoB,SAAS,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,SAAS;AAClG,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,aAAa,CAAC,IAAI,CAAC,CAAC;AACpC,gBAAgB,qBAAqB,CAAC,OAAO,GAAG,KAAK,CAAC;AACtD,aAAa;AACb,SAAS;AACT,aAAa,IAAI,CAAC,iBAAiB,KAAK,KAAK;AAC7C,aAAa,MAAM,KAAK,GAAG,CAAC,OAAO,CAAC,MAAM;AAC1C,gBAAgB,YAAY,KAAK,GAAG,CAAC,OAAO,CAAC,YAAY;AACzD,gBAAgB,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,WAAW,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC;AAC5K,gBAAgB,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;AAChK,gBAAgB,CAACK,WAAK,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;AAC1K,YAAY,qBAAqB,CAAC,OAAO,EAAE;AAC3C,YAAY,SAAS,CAAC;AACtB,gBAAgB,OAAO,EAAE,IAAI;AAC7B,gBAAgB,IAAI,EAAE,KAAK,CAAC;AAC5B,gBAAgB,KAAK,EAAE,KAAK,CAAC;AAC7B,gBAAgB,SAAS,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,SAAS;AAC9F,aAAa,CAAC,CAAC;AACf,YAAY,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC;AAC3C,gBAAgB,KAAK,EAAE,YAAY;AACnC,gBAAgB,SAAS,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,SAAS;AAC9F,gBAAgB,WAAW,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,WAAW;AAClG,gBAAgB,OAAO,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,OAAO;AAC1F,aAAa,CAAC,CAAC,CAAC;AAChB,YAAY,qBAAqB,CAAC,OAAO,GAAG,KAAK,CAAC;AAClD,SAAS;AACT,QAAQ,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;AACrG,KAAK,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;AACvE,IAAIL,gBAAK,CAAC,SAAS,CAAC,YAAY;AAChC,QAAQ,IAAI,CAAC,UAAU,EAAE;AACzB,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,mBAAmB,GAAG,KAAK,CAAC;AACxC,QAAQ,IAAI,YAAY,GAAG,UAAU,CAAC,SAAS,CAAC;AAChD,YAAY,IAAI,EAAE,UAAU,WAAW,EAAE;AACzC,gBAAgB,IAAI,EAAE,EAAE,EAAE,CAAC;AAC3B,gBAAgB,IAAI,mBAAmB,EAAE;AACzC,oBAAoB,OAAO;AAC3B,iBAAiB;AACjB,gBAAgB,IAAI,MAAM,GAAG;AAC7B,oBAAoB,OAAO,EAAE,KAAK;AAGlC,oBAAoB,IAAI,EAAE,WAAW,CAAC,IAAI;AAC1C,oBAAoB,KAAK,EAAE,KAAK,CAAC;AACjC,oBAAoB,SAAS,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,SAAS;AAClG,iBAAiB,CAAC;AAClB,gBAAgB,SAAS,CAAC,MAAM,CAAC,CAAC;AAClC,gBAAgB,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE;AAC/F,oBAAoB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;AAC/C,wBAAwB,MAAM,EAAE,MAAM;AACtC,wBAAwB,IAAI,EAAE,MAAM;AACpC,qBAAqB,CAAC,CAAC;AACvB,iBAAiB;AACjB,qBAAqB,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,kBAAkB,EAAE;AAChH,oBAAoB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC;AAC3D,wBAAwB,MAAM,EAAE,MAAM;AACtC,wBAAwB,gBAAgB,EAAE,MAAM;AAChD,qBAAqB,CAAC,CAAC;AACvB,iBAAiB;AACjB,aAAa;AACb,YAAY,KAAK,EAAE,UAAU,KAAK,EAAE;AACpC,gBAAgB,IAAI,EAAE,EAAE,EAAE,CAAC;AAC3B,gBAAgB,IAAI,CAAC,mBAAmB,EAAE;AAC1C,oBAAoB,SAAS,CAAC;AAC9B,wBAAwB,OAAO,EAAE,KAAK;AACtC,wBAAwB,IAAI,EAAE,KAAK,CAAC;AACpC,wBAAwB,KAAK,EAAE,KAAK;AACpC,wBAAwB,SAAS,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,SAAS;AACtG,qBAAqB,CAAC,CAAC;AACvB,oBAAoB,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC9J,iBAAiB;AACjB,aAAa;AACb,YAAY,QAAQ,EAAE,YAAY;AAClC,gBAAgB,IAAI,EAAE,EAAE,EAAE,CAAC;AAC3B,gBAAgB,IAAI,CAAC,mBAAmB,EAAE;AAC1C,oBAAoB,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,EAAE;AACvG,wBAAwB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;AACzD,qBAAqB;AACrB,yBAAyB,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,sBAAsB,EAAE;AACxH,wBAAwB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;AACrE,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,YAAY;AAI3B,YAAY,mBAAmB,GAAG,IAAI,CAAC;AACvC,YAAY,UAAU,CAAC,YAAY;AACnC,gBAAgB,YAAY,CAAC,WAAW,EAAE,CAAC;AAC3C,aAAa,CAAC,CAAC;AACf,SAAS,CAAC;AACV,KAAK,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;AACrB,IAAI,OAAO,MAAM,CAAC;AAClB;;AC1NO,SAAS,cAAc,CAAC,EAAE,EAAE;AACnC,IAAI,OAAO,oBAAoB,CAACA,gBAAK,CAAC,WAAW,CAAC,UAAU,MAAM,EAAE;AAMpE,QAAQ,OAAO,EAAE,CAAC,YAAY,CAAC,SAAS,MAAM,GAAG;AACjD,YAAY,MAAM,EAAE,CAAC;AACrB,YAAY,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACpC,SAAS,CAAC,CAAC;AACX,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACtB;;ACxBO,SAAS,WAAW,CAAC,OAAO,EAAE;AACrC,IAAI,OAAO,QAAQ,CAAC,aAAa,EAAE,YAAY,EAAE,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AAC3F,CAAC;AACD,SAAS,YAAY,CAAC,OAAO,EAAE;AAC/B,IAAI,IAAI,KAAK,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;AACtD,IAAI,IAAI,WAAW,GAAG,WAAW,CAAC,YAAY;AAC9C,QAAQ,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,YAAY,GAAG,OAAO,CAAC,YAAY,EAAE,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,OAAO,CAAC,UAAU,EAAE,UAAU,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,EAAE,IAAI,GAAGc,YAAM,CAAC,OAAO,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;AAC/O,QAAQ,OAAOG,cAAQ,CAACA,cAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,YAAY,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;AACrN,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;AAClB,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC,YAAY;AAC3C,QAAQ,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;AACrD,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,aAAa,GAAG,WAAW,CAAC,YAAY,EAAE,OAAO,OAAO,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;AAGhF,IAAIjB,gBAAK,CAAC,OAAO,CAAC,YAAY;AAC9B,QAAQ,SAAS,CAAC,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;AAClE,KAAK,EAAE,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAE7B,IAAI,IAAI,WAAW,GAAGA,gBAAK,CAAC,WAAW,CAAC,YAAY,EAAE,OAAO,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACvF,IAAI,OAAO,oBAAoB,CAACA,gBAAK,CAAC,WAAW,CAAC,UAAU,WAAW,EAAE;AACzE,QAAQ,IAAI,WAAW,GAAG,CAAC,CAAC;AAC5B,QAAQ,IAAI,YAAY,GAAG,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;AACxE,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;AACpC,gBAAgB,IAAIK,cAAK,CAAC,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC;AACpD,oBAAoB,OAAO;AAC3B,gBAAgB,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC;AAK3C,gBAAgB,YAAY,CAAC,WAAW,CAAC,CAAC;AAC1C,gBAAgB,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;AACtD,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,YAAY;AAC3B,YAAY,YAAY,CAAC,WAAW,EAAE,CAAC;AACvC,YAAY,YAAY,CAAC,WAAW,CAAC,CAAC;AACtC,SAAS,CAAC;AACV,KAAK,EAAE,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;AAC1D,CAAC;AACD,SAAS,YAAY,CAAC,IAAI,EAAE;AAC5B,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,IAAI,EAAE,IAAI,CAAC,MAAM;AACzB,QAAQ,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;AACjC,KAAK,CAAC;AACN,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,QAAQ,MAAM,CAAC,OAAO,GAAGc,wBAAc,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;AACtG,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB;;ACzDU,IAAC,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,kBAAkB;;ACW7C,SAAS,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE;AACjD,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,EAAE,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;AAC9D,IAAI,OAAO,QAAQ,CAAC,kBAAkB,EAAE,iBAAiB,EAAE,eAAe,CAAC,OAAO,OAAO,KAAK,QAAQ,GAAG,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACtJ,CAAC;AACD,SAAS,iBAAiB,CAAC,KAAK,EAAE,OAAO,EAAE;AAC3C,IAAI,IAAI,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,IAAI,aAAa,GAAGC,yBAAgB,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,IAAI,iBAAiB,GAAG,oBAAoB,CAAC;AACjD,QAAQ,MAAM,EAAE,MAAM;AACtB,QAAQ,KAAK,EAAE,KAAK;AACpB,QAAQ,OAAO,EAAE,OAAO;AACxB,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,WAAW,GAAG,iBAAiB,CAAC,WAAW,EAAE,SAAS,GAAG,iBAAiB,CAAC,SAAS,CAAC;AAC7F,IAAI,IAAI,EAAE,GAAG,OAAO,CAAC,QAAQ,EAAE,QAAQ,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AAClE,IAAI,IAAI,QAAQ,GAAGC,mBAAa,CAAC;AACjC,QAAQ,KAAK;AACb,QAAQC,wBAAkB,CAAC,SAAS,CAAC;AACrC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;AAClC,IAAI,IAAI,QAAQ,GAAG,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,YAAY;AACnE,QAAQ,OAAO,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;AACpD,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,EAAE,GAAGtB,gBAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAEnG,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,GAAG,EAAE;AACrC,QAAQ,OAAO,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC;AAClC,QAAQ,OAAO,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC;AACtC,KAAK;AACL,IAAI,IAAI,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7B,IAAI,IAAI,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;AACtD,QAAQ,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,QAAQ,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;AACxE,KAAK;AACL,IAAIA,gBAAK,CAAC,SAAS,CAAC,YAAY;AAChC,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;AACxC,QAAQ,IAAI,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,OAAO,EAAE;AAChE,YAAY,UAAU,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;AAChD,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,YAAY;AAC3B,YAAY,cAAc,EAAE,CAAC;AAC7B,YAAY,OAAO,EAAE,CAAC;AACtB,SAAS,CAAC;AACV,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnB,IAAI,IAAI,UAAU,GAAGA,gBAAK,CAAC,OAAO,CAAC,YAAY;AAC/C,QAAQ,IAAI,KAAK,GAAG,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnD,QAAQ,OAAO;AACf,YAAY,OAAO,EAAE,KAAK;AAC1B,YAAY,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI;AACtC,YAAY,aAAa,EAAE,KAAK,GAAGQ,kBAAa,CAAC,KAAK,GAAGA,kBAAa,CAAC,KAAK;AAC5E,YAAY,KAAK,EAAE,KAAK;AACxB,SAAS,CAAC;AACV,KAAK,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1B,IAAI,IAAI,MAAM,GAAG,WAAW,KAAK,SAAS,GAAG,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;AACzE,IAAI,IAAI,SAAS,GAAGR,gBAAK,CAAC,WAAW,EAAE,UAAU,OAAO,EAAE;AAC1D,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAClD,QAAQ,UAAU,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;AACrD,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpB,IAAI,IAAI,OAAO,GAAGA,gBAAK,CAAC,WAAW,CAAC,UAAU,SAAS,EAAE;AACzD,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAClD,QAAQ,UAAU,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;AACrD,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnB,IAAI,IAAI,eAAe,GAAGA,gBAAK,CAAC,WAAW,CAAC,UAAU,OAAO,EAAE,EAAE,OAAO,QAAQ,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACrI,IAAI,OAAOA,gBAAK,CAAC,OAAO,CAAC,YAAY;AACrC,QAAQ,OAAO;AACf,YAAY,MAAM,EAAE,MAAM;AAC1B,YAAY,IAAI,EAAE,MAAM,CAAC,IAAI;AAC7B,YAAY,KAAK,EAAE,aAAa,CAAC,MAAM,CAAC;AACxC,YAAY,aAAa,EAAE,MAAM,CAAC,aAAa;AAC/C,YAAY,SAAS,EAAE,SAAS;AAChC,YAAY,OAAO,EAAE,OAAO;AAC5B,YAAY,eAAe,EAAE,eAAe;AAC5C,SAAS,CAAC;AACV,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,eAAe,CAAC,CAAC,CAAC;AAC9D,CAAC;AACD,SAAS,eAAe,CAAC,OAAO,EAAE;AAClC,IAAI,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,CAAC;AAChH,IAAIU,yBAAkB,CAAC,KAAK,EAAEC,mBAAY,CAAC,KAAK,CAAC,CAAC;AAClD,IAAI,mBAAmB,CAAC,WAAW,CAAC,CAAC;AACrC,IAAI,yBAAyB,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;AAC9D,CAAC;AACD,SAAS,mBAAmB,CAAC,WAAW,EAAE;AAC1C,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC,EAAE,EAAE,WAAW,GAAG,aAAa,CAAC,EAAE;AAChE,IAAI,IAAI,sBAAsB,GAAG;AACjC,QAAQ,aAAa;AACrB,QAAQ,cAAc;AACtB,QAAQ,UAAU;AAClB,QAAQ,mBAAmB;AAC3B,KAAK,CAAC;AACN,IAAIT,iBAAS,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;AAC7E,CAAC;AACD,SAAS,yBAAyB,CAAC,WAAW,EAAE,iBAAiB,EAAE;AACnE,IAAI,IAAI,WAAW,KAAK,UAAU,IAAI,iBAAiB,EAAE;AACzD,QAAQ,UAAU,CAAC,OAAO,KAAK,KAAK,IAAIA,iBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3D,KAAK;AACL,CAAC;AACM,SAAS,aAAa,CAAC,MAAM,EAAE;AACtC,IAAI,OAAOa,yBAAe,CAAC,MAAM,CAAC,MAAM,CAAC;AACzC,QAAQ,IAAIC,gBAAW,CAAC,EAAE,aAAa,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC;AACzD,UAAU,MAAM,CAAC,KAAK,CAAC;AACvB,CAAC;AACM,SAAS,oBAAoB,CAAC,EAAE,EAAE;AACzC,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;AACnE,IAAI,OAAO,WAAW,CAAC,YAAY;AACnC,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,IAAI,OAAO,KAAK,SAAS,EAAE;AACnC,YAAY,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC;AAC5D,SAAS;AACT,QAAQ,IAAI,WAAW,GAAG,OAAO,CAAC,WAAW;AAC7C,aAAa,CAAC,EAAE,GAAG,MAAM,CAAC,cAAc,CAAC,UAAU,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC;AACzG,YAAY,aAAa,CAAC;AAC1B,QAAQ,IAAI,iBAAiB,GAAGC,cAAQ,CAACA,cAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,2BAA2B,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;AACzK,QAAQ,IAAI,UAAU,CAAC,OAAO,KAAK,KAAK,EAAE;AAC1C,YAAY,eAAe,CAAC,iBAAiB,CAAC,CAAC;AAC/C,SAAS;AAGT,QAAQ,IAAI,OAAO,CAAC,IAAI,EAAE;AAC1B,YAAY,iBAAiB,CAAC,WAAW,GAAG,SAAS,CAAC;AACtD,SAAS;AACT,QAAQ,OAAO,iBAAiB,CAAC;AACjC,KAAK,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AACjC;;AC7HO,SAAS,kBAAkB,CAAC,KAAK,EAAE,OAAO,EAAE;AACnD,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,EAAE,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;AAC9D,IAAI,OAAO,QAAQ,CAAC,oBAAoB,EAAE,mBAAmB,EAAE,eAAe,CAAC,OAAO,OAAO,KAAK,QAAQ,GAAG,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAC1J,CAAC;AACD,SAAS,mBAAmB,CAAC,KAAK,EAAE,OAAO,EAAE;AAC7C,IAAI,IAAI,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,IAAI,aAAa,GAAGG,yBAAgB,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,IAAI,iBAAiB,GAAG,oBAAoB,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;AACrG,IAAI,IAAI,WAAW,GAAG,iBAAiB,CAAC,WAAW,EAAE,SAAS,GAAG,iBAAiB,CAAC,SAAS,CAAC;AAC7F,IAAI,IAAI,EAAE,GAAG,OAAO,CAAC,QAAQ,EAAE,QAAQ,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AAOlE,IAAI,IAAI,cAAc,GAAGpB,gBAAK,CAAC,MAAM,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC;AACjE,IAAI,cAAc,CAAC,OAAO,KAAK,cAAc,CAAC,OAAO,GAAG,WAAW,KAAK,SAAS,CAAC,CAAC;AACnF,IAAI,IAAI,QAAQ,GAAGqB,mBAAa,CAAC;AACjC,QAAQ,KAAK;AACb,QAAQC,wBAAkB,CAAC,SAAS,CAAC;AACrC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;AAClC,IAAI,IAAI,QAAQ,GAAG,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,YAAY;AACnE,QAAQ,OAAO,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;AACpD,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,EAAE,GAAGtB,gBAAK,CAAC,QAAQ,CAACuB,qBAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,eAAe,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,kBAAkB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACzG,IAAI,IAAIC,uBAAc,CAAC,eAAe,CAAC,KAAK,QAAQ,EAAE;AACtD,QAAQ,kBAAkB,CAACD,qBAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnD,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;AACtD,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;AAC/D,QAAQE,8BAAqB,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;AACxD,KAAK;AAML,IAAIzB,gBAAK,CAAC,SAAS,CAAC,YAAY;AAGhC,QAAQ,IAAI,EAAE,GAAG,UAAU,CAAC,YAAY;AACxC,YAAY,IAAI,QAAQ,CAAC,QAAQ,EAAE;AACnC,gBAAgB,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACtD,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,YAAY,EAAE,OAAO,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;AAGxD,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,SAAS,GAAGA,gBAAK,CAAC,WAAW,CAAC,UAAU,OAAO,EAAE;AACzD,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAClD,QAAQ,kBAAkB,CAACuB,qBAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnD,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnB,IAAI,IAAI,OAAO,GAAGvB,gBAAK,CAAC,WAAW,CAAC,UAAU,SAAS,EAAE;AACzD,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAClD,QAAQ,kBAAkB,CAACuB,qBAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnD,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnB,IAAIvB,gBAAK,CAAC,SAAS,CAAC,YAAY,EAAE,OAAO,QAAQ,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC/E,IAAI,OAAO;AACX,QAAQ,cAAc,CAAC,OAAO,GAAG,eAAe,GAAG,KAAK,CAAC;AACzD,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE;AAClD,KAAK,CAAC;AACN;;AChEO,SAAS,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE;AACjD,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,EAAE,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;AAC9D,IAAI,IAAI,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,IAAI,aAAa,GAAGoB,yBAAgB,CAAC,MAAM,CAAC,CAAC;AACjD,IAAI,IAAI,iBAAiB,GAAG,oBAAoB,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;AACrG,IAAI,IAAI,EAAE,GAAG,OAAO,CAAC,QAAQ,EAAE,QAAQ,GAAG,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AAClE,IAAI,IAAI,EAAE,GAAGpB,gBAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACzE,IAAI0B,8BAAqB,CAAC,QAAQ,CAAC,CAAC;AACpC,IAAI,IAAI,gBAAgB,GAAG,QAAQ,IAAIF,uBAAc,CAAC,QAAQ,CAAC,CAAC;AAChE,IAAI,IAAI,QAAQ,KAAK,gBAAgB,KAAK,IAAI,IAAI,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,gBAAgB,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,EAAE;AAChJ,QAAQ,IAAI,OAAO,GAAG,gBAAgB,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;AACvE,QAAQC,8BAAqB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,IAAI,kBAAkB,GAAG,cAAc,EAAE,CAAC;AAC9C,IAAI,IAAI,SAAS,GAAGzB,gBAAK,CAAC,WAAW,CAAC,UAAU,OAAO,EAAE;AACzD,QAAQ,IAAI,CAAC,gBAAgB,EAAE;AAC/B,YAAY,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;AACrF,SAAS;AACT,QAAQ,IAAI,OAAO,GAAG,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC1D,QAAQ,WAAW,CAACuB,qBAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACpD,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC3B,IAAI,IAAI,OAAO,GAAGvB,gBAAK,CAAC,WAAW,CAAC,UAAU,OAAO,EAAE;AACvD,QAAQ,IAAI,CAAC,gBAAgB,EAAE;AAC/B,YAAY,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;AACrF,SAAS;AACT,QAAQ,IAAI,OAAO,GAAG,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACxD,QAAQ,WAAW,CAACuB,qBAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACpD,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC3B,IAAI,IAAI,SAAS,GAAGvB,gBAAK,CAAC,WAAW,CAAC,YAAY;AAClD,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;AACtB,QAAQ,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AACtD,YAAY,IAAI,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AACrC,SAAS;AACT,QAAQE,iBAAS,CAAC,CAAC,kBAAkB,EAAE,EAAE,EAAE,CAAC,CAAC;AAC7C,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAChC,QAAQ,IAAI,QAAQ,GAAGmB,mBAAa,CAAC;AACrC,YAAY,KAAK;AACjB,YAAYC,wBAAkB,CAAC,SAAS,CAAC;AACzC,SAAS,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;AACtC,QAAQ,IAAI,QAAQ,GAAG,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,YAAY;AACvE,YAAY,OAAO,MAAM,CAAC,UAAU,CAACL,cAAQ,CAACA,cAAQ,CAAC,EAAE,EAAE,iBAAiB,CAAC,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AAC1G,SAAS,CAAC,CAAC;AACX,QAAQ,WAAW,CAACM,qBAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC5C,KAAK,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,iBAAiB,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAChF,IAAI,IAAI,KAAK,GAAGvB,gBAAK,CAAC,WAAW,CAAC,YAAY;AAC9C,QAAQ,WAAW,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnB,IAAI,OAAO,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;AAC3F;;ACnCO,SAAS,mBAAmB,CAAC,QAAQ,EAAE;AAC9C,IAAI,IAAI,SAAS,GAAGwB,uBAAc,CAAC,QAAQ,CAAC,CAAC;AAC7C,IAAI,OAAO,QAAQ,CAAC,qBAAqB,EAAE,oBAAoB,EAAE,SAAS;AAC1E,QAAQ,SAAS,CAAC,YAAY,CAAC;AAK/B,UAAU,eAAe,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;AACvC,CAAC;AACD,SAAS,oBAAoB,CAAC,QAAQ,EAAE;AACxC,IAAIE,8BAAqB,CAAC,QAAQ,CAAC,CAAC;AACpC,IAAI,IAAI,EAAE,GAAG1B,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,gBAAgB,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,mBAAmB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7F,IAAI,IAAI,EAAE,GAAGA,gBAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,eAAe,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,kBAAkB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3F,IAAI,IAAI,gBAAgB,GAAGwB,uBAAc,CAAC,QAAQ,CAAC,CAAC;AAIpD,IAAI,IAAI,gBAAgB,KAAK,QAAQ,EAAE;AACvC,QAAQ,mBAAmB,CAAC,QAAQ,CAAC,CAAC;AACtC,QAAQ,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AACrC,KAAK;AACL,SAAS;AACT,QAAQC,8BAAqB,CAAC,QAAQ,EAAEE,0BAAiB,CAAC,eAAe,CAAC,CAAC,CAAC;AAC5E,KAAK;AACL,IAAI,IAAI,OAAO,GAAG3B,gBAAK,CAAC,WAAW,CAAC,UAAU,SAAS,EAAE;AACzD,QAAQ,IAAI,OAAO,GAAG,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAC1D,QAAQ,kBAAkB,CAACuB,qBAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC3D,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC3B,IAAI,IAAI,SAAS,GAAGvB,gBAAK,CAAC,WAAW,CAAC,UAAU,OAAO,EAAE;AACzD,QAAQ,IAAI,OAAO,GAAG,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC1D,QAAQ,kBAAkB,CAACuB,qBAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC3D,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC3B,IAAI,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;AACtD;;ACrDO,SAAS,YAAY,CAAC,QAAQ,EAAE;AACvC,IAAI,IAAI,SAAS,GAAGC,uBAAc,CAAC,QAAQ,CAAC,CAAC;AAC7C,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,aAAa,EAAE,SAAS;AAC5D,QAAQ,SAAS,CAAC,YAAY,CAAC;AAK/B,UAAU,eAAe,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;AACvC,CAAC;AACD,SAAS,aAAa,CAAC,QAAQ,EAAE;AACjC,IAAIE,8BAAqB,CAAC,QAAQ,CAAC,CAAC;AACpC,IAAI,IAAI,gBAAgB,GAAG1B,gBAAK,CAAC,OAAO,CAAC,YAAY,EAAE,OAAOwB,uBAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACvG,IAAI,IAAI,UAAU,GAAGxB,gBAAK,CAAC,WAAW,CAAC,YAAY,EAAE,OAAO2B,0BAAiB,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxG,IAAI,IAAI,gBAAgB,CAAC,QAAQ,EAAE;AACnC,QAAQ,gBAAgB,CAAC,YAAY,EAAE,CAAC;AACxC,QAAQF,8BAAqB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,OAAO,CAAC,CAAC;AAClE,KAAK;AACL,IAAIzB,gBAAK,CAAC,SAAS,CAAC,YAAY,EAAE,OAAO,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC3F,IAAI,IAAI,OAAO,GAAG,oBAAoB,CAACA,gBAAK,CAAC,WAAW,CAAC,UAAU,WAAW,EAAE;AAChF,QAAQ,OAAO,gBAAgB,CAAC,MAAM,CAAC,UAAU,OAAO,EAAE;AAC1D,YAAYyB,8BAAqB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACrD,YAAY,WAAW,EAAE,CAAC;AAC1B,SAAS,CAAC,CAAC;AACX,KAAK,EAAE,CAAC,gBAAgB,CAAC,CAAC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AACpD,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;AAChC,IAAI,OAAOzB,gBAAK,CAAC,OAAO,CAAC,YAAY;AACrC,QAAQ,OAAO;AACf,YAAY,IAAI,EAAE,MAAM,CAAC,IAAI;AAC7B,YAAY,aAAa,EAAE,MAAM,CAAC,aAAa;AAC/C,YAAY,KAAK,EAAE,aAAa,CAAC,MAAM,CAAC;AACxC,SAAS,CAAC;AACV,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AACjB;;;;;;;;;;;;;;;;"}