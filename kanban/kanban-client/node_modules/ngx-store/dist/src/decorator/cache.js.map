{"version":3,"sources":["../../../src/decorator/cache.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAsB,MAAM,cAAc,CAAC;AAC7D,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAEzC;IAAA;IAiCA,CAAC;IA9BiB,iBAAW,GAAzB,UAA0B,cAAkC;QACxD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACb,KAAK,CAAC,GAAG,CAAC,4BAA4B,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;YAC9D,SAAS,GAAG,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;YAC1C,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACpB,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QACD,KAAK,CAAC,GAAG,CAAC,4BAA4B,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;QACzD,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7C,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC/C,SAAS,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACpB,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAEa,YAAM,GAApB,UAAqB,SAAoB;QACrC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;IAEa,SAAG,GAAjB,UAAkB,GAAW;QACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEgB,SAAG,GAApB,UAAqB,SAAoB;QACrC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3B,KAAK,CAAC,GAAG,CAAC,gBAAgB,GAAG,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QAC3D,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAC7C,CAAC;IA/Ba,WAAK,GAA2B,IAAI,GAAG,EAAE,CAAC;IAgC5D,YAAC;CAjCD,AAiCC,IAAA;SAjCY,KAAK","file":"cache.js","sourceRoot":"","sourcesContent":["import { CacheItem, CacheItemInterface } from './cache-item';\nimport { debug } from '../config/config';\n\nexport class Cache {\n    public static items: Map<string, CacheItem> = new Map();\n\n    public static getCacheFor(cacheCandidate: CacheItemInterface): CacheItem {\n        let cacheItem = this.get(cacheCandidate.key);\n        if (!cacheItem) {\n            debug.log('Created new CacheItem for ' + cacheCandidate.name);\n            cacheItem = new CacheItem(cacheCandidate);\n            this.set(cacheItem);\n            return cacheItem;\n        }\n        debug.log('Loaded prior CacheItem of ' + cacheItem.name);\n        cacheItem.addTargets(cacheCandidate.targets);\n        cacheItem.addServices(cacheCandidate.services);\n        cacheItem.addUtilities(cacheCandidate.utilities);\n        this.set(cacheItem);\n        return cacheItem;\n    }\n\n    public static remove(cacheItem: CacheItem): boolean {\n        return this.items.delete(cacheItem.key);\n    }\n\n    public static get(key: string): CacheItem {\n        return this.items.get(key);\n    }\n\n    protected static set(cacheItem: CacheItem): void {\n        if (!this.get(cacheItem.key)) {\n            debug.log('CacheItem for ' + cacheItem.key, cacheItem);\n        }\n        this.items.set(cacheItem.key, cacheItem);\n    }\n}\n"]}