{"version":3,"sources":["../../../../src/utility/storage/cookies-storage.ts"],"names":[],"mappings":"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","file":"cookies-storage.js","sourceRoot":"","sourcesContent":["import { Config, debug } from '../../config';\nimport { NgxStorage } from './storage';\nimport { StorageName, WebStorageUtility } from '../webstorage-utility';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/interval';\n\nexport interface WebStorage extends Storage {\n   setItem(key: string, data: string, expirationDate?: Date): void;\n}\n\nexport class CookiesStorage extends NgxStorage {\n    protected cachedCookieString: string;\n    protected cachedItemsMap: Map<string, string>;\n\n    constructor() {\n        super();\n        this.getAllItems();\n        if (Config.cookiesCheckInterval) {\n            Observable.interval(Config.cookiesCheckInterval)\n                .subscribe(() => {\n                    if (!this.externalChanges.observers.length) {\n                        return; // don't run if there are no set subscriptions\n                    }\n                    this.getAllItems();\n                });\n        }\n    }\n\n    public get type(): StorageName {\n        return 'cookiesStorage';\n    }\n\n    public get length(): number {\n        return this.getAllKeys().length;\n    }\n\n    public key(index: number): string | any {\n        return this.getAllKeys()[index];\n    }\n\n    public getItem(key: string): string | any {\n        return this.getAllItems().get(key);\n    }\n\n    public removeItem(key: string): void {\n        if (typeof document === 'undefined') return;\n        let domain = this.resolveDomain(Config.cookiesScope);\n        domain = (domain) ? 'domain=' + domain + ';' : '';\n        document.cookie = key + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/;' + domain;\n        this.cachedItemsMap.delete(key);\n    }\n\n    /**\n     * @param key\n     * @param value\n     * @param expirationDate passing null affects in lifetime cookie\n     */\n    public setItem(key: string, value: string, expirationDate?: Date): void {\n        if (typeof document === 'undefined') return;\n        let domain = this.resolveDomain(Config.cookiesScope);\n        debug.log('Cookies domain:', domain);\n        domain = (domain) ? 'domain=' + domain + ';' : '';\n        let utcDate = '';\n        if (expirationDate instanceof Date) {\n            utcDate = expirationDate.toUTCString();\n        } else if (expirationDate === null) {\n            utcDate = 'Fri, 18 Dec 2099 12:00:00 GMT';\n        }\n        let expires = utcDate ? '; expires=' + utcDate : '';\n        let cookie = key + '=' + value + expires + ';path=/;' + domain;\n        debug.log('Cookie`s set instruction:', cookie);\n        this.cachedItemsMap.set(key, value);\n        document.cookie = cookie;\n    }\n\n    public clear(): void {\n        this.getAllKeys().forEach(key => this.removeItem(key));\n    }\n\n    public forEach(callbackFn: (value: string, key: string) => any): void {\n        return this.getAllItems().forEach((value, key) => callbackFn(value, key));\n    }\n\n    protected getAllKeys(): Array<string> {\n        return Array.from(this.getAllItems().keys());\n    }\n\n    // TODO: consider getting cookies from all paths\n    protected getAllItems(): Map<string, string> {\n        if (this.cachedCookieString === document.cookie) { // No changes\n            return this.cachedItemsMap;\n        }\n        let map = new Map();\n        if (typeof document === 'undefined') return map;\n        let cookies = document.cookie.split(';');\n\n        for (let i = 0; i < cookies.length; i++) {\n            let cookie = cookies[i].trim();\n            let eqPos = cookie.indexOf(\"=\");\n            let key = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n            let value = eqPos > -1 ? cookie.substr(eqPos + 1, cookie.length): cookie;\n            map.set(key, value);\n        }\n        // detect changes and emit events\n        if (this.cachedItemsMap) {\n            map.forEach((value, key) => {\n                let cachedValue = this.cachedItemsMap.get(key);\n                cachedValue = (cachedValue !== undefined) ? cachedValue : null;\n                if (value !== cachedValue) {\n                    this.emitEvent(\n                        key,\n                        WebStorageUtility.getGettable(value),\n                        WebStorageUtility.getGettable(cachedValue),\n                    );\n                }\n            });\n            this.cachedItemsMap.forEach((value, key) => {\n                if (!map.has(key)) {\n                    this.emitEvent(key, null, WebStorageUtility.getGettable(value));\n                }\n            });\n        }\n        this.cachedCookieString = document.cookie;\n        return this.cachedItemsMap = map;\n    }\n\n    /**\n     * domain.com         + path=\".\"          = .domain.com\n     * domain.com         + path=\".sub.\"      = .sub.domain.com\n     * sub.domain.com     + path=\"sub.\"       = sub.domain.com\n     * www.sub.domain.com + path=\".\"          = .sub.domain.com\n     * localhost          + path=\".whatever.\" = localhost\n     * @param path\n     * @returns {string}\n     */\n    protected resolveDomain(path: string): string {\n        if (!path) return '';\n        let hostname = document.domain;\n        if ((hostname.match(/\\./g) || []).length < 1) {\n            return '';\n        }\n        let www = (path[0] !== '.' && hostname.indexOf('www.') === 0) ? 'www.' : '';\n        return www + path + this.getDomain();\n    }\n\n    /**\n     * This function determines base domain by setting cookie at the highest level possible\n     * @url http://rossscrivener.co.uk/blog/javascript-get-domain-exclude-subdomain\n     * @returns {string}\n     */\n    protected getDomain(): string {\n        let i = 0;\n        let domain = document.domain;\n        let domainParts = domain.split('.');\n        let s = '_gd' + (new Date()).getTime();\n        while (i < (domainParts.length - 1) && document.cookie.indexOf(s + '=' + s) == -1) {\n            domain = domainParts.slice(-1 - (++i)).join('.');\n            document.cookie = s + '=' + s + ';domain=' + domain + ';';\n        }\n        document.cookie = s + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + domain + ';';\n        return domain;\n    }\n}\n\nexport const cookiesStorage = new CookiesStorage();\n"]}