{"version":3,"sources":["../../../src/utility/webstorage-utility.ts"],"names":[],"mappings":"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","file":"webstorage-utility.js","sourceRoot":"","sourcesContent":["import { DecoratorConfig } from '../decorator/webstorage';\nimport { WebStorage } from './storage/cookies-storage';\nimport { Cache } from '../decorator/cache';\nimport { debug } from '../config';\nimport { Subject } from 'rxjs/Subject';\nimport { NgxStorageEvent } from './storage/storage-event';\nimport { Observable } from 'rxjs/Observable';\nexport type StorageName = 'localStorage' | 'sessionStorage' | 'cookiesStorage' | 'sharedStorage';\n\nexport class WebStorageUtility {\n    protected _prefix: string = '';\n    protected _storage: WebStorage;\n    protected _changes: Subject<NgxStorageEvent> = new Subject();\n\n    public static getSettable(value: any): string {\n        return JSON.stringify(value);\n    }\n\n    public static getGettable(value: string): any {\n        if (value === 'undefined') return null;\n        try {\n            return JSON.parse(value);\n        } catch(e) {\n            return value;\n        }\n    }\n\n    public constructor(storage: WebStorage, prefix: string, previousPrefix?: string) {\n        this._storage = storage;\n        this._prefix = prefix;\n\n        // handle previousPrefix for backward-compatibility and safe config changes below\n        if (prefix === previousPrefix) return;\n        if (previousPrefix === null) return;\n        if (previousPrefix === undefined) return;\n        debug.log(this.getStorageName() + ' > Detected prefix change from ' + previousPrefix + ' to ' + prefix);\n        this.forEach((value, key) => {\n            // ignore config settings when previousPrefix = ''\n            if (key.startsWith(previousPrefix) && !key.startsWith('NGX-STORE_')) {\n                let nameWithoutPrefix = this.trimPrefix(key);\n                this.set(nameWithoutPrefix, this._storage.getItem(key));\n\n                if (previousPrefix !== '') {\n                    this._storage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    public get prefix(): string {\n        return this._prefix;\n    }\n\n    public get keys(): Array<string> {\n        let keys = [];\n        this.forEach((value, key) => keys.push(key));\n        return keys;\n    }\n\n    public get changes(): Observable<NgxStorageEvent> {\n        return this._changes.asObservable();\n    }\n\n    public getStorage() {\n        return this._storage;\n    }\n\n    public getStorageKey(key: string, prefix?: string): string {\n        prefix = (typeof prefix === 'string') ? prefix : this._prefix;\n        return `${prefix}${key}`;\n    }\n\n    public getStorageName(): StorageName {\n        return this._storage.type || (this._storage === localStorage) ? 'localStorage' : 'sessionStorage';\n    }\n\n    public get(key: string, config: DecoratorConfig = {}): any {\n        let storageKey = this.getStorageKey(key, config.prefix);\n        let value = this._storage.getItem(storageKey);\n        return this.getGettable(value);\n    }\n\n    public set<T>(key: string, value: T, config: DecoratorConfig = {}): T {\n        if (value === null || value === undefined) {\n            this.remove(key);\n            return null;\n        }\n        try {\n            let storageKey = this.getStorageKey(key, config.prefix);\n            let storable = this.getSettable(value);\n            this.emitEvent(key, value);\n            this._storage.setItem(storageKey, storable, config.expires);\n        } catch (error) {\n            console.warn(`[ngx-store] ${this.getStorageName()}: following error occurred while trying to save ${key} =`, value);\n            console.error(error);\n        }\n        return value;\n    }\n\n    // TODO return true if item existed and false otherwise (?)\n    public remove(key: string, noEvent?: boolean): void {\n        let storageKey = this.getStorageKey(key);\n        if (!noEvent) {\n            this.emitEvent(key, null);\n        }\n        this._storage.removeItem(storageKey);\n        let cacheItem = Cache.get(key);\n        if (cacheItem) {\n            cacheItem.resetProxy();\n        }\n    }\n\n    public clear() {\n        this.emitEvent(null, null, null);\n        this.forEach((value, key) => {\n            this.remove(key, true);\n        });\n    }\n\n    public forEach(callbackFn: (value: any, key: string) => any): void {\n        if (typeof this._storage.forEach === 'function') {\n            return this._storage.forEach((value, key) => callbackFn(this.getGettable(value), key));\n        }\n        Object.keys(this._storage).forEach((key) => {\n            callbackFn(this.getGettable(this._storage[key]), key);\n        });\n    }\n\n    public getSettable(value: any): string {\n        return WebStorageUtility.getSettable(value);\n    }\n\n    public getGettable(value: string): any {\n        return WebStorageUtility.getGettable(value);\n    }\n\n    public trimPrefix(key: string): string {\n       return key.replace(this.prefix, '');\n    }\n\n    protected emitEvent(key: string, newValue: any, oldValue?: any) {\n        let event = new NgxStorageEvent(this.getStorageName(), key, this._storage);\n        event.oldValue = (oldValue !== undefined) ? oldValue : this.get(key);\n        event.newValue = newValue;\n        this._changes.next(event);\n    }\n}\n"]}