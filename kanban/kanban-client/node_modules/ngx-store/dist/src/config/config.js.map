{"version":3,"sources":["../../../src/config/config.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAC;AAEpC,mEAAmE;AACnE,qEAAqE;AACrE,mEAAmE;AAEnE,IAAM,aAAa,GAA8B;IAC7C,MAAM,EAAE,MAAM;IACd,cAAc,EAAE,aAAa;IAC7B,SAAS,EAAE,QAAQ;IACnB,aAAa,EAAE,IAAI;IACnB,YAAY,EAAE,EAAE;IAChB,oBAAoB,EAAE,CAAC;IACvB,SAAS,EAAE,KAAK;CACnB,CAAC;AAKF,IAAI,WAAW,GAA8B,EAAE,CAAC;AAChD,IAAI,kBAAkB,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAExD,EAAE,CAAC,CAAC,OAAO,eAAe,KAAK,QAAQ,CAAC,CAAC,CAAC;IACtC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;AACrD,CAAC;AAED,EAAE,CAAC,CAAC,kBAAkB,KAAK,SAAS,IAAI,kBAAkB,KAAK,IAAI,CAAC,CAAC,CAAC;IAClE,WAAW,CAAC,cAAc,GAAG,kBAAkB,CAAC;AACpD,CAAC;AAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC;IAClD,WAAW,CAAC,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC;AAC9D,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,IAAI,iBAAiB,GAAG,aAAa,CAAC;AAE7C,yEAAyE;AACzE,MAAM,CAAC,IAAM,MAAM,GACf,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE,iBAAiB,EAAE,WAAW,CAAC,CAAC;AAErE,MAAM,CAAC,IAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAC7E,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC","file":"config.js","sourceRoot":"","sourcesContent":["import { WebStorageConfigInterface } from './config.interface';\nimport { ConfigHelper } from './config.helper';\nimport { Debugger } from 'ts-debug';\n\n// TODO allow to set different config for local and session storage\n// TODO check if NGXSTORE_CONFIG implements WebStorageConfigInterface\n// TODO allow to set configuration in node-config (`config` on npm)\n\nconst DefaultConfig: WebStorageConfigInterface = {\n    prefix: 'ngx_',\n    previousPrefix: 'angular2ws_',\n    clearType: 'prefix',\n    mutateObjects: true,\n    cookiesScope: '',\n    cookiesCheckInterval: 0,\n    debugMode: false,\n};\n\n// take configuration provided as a global variable\ndeclare const NGXSTORE_CONFIG: WebStorageConfigInterface;\n\nlet ConfigFills: WebStorageConfigInterface = {};\nlet localStoragePrefix = ConfigHelper.getItem('prefix');\n\nif (typeof NGXSTORE_CONFIG === 'object') {\n    ConfigFills = Object.assign({}, NGXSTORE_CONFIG);\n}\n\nif (localStoragePrefix !== undefined && localStoragePrefix !== null) {\n    ConfigFills.previousPrefix = localStoragePrefix;\n} else if (ConfigFills.previousPrefix === undefined) {\n    ConfigFills.previousPrefix = DefaultConfig.previousPrefix;\n}\n\n/**\n * @deprecated define global variable `NGXSTORE_CONFIG` instead\n */\nexport let WEBSTORAGE_CONFIG = DefaultConfig;\n\n// merge default config, deprecated config and global config all together\nexport const Config: WebStorageConfigInterface =\n    Object.assign({}, DefaultConfig, WEBSTORAGE_CONFIG, ConfigFills);\n\nexport const debug = new Debugger(console, Config.debugMode, '[ngx-store] ');\nConfigHelper.setItem('prefix', Config.prefix);\n"]}