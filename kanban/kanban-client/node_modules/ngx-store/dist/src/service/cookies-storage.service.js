var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { cookiesStorage } from '../utility/storage/cookies-storage';
import { WebStorageService } from './webstorage.service';
import { cookiesStorageUtility } from '../utility';
import 'rxjs/add/operator/merge';
import { Injectable } from '@angular/core';
var CookiesStorageService = /** @class */ (function (_super) {
    __extends(CookiesStorageService, _super);
    function CookiesStorageService() {
        var _this = _super.call(this, cookiesStorageUtility) || this;
        _this._changes = cookiesStorage.externalChanges.asObservable()
            .merge(cookiesStorageUtility.changes);
        return _this;
    }
    CookiesStorageService.prototype.set = function (key, value, expirationDate) {
        return this.utility.set(key, value, { expires: expirationDate });
    };
    CookiesStorageService.keys = [];
    CookiesStorageService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    CookiesStorageService.ctorParameters = function () { return []; };
    return CookiesStorageService;
}(WebStorageService));
export { CookiesStorageService };
//# sourceMappingURL=cookies-storage.service.js.map