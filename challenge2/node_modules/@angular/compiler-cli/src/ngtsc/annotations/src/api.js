/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("@angular/compiler-cli/src/ngtsc/annotations/src/api", ["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29tcGlsZXItY2xpL3NyYy9uZ3RzYy9hbm5vdGF0aW9ucy9zcmMvYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG4vKipcbiAqIFJlc29sdmVzIGFuZCBsb2FkcyByZXNvdXJjZSBmaWxlcyB0aGF0IGFyZSByZWZlcmVuY2VkIGluIEFuZ3VsYXIgbWV0YWRhdGEuXG4gKlxuICogTm90ZSB0aGF0IGBwcmVsb2FkKClgIGFuZCBgbG9hZCgpYCB0YWtlIGEgYHJlc29sdmVkVXJsYCwgd2hpY2ggY2FuIGJlIGZvdW5kXG4gKiBieSBjYWxsaW5nIGByZXNvbHZlKClgLiBUaGVzZSB0d28gc3RlcHMgYXJlIHNlcGFyYXRlZCBiZWNhdXNlIHNvbWV0aW1lcyB0aGVcbiAqIHJlc29sdmVkIFVSTCB0byB0aGUgcmVzb3VyY2UgaXMgbmVlZGVkIGFzIHdlbGwgYXMgaXRzIGNvbnRlbnRzLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFJlc291cmNlTG9hZGVyIHtcbiAgLyoqXG4gICAqIFRydWUgaWYgdGhpcyByZXNvdXJjZSBsb2FkZXIgY2FuIHByZWxvYWQgcmVzb3VyY2VzLlxuICAgKlxuICAgKiBTb21ldGltZXMgYSBgUmVzb3VyY2VMb2FkZXJgIGlzIG5vdCBhYmxlIHRvIGRvIGFzeW5jaHJvbm91cyBwcmUtbG9hZGluZyBvZiByZXNvdXJjZXMuXG4gICAqL1xuICBjYW5QcmVsb2FkOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBJZiB0cnVlLCB0aGUgcmVzb3VyY2UgbG9hZGVyIGlzIGFibGUgdG8gcHJlcHJvY2VzcyBpbmxpbmUgcmVzb3VyY2VzLlxuICAgKi9cbiAgY2FuUHJlcHJvY2VzczogYm9vbGVhbjtcblxuICAvKipcbiAgICogUmVzb2x2ZSB0aGUgdXJsIG9mIGEgcmVzb3VyY2UgcmVsYXRpdmUgdG8gdGhlIGZpbGUgdGhhdCBjb250YWlucyB0aGUgcmVmZXJlbmNlIHRvIGl0LlxuICAgKiBUaGUgcmV0dXJuIHZhbHVlIG9mIHRoaXMgbWV0aG9kIGNhbiBiZSB1c2VkIGluIHRoZSBgbG9hZCgpYCBhbmQgYHByZWxvYWQoKWAgbWV0aG9kcy5cbiAgICpcbiAgICogQHBhcmFtIHVybCBUaGUsIHBvc3NpYmx5IHJlbGF0aXZlLCB1cmwgb2YgdGhlIHJlc291cmNlLlxuICAgKiBAcGFyYW0gZnJvbUZpbGUgVGhlIHBhdGggdG8gdGhlIGZpbGUgdGhhdCBjb250YWlucyB0aGUgVVJMIG9mIHRoZSByZXNvdXJjZS5cbiAgICogQHJldHVybnMgQSByZXNvbHZlZCB1cmwgb2YgcmVzb3VyY2UuXG4gICAqIEB0aHJvd3MgQW4gZXJyb3IgaWYgdGhlIHJlc291cmNlIGNhbm5vdCBiZSByZXNvbHZlZC5cbiAgICovXG4gIHJlc29sdmUoZmlsZTogc3RyaW5nLCBiYXNlUGF0aDogc3RyaW5nKTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBQcmVsb2FkIHRoZSBzcGVjaWZpZWQgcmVzb3VyY2UsIGFzeW5jaHJvbm91c2x5LiBPbmNlIHRoZSByZXNvdXJjZSBpcyBsb2FkZWQsIGl0cyB2YWx1ZVxuICAgKiBzaG91bGQgYmUgY2FjaGVkIHNvIGl0IGNhbiBiZSBhY2Nlc3NlZCBzeW5jaHJvbm91c2x5IHZpYSB0aGUgYGxvYWQoKWAgbWV0aG9kLlxuICAgKlxuICAgKiBAcGFyYW0gcmVzb2x2ZWRVcmwgVGhlIHVybCAocmVzb2x2ZWQgYnkgYSBjYWxsIHRvIGByZXNvbHZlKClgKSBvZiB0aGUgcmVzb3VyY2UgdG8gcHJlbG9hZC5cbiAgICogQHBhcmFtIGNvbnRleHQgSW5mb3JtYXRpb24gcmVnYXJkaW5nIHRoZSByZXNvdXJjZSBzdWNoIGFzIHRoZSB0eXBlIGFuZCBjb250YWluaW5nIGZpbGUuXG4gICAqIEByZXR1cm5zIEEgUHJvbWlzZSB0aGF0IGlzIHJlc29sdmVkIG9uY2UgdGhlIHJlc291cmNlIGhhcyBiZWVuIGxvYWRlZCBvciBgdW5kZWZpbmVkYFxuICAgKiBpZiB0aGUgZmlsZSBoYXMgYWxyZWFkeSBiZWVuIGxvYWRlZC5cbiAgICogQHRocm93cyBBbiBFcnJvciBpZiBwcmUtbG9hZGluZyBpcyBub3QgYXZhaWxhYmxlLlxuICAgKi9cbiAgcHJlbG9hZChyZXNvbHZlZFVybDogc3RyaW5nLCBjb250ZXh0OiBSZXNvdXJjZUxvYWRlckNvbnRleHQpOiBQcm9taXNlPHZvaWQ+fHVuZGVmaW5lZDtcblxuICAvKipcbiAgICogUHJlcHJvY2VzcyB0aGUgY29udGVudCBkYXRhIG9mIGFuIGlubGluZSByZXNvdXJjZSwgYXN5bmNocm9ub3VzbHkuXG4gICAqXG4gICAqIEBwYXJhbSBkYXRhIFRoZSBleGlzdGluZyBjb250ZW50IGRhdGEgZnJvbSB0aGUgaW5saW5lIHJlc291cmNlLlxuICAgKiBAcGFyYW0gY29udGV4dCBJbmZvcm1hdGlvbiByZWdhcmRpbmcgdGhlIHJlc291cmNlIHN1Y2ggYXMgdGhlIHR5cGUgYW5kIGNvbnRhaW5pbmcgZmlsZS5cbiAgICogQHJldHVybnMgQSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIHByb2Nlc3NlZCBkYXRhLiBJZiBubyBwcm9jZXNzaW5nIG9jY3VycywgdGhlXG4gICAqIHNhbWUgZGF0YSBzdHJpbmcgdGhhdCB3YXMgcGFzc2VkIHRvIHRoZSBmdW5jdGlvbiB3aWxsIGJlIHJlc29sdmVkLlxuICAgKi9cbiAgcHJlcHJvY2Vzc0lubGluZShkYXRhOiBzdHJpbmcsIGNvbnRleHQ6IFJlc291cmNlTG9hZGVyQ29udGV4dCk6IFByb21pc2U8c3RyaW5nPjtcblxuICAvKipcbiAgICogTG9hZCB0aGUgcmVzb3VyY2UgYXQgdGhlIGdpdmVuIHVybCwgc3luY2hyb25vdXNseS5cbiAgICpcbiAgICogVGhlIGNvbnRlbnRzIG9mIHRoZSByZXNvdXJjZSBtYXkgaGF2ZSBiZWVuIGNhY2hlZCBieSBhIHByZXZpb3VzIGNhbGwgdG8gYHByZWxvYWQoKWAuXG4gICAqXG4gICAqIEBwYXJhbSByZXNvbHZlZFVybCBUaGUgdXJsIChyZXNvbHZlZCBieSBhIGNhbGwgdG8gYHJlc29sdmUoKWApIG9mIHRoZSByZXNvdXJjZSB0byBsb2FkLlxuICAgKiBAcmV0dXJucyBUaGUgY29udGVudHMgb2YgdGhlIHJlc291cmNlLlxuICAgKi9cbiAgbG9hZChyZXNvbHZlZFVybDogc3RyaW5nKTogc3RyaW5nO1xufVxuXG4vKipcbiAqIENvbnRleHR1YWwgaW5mb3JtYXRpb24gdXNlZCBieSBtZW1iZXJzIG9mIHRoZSBSZXNvdXJjZUxvYWRlciBpbnRlcmZhY2UuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVzb3VyY2VMb2FkZXJDb250ZXh0IHtcbiAgLyoqXG4gICAqIFRoZSB0eXBlIG9mIHRoZSBjb21wb25lbnQgcmVzb3VyY2UuXG4gICAqICogUmVzb3VyY2VzIHJlZmVyZW5jZWQgdmlhIGEgY29tcG9uZW50J3MgYHN0eWxlc2Agb3IgYHN0eWxlVXJsc2AgcHJvcGVydGllcyBhcmUgb2ZcbiAgICogdHlwZSBgc3R5bGVgLlxuICAgKiAqIFJlc291cmNlcyByZWZlcmVuY2VkIHZpYSBhIGNvbXBvbmVudCdzIGB0ZW1wbGF0ZWAgb3IgYHRlbXBsYXRlVXJsYCBwcm9wZXJ0aWVzIGFyZSBvZiB0eXBlXG4gICAqIGB0ZW1wbGF0ZWAuXG4gICAqL1xuICB0eXBlOiAnc3R5bGUnfCd0ZW1wbGF0ZSc7XG5cbiAgLyoqXG4gICAqIFRoZSBhYnNvbHV0ZSBwYXRoIHRvIHRoZSBmaWxlIHRoYXQgY29udGFpbnMgdGhlIHJlc291cmNlIG9yIHJlZmVyZW5jZSB0byB0aGUgcmVzb3VyY2UuXG4gICAqL1xuICBjb250YWluaW5nRmlsZTogc3RyaW5nO1xufVxuIl19