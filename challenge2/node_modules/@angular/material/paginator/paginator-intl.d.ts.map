{"version":3,"file":"paginator-intl.d.ts","sources":["paginator-intl.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Optional } from '@angular/core';\nimport { Subject } from 'rxjs';\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nexport declare class MatPaginatorIntl {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     */\n    readonly changes: Subject<void>;\n    /** A label for the page size selector. */\n    itemsPerPageLabel: string;\n    /** A label for the button that increments the current page. */\n    nextPageLabel: string;\n    /** A label for the button that decrements the current page. */\n    previousPageLabel: string;\n    /** A label for the button that moves to the first page. */\n    firstPageLabel: string;\n    /** A label for the button that moves to the last page. */\n    lastPageLabel: string;\n    /** A label for the range of items within the current page and the length of the whole list. */\n    getRangeLabel: (page: number, pageSize: number, length: number) => string;\n}\n/** @docs-private */\nexport declare function MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl: MatPaginatorIntl): MatPaginatorIntl;\n/** @docs-private */\nexport declare const MAT_PAGINATOR_INTL_PROVIDER: {\n    provide: typeof MatPaginatorIntl;\n    deps: Optional[][];\n    useFactory: typeof MAT_PAGINATOR_INTL_PROVIDER_FACTORY;\n};\n"]}